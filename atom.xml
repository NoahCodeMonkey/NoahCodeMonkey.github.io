<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>NoahCodeMonkey&#39;s Blog</title>
  
  <subtitle>一点点积累，一点点奋斗</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://noahcodemonkey.top/"/>
  <updated>2019-01-10T04:12:11.954Z</updated>
  <id>http://noahcodemonkey.top/</id>
  
  <author>
    <name>NoahCode</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Unity官方案例进阶--Roll a ball</title>
    <link href="http://noahcodemonkey.top/2018/11/15/Unity%E5%AE%98%E6%96%B9%E6%A1%88%E4%BE%8B%E8%BF%9B%E9%98%B6-Roll-a-ball/"/>
    <id>http://noahcodemonkey.top/2018/11/15/Unity官方案例进阶-Roll-a-ball/</id>
    <published>2018-11-15T12:17:06.000Z</published>
    <updated>2019-01-10T04:12:11.954Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://noahcode-blog.oss-cn-beijing.aliyuncs.com/img/Unity%E5%AE%98%E6%96%B9%E6%A1%88%E4%BE%8B%E8%BF%9B%E9%98%B6--Roll%20a%20ball/rollerball_projectheader.png?Expires=1547097119&OSSAccessKeyId=TMP.AQH9LzzUDmtXExw9XNU6EnE2zXWJjL7kAJdQTOYxnpLojK_yLvvuKKge68QYADAtAhR4uNWAxmQGLdj5AXHJwIpzRFHR9wIVAPb3UfDpBO1JoM8PUuK4FwyRWz7g&Signature=vWhPsQ2bJdfrzDDMlLqL%2Bc9IOl8%3D" alt="" style="width:100%"></p><p class="description">经过上一次的学习，我又想改进一下这款 Roll a ball 游戏，首先这款游戏只有胜利没有失败，所以我想定义一个条件来控制它的输赢，因此我想到了如下的方案：<br><br><strong>使我们的玩家控制 Player 在规定时间内达到一定的分数就胜利，反之则失败</strong><br></p><a id="more"></a><h2 id="任务目标"><a href="#任务目标" class="headerlink" title="任务目标"></a>任务目标</h2><p>这里只是大概的目标内容，还有一些细节会在后面完成的时候体现出来。</p><ol><li>完成 PickUp 的随机刷新出现，每隔3秒刷新一个</li><li>做一个倒计时器用于显示游戏剩余时间</li><li>控制分数和时间，若玩家在规定时间内达到分数则显示 You Win！字样，Player 禁止移动；若失败，则小球爆炸并显示 Game Over！ 字样。</li></ol><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>主体还是 Roll a ball 的内容，其中有一些小改动，我们在此完成一下。</p><h3 id="删除场景中的所有-PickUp"><a href="#删除场景中的所有-PickUp" class="headerlink" title="删除场景中的所有 PickUp"></a>删除场景中的所有 PickUp</h3><p>因为我们要完成的是随机刷新 PickUp 物体，所以我们不需要在场景中添加 PickUp 物体，到时候会用到一个新的知识来完成我们的随机显示 PickUp 物体的操作。</p><h3 id="添加倒计时文本"><a href="#添加倒计时文本" class="headerlink" title="添加倒计时文本"></a>添加倒计时文本</h3><p>因为我们需要让玩家知道游戏的剩余时间，所以我们需要添加一个用来显示时间的文本，位置我选择在了中间顶部的位置，其他设置随意。</p><h3 id="细节修改"><a href="#细节修改" class="headerlink" title="细节修改"></a>细节修改</h3><p>因为最终我们显示的文本不再是只有胜利，所以将我们之前创建的 WinText 改名为 ResultText。</p><h3 id="遗漏补充"><a href="#遗漏补充" class="headerlink" title="遗漏补充"></a>遗漏补充</h3><p>在官方的案例中，PickUp 是有一个黄色的材质，而我在之前做的项目中忘记添加了，所以我现在添加了一个黄色材质球给我们的 PickUp。</p><p><img src="http://pij34n7du.bkt.clouddn.com/pjt3_img01.png" alt="诶呀，图片加载出了点问题！"></p><p>以上就是我们的环境搭建相关的操作，下面就要开始我们的脚本编写，来实现游戏的运行了。</p><h2 id="游戏运行"><a href="#游戏运行" class="headerlink" title="游戏运行"></a>游戏运行</h2><h3 id="修改以及准备"><a href="#修改以及准备" class="headerlink" title="修改以及准备"></a>修改以及准备</h3><p>我将 PlayerController 中除了将 Player 运动的脚本其余的都删除了。</p><p>脚本文件名：PlayerController</p><p>代码如下：</p><pre><code>using System.Collections;using System.Collections.Generic;using UnityEngine;public class PlayerController : MonoBehaviour {public float speed;private float moveHorizontal;private float moveVertical;private Vector3 movement;private void FixedUpdate(){    moveHorizontal = Input.GetAxis(&quot;Horizontal&quot;);    moveVertical = Input.GetAxis(&quot;Vertical&quot;);    movement = new Vector3(moveHorizontal, 0.0f, moveVertical);    GetComponent&lt;Rigidbody&gt;().AddForce(movement * speed * Time.deltaTime);}}</code></pre><p>我将剩下的代码贴在上方了，有不清楚的或者项目删除了的可以直接复制过去。</p><h3 id="创建-GameController-脚本"><a href="#创建-GameController-脚本" class="headerlink" title="创建 GameController 脚本"></a>创建 GameController 脚本</h3><p>还是在我们的 Player 物体上添加脚本取名为 GameController ，我定义它用来控制整个游戏的运行脚本，其实我们游戏的改变主要就是体现在此脚本的编写，所以当我们完成此脚本的编写也就意味着我们游戏的完成，废话不多说了下面我们就来完成它。</p><h3 id="删除补回"><a href="#删除补回" class="headerlink" title="删除补回"></a>删除补回</h3><p>因为我们将原来 PlayerController 脚本中除了控制小球运动的代码都删除了，所以需要先补充一下 Planyer 与 PickUp 的碰撞以及分数控制的相关代码，此时只是补回后面还会有更改。</p><p>脚本文件名：GameController</p><p>代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GameController</span> :</span> MonoBehaviour &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Text countText;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> count;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        count = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Start</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        SetCount();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnTriggerEnter</span><span class="params">(Collider other)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (other.gameObject.tag == <span class="string">"PickUp"</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Destroy(other.gameObject);</span><br><span class="line">            count++;</span><br><span class="line">            SetCount();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">SetCount</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        countText.text = <span class="string">"Count:"</span> + count;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="目标一：刷新-PickUp-物体"><a href="#目标一：刷新-PickUp-物体" class="headerlink" title="目标一：刷新 PickUp 物体"></a>目标一：刷新 PickUp 物体</h3><p>在此我们要完成的是<strong>让我们的 PickUp 物体在地面上的随机位置每3秒刷新一个</strong>。</p><p>这其中我们会用到几个新的知识，有需要的话最好还是去网上找找资料了解一下或者翻阅官网的API。</p><ol><li>Clone 克隆物体</li><li>Randam 随机类</li></ol><p>脚本文件名：GameController</p><p>代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GameController</span> :</span> MonoBehaviour &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Text countText;</span><br><span class="line">    <span class="comment">//用于添加 PickUp 物体，之后克隆要用</span></span><br><span class="line">    <span class="keyword">public</span> GameObject pickUp;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> count;</span><br><span class="line">    <span class="comment">//定义一个三维向量的值用于存储克隆物体的位置</span></span><br><span class="line">    <span class="keyword">private</span> Vector3 newPickUpPt;</span><br><span class="line">    <span class="comment">//定义一个需要等待克隆物体的时间，根据目标应该赋值为3</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> fireRate;</span><br><span class="line">    <span class="comment">//定义一个下一次克隆物体的时间</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> nextFire;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        count = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//给 fireRate 赋值，控制克隆物体的间隔时间</span></span><br><span class="line">        fireRate = <span class="number">3f</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Start</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        SetCount();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Update</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//判断游戏时间是否大于我们需要的它克隆的时间</span></span><br><span class="line">        <span class="keyword">if</span> (Time.time &gt; nextFire)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//计算下一次克隆时的时间</span></span><br><span class="line">            nextFire = Time.time + fireRate;</span><br><span class="line">            <span class="comment">//给我们的 PickUp 随机一个位置</span></span><br><span class="line">            newPickUpPt = <span class="keyword">new</span> Vector3(Random.Range(<span class="number">-8</span>, <span class="number">8</span>), <span class="number">1f</span>, Random.Range(<span class="number">-8</span>, <span class="number">8</span>));</span><br><span class="line">            <span class="comment">//这就是克隆的操作脚本了</span></span><br><span class="line">            <span class="comment">//Instantiate(需要克隆的物体，克隆物体的 Pothion 值，克隆物体的 Rotation值)</span></span><br><span class="line">            <span class="comment">//此处我们要克隆的物体是 PickUp，他的位置就是我们之前随机存储的那个位置，Quaternion.identity 的意思是与原物体的 Rotation 值保持不变</span></span><br><span class="line">            Instantiate(pickUp, newPickUpPt, Quaternion.identity);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnTriggerEnter</span><span class="params">(Collider other)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (other.gameObject.tag == <span class="string">"PickUp"</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Destroy(other.gameObject);</span><br><span class="line">            count++;</span><br><span class="line">            SetCount();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">SetCount</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        countText.text = <span class="string">"Count:"</span> + count;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>脚本我们现在就写完了，保存一下脚本，然后来到我们的 Unity 编辑器中，给我们 Player 物体中的 GameController 脚本中的 Player 物体添加一下，然后运行就可以看到 PickUp 开始有规律的创建了。</p><h3 id="控制倒计时器"><a href="#控制倒计时器" class="headerlink" title="控制倒计时器"></a>控制倒计时器</h3><p>做倒计时器又需要用到一个新的知识–协程，这个知识还是很重要的，最好先去翻阅些资料了解一下它。</p><p>脚本文件名：GameController</p><p>代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GameController</span> :</span> MonoBehaviour &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Text countText;</span><br><span class="line">    <span class="comment">//用于添加时间 Text 物体</span></span><br><span class="line">    <span class="keyword">public</span> Text timeText;</span><br><span class="line">    <span class="comment">//用于添加 PickUp 物体，之后克隆要用</span></span><br><span class="line">    <span class="keyword">public</span> GameObject pickUp;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> count;</span><br><span class="line">    <span class="comment">//定义一个三维向量的值用于存储克隆物体的位置</span></span><br><span class="line">    <span class="keyword">private</span> Vector3 newPickUpPt;</span><br><span class="line">    <span class="comment">//定义一个需要等待克隆物体的时间，根据目标应该赋值为3</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> fireRate;</span><br><span class="line">    <span class="comment">//定义一个下一次克隆物体的时间</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> nextFire;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> time;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        count = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//给 fireRate 赋值，控制克隆物体的间隔时间</span></span><br><span class="line">        fireRate = <span class="number">3f</span>;</span><br><span class="line">        time = <span class="number">8</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Start</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        SetCount();</span><br><span class="line">        <span class="comment">//开始我们的协程</span></span><br><span class="line">        StartCoroutine(Timer());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> IEnumerator <span class="title">Timer</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//定义一个循环，条件为要time&gt;0</span></span><br><span class="line">        <span class="keyword">while</span> (time &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//间隔1秒继续执行一下代码</span></span><br><span class="line">            <span class="function">yield <span class="keyword">return</span> <span class="keyword">new</span> <span class="title">WaitForSeconds</span><span class="params">(<span class="number">1</span>)</span></span>;</span><br><span class="line">            <span class="comment">//time自减1</span></span><br><span class="line">            time--;</span><br><span class="line">            <span class="comment">//更新我们的时间文本</span></span><br><span class="line">            SetTime();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//结束我们的协程</span></span><br><span class="line">        StopCoroutine(Timer());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Update</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//判断游戏时间是否大于我们需要的它克隆的时间</span></span><br><span class="line">        <span class="keyword">if</span> (Time.time &gt; nextFire)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//计算下一次克隆时的时间</span></span><br><span class="line">            nextFire = Time.time + fireRate;</span><br><span class="line">            <span class="comment">//给我们的 PickUp 随机一个位置</span></span><br><span class="line">            newPickUpPt = <span class="keyword">new</span> Vector3(Random.Range(<span class="number">-8</span>, <span class="number">8</span>), <span class="number">1f</span>, Random.Range(<span class="number">-8</span>, <span class="number">8</span>));</span><br><span class="line">            <span class="comment">//这就是克隆的操作脚本了</span></span><br><span class="line">            <span class="comment">//Instantiate(需要克隆的物体，克隆物体的 Pothion 值，克隆物体的 Rotation值)</span></span><br><span class="line">            <span class="comment">//此处我们要克隆的物体是 PickUp，他的位置就是我们之前随机存储的那个位置，Quaternion.identity 的意思是与原物体的 Rotation 值保持不变</span></span><br><span class="line">            Instantiate(pickUp, newPickUpPt, Quaternion.identity);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnTriggerEnter</span><span class="params">(Collider other)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (other.gameObject.tag == <span class="string">"PickUp"</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Destroy(other.gameObject);</span><br><span class="line">            count++;</span><br><span class="line">            SetCount();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">SetCount</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        countText.text = <span class="string">"Count:"</span> + count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">SetTime</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        timeText.text = time.ToString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="控制结果"><a href="#控制结果" class="headerlink" title="控制结果"></a>控制结果</h3><p>方法挺多的，可以自己想想怎么去完成。</p><p>脚本文件名：GameController</p><p>代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GameController</span> :</span> MonoBehaviour &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Text countText;</span><br><span class="line">    <span class="comment">//用于添加时间 Text 物体</span></span><br><span class="line">    <span class="keyword">public</span> Text timeText;</span><br><span class="line">    <span class="keyword">public</span> Text resultText;</span><br><span class="line">    <span class="comment">//用于添加 PickUp 物体，之后克隆要用</span></span><br><span class="line">    <span class="keyword">public</span> GameObject pickUp;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> count;</span><br><span class="line">    <span class="comment">//定义一个三维向量的值用于存储克隆物体的位置</span></span><br><span class="line">    <span class="keyword">private</span> Vector3 newPickUpPt;</span><br><span class="line">    <span class="comment">//定义一个需要等待克隆物体的时间，根据目标应该赋值为3</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> fireRate;</span><br><span class="line">    <span class="comment">//定义一个下一次克隆物体的时间</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> nextFire;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> time;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        count = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//给 fireRate 赋值，控制克隆物体的间隔时间</span></span><br><span class="line">        fireRate = <span class="number">3f</span>;</span><br><span class="line">        time = <span class="number">8</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Start</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        SetCount();</span><br><span class="line">        <span class="comment">//开始我们的协程</span></span><br><span class="line">        StartCoroutine(Timer());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> IEnumerator <span class="title">Timer</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//定义一个循环，条件为要time&gt;0</span></span><br><span class="line">        <span class="keyword">while</span> (time &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//间隔1秒继续执行一下代码</span></span><br><span class="line">            <span class="function">yield <span class="keyword">return</span> <span class="keyword">new</span> <span class="title">WaitForSeconds</span><span class="params">(<span class="number">1</span>)</span></span>;</span><br><span class="line">            <span class="comment">//time自减1</span></span><br><span class="line">            time--;</span><br><span class="line">            <span class="comment">//更新我们的时间文本</span></span><br><span class="line">            SetTime();</span><br><span class="line">            <span class="comment">//调用我们创建的控制结果函数</span></span><br><span class="line">            <span class="keyword">if</span> (time &lt;= <span class="number">0</span> &amp;&amp; count &lt; <span class="number">2</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                resultText.text = <span class="string">"Game Over!"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (count &gt;= <span class="number">2</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                resultText.text = <span class="string">"You Win!"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//结束我们的协程</span></span><br><span class="line">        StopCoroutine(Timer());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Update</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//判断游戏时间是否大于我们需要的它克隆的时间</span></span><br><span class="line">        <span class="keyword">if</span> (Time.time &gt; nextFire &amp;&amp; time &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//计算下一次克隆时的时间</span></span><br><span class="line">            nextFire = Time.time + fireRate;</span><br><span class="line">            <span class="comment">//给我们的 PickUp 随机一个位置</span></span><br><span class="line">            newPickUpPt = <span class="keyword">new</span> Vector3(Random.Range(<span class="number">-8</span>, <span class="number">8</span>), <span class="number">1f</span>, Random.Range(<span class="number">-8</span>, <span class="number">8</span>));</span><br><span class="line">            <span class="comment">//这就是克隆的操作脚本了</span></span><br><span class="line">            <span class="comment">//Instantiate(需要克隆的物体，克隆物体的 Pothion 值，克隆物体的 Rotation值)</span></span><br><span class="line">            <span class="comment">//此处我们要克隆的物体是 PickUp，他的位置就是我们之前随机存储的那个位置，Quaternion.identity 的意思是与原物体的 Rotation 值保持不变</span></span><br><span class="line">            Instantiate(pickUp, newPickUpPt, Quaternion.identity);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnTriggerEnter</span><span class="params">(Collider other)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (other.gameObject.tag == <span class="string">"PickUp"</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Destroy(other.gameObject);</span><br><span class="line">            count++;</span><br><span class="line">            SetCount();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">SetCount</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        countText.text = <span class="string">"Count:"</span> + count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">SetTime</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        timeText.text = time.ToString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="游戏的完善"><a href="#游戏的完善" class="headerlink" title="游戏的完善"></a>游戏的完善</h3><p>这是我们此游戏的最后部分，用于完善一些游戏中缺乏的地方，也添加了一些比较有意思的东西，来使游戏更加具有趣味性。</p><h4 id="完善物体的克隆创建"><a href="#完善物体的克隆创建" class="headerlink" title="完善物体的克隆创建"></a>完善物体的克隆创建</h4><p>当游戏结束时，我们的克隆还在不停操作，这是我们不愿意看到的，所以接下来我们来完善它。</p><p>其实完善很简单，只需在我们克隆创建操作的 if 判断中添加条件就可以了。</p><p>脚本文件名：GameController</p><p>代码如下：</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> void Update()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//判断游戏时间是否大于我们需要的它克隆的时间</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">Time</span>.<span class="built_in">time</span> &gt; nextFire &amp;&amp; <span class="built_in">time</span> &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//计算下一次克隆时的时间</span></span><br><span class="line">            nextFire = <span class="built_in">Time</span>.<span class="built_in">time</span> + fireRate;</span><br><span class="line">            <span class="comment">//给我们的 PickUp 随机一个位置</span></span><br><span class="line">            newPickUpPt = new Vector3(<span class="built_in">Random</span>.Range(-<span class="number">8</span>, <span class="number">8</span>), <span class="number">1</span>f, <span class="built_in">Random</span>.Range(-<span class="number">8</span>, <span class="number">8</span>));</span><br><span class="line">            <span class="comment">//这就是克隆的操作脚本了</span></span><br><span class="line">            <span class="comment">//Instantiate(需要克隆的物体，克隆物体的 Pothion 值，克隆物体的 Rotation值)</span></span><br><span class="line">            <span class="comment">//此处我们要克隆的物体是 PickUp，他的位置就是我们之前随机存储的那个位置，Quaternion.identity 的意思是与原物体的 Rotation 值保持不变</span></span><br><span class="line">            Instantiate(pickUp, newPickUpPt, Quaternion.identity);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="完善倒计时器"><a href="#完善倒计时器" class="headerlink" title="完善倒计时器"></a>完善倒计时器</h4><p>当我们游戏胜利后会发现我们的倒计时器依旧还在运行，所以这是有问题的，因此接下来我们就来完善它。</p><p>来到我们打代码，会发现我们的游戏胜利放在了倒计时器中的循环中，因此只要当我们胜利之后添加一个 个 Break 语句跳出循环就可以完成我们的倒计时停止的操作了。</p><p>脚本文件名：GmaeController</p><p>代买如下：</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> IEnumerator Timer()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//定义一个循环，条件为要time&gt;0</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="built_in">time</span> &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//间隔1秒继续执行一下代码</span></span><br><span class="line">            yield return new WaitForSeconds(<span class="number">1</span>);</span><br><span class="line">            <span class="comment">//time自减1</span></span><br><span class="line">            <span class="built_in">time</span>--;</span><br><span class="line">            <span class="comment">//更新我们的时间文本</span></span><br><span class="line">            SetTime();</span><br><span class="line">            <span class="comment">//调用我们创建的控制结果函数</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">time</span> &lt;= <span class="number">0</span> &amp;&amp; <span class="built_in">count</span> &lt; <span class="number">2</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                resultText.<span class="built_in">text</span> = <span class="string">"Game Over!"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">count</span> &gt;= <span class="number">2</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                resultText.<span class="built_in">text</span> = <span class="string">"You Win!"</span>;</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//结束我们的协程</span></span><br><span class="line">        StopCoroutine(Timer());</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>写完代码后运行，然后完成我们的两个小球的条件后，会发现我们的倒计时停止了，耶！完成啦！但是我们又会惊喜的发现刚完成的游戏结束后停止创建物体的任务并没有完善，我们只考虑到了游戏失败时停止创建，若当游戏胜利结束时并没有考虑到，所以我们又要回过头来重新完善我们之前的任务。</p><h4 id="补：完善物体的克隆创建"><a href="#补：完善物体的克隆创建" class="headerlink" title="补：完善物体的克隆创建"></a>补：完善物体的克隆创建</h4><p>要完善其实也很简单，只需要在我们创建的条件中再添加一个 Count 要小于我们的目标值就可以了。</p><p>脚本文件名： GameController</p><p>代码如下：</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> void Update()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//判断游戏时间是否大于我们需要的它克隆的时间</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">Time</span>.<span class="built_in">time</span> &gt; nextFire &amp;&amp; <span class="built_in">time</span> &gt; <span class="number">0</span> &amp;&amp; <span class="built_in">count</span> &lt; <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//计算下一次克隆时的时间</span></span><br><span class="line">            nextFire = <span class="built_in">Time</span>.<span class="built_in">time</span> + fireRate;</span><br><span class="line">            <span class="comment">//给我们的 PickUp 随机一个位置</span></span><br><span class="line">            newPickUpPt = new Vector3(<span class="built_in">Random</span>.Range(-<span class="number">8</span>, <span class="number">8</span>), <span class="number">1</span>f, <span class="built_in">Random</span>.Range(-<span class="number">8</span>, <span class="number">8</span>));</span><br><span class="line">            <span class="comment">//这就是克隆的操作脚本了</span></span><br><span class="line">            <span class="comment">//Instantiate(需要克隆的物体，克隆物体的 Pothion 值，克隆物体的 Rotation值)</span></span><br><span class="line">            <span class="comment">//此处我们要克隆的物体是 PickUp，他的位置就是我们之前随机存储的那个位置，Quaternion.identity 的意思是与原物体的 Rotation 值保持不变</span></span><br><span class="line">            Instantiate(pickUp, newPickUpPt, Quaternion.identity);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="趣味添加：游戏失败小球爆炸效果"><a href="#趣味添加：游戏失败小球爆炸效果" class="headerlink" title="趣味添加：游戏失败小球爆炸效果"></a>趣味添加：游戏失败小球爆炸效果</h4><p>爆炸效果是从网上找的，在此感谢<strong>TPMer</strong>博主提供，爆炸效果需要用到的素材请到他的CSDN博客最底处下载。</p><p><a href="https://blog.csdn.net/six_sex/article/details/72857295" target="_blank" rel="noopener">TPMerd的CSDN博客</a></p><p>素材下载完成后记住他的下载位置当我们导入时需要用到，再打开我们的 Unity 编辑器在菜单栏中的 Assets 中找到 Import Package 再选择 Custom Package 选项来添加我们的素材，找到我们之前下载的素材包打开，在 Import Unity Package 界面中，我们勾去第一个 000.unity 场景文件后选择右下角的 Import 选项添加我们的素材。</p><p><img src="http://pij34n7du.bkt.clouddn.com/pjt3_img02.png" alt="诶呀，图片加载出了点问题！"></p><p>然后编辑我们的脚本文件来完成我们的小球爆炸效果。</p><p>脚本文件名：GameController</p><p>代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GameController</span> :</span> MonoBehaviour &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Text countText;</span><br><span class="line">    <span class="comment">//用于添加时间 Text 物体</span></span><br><span class="line">    <span class="keyword">public</span> Text timeText;</span><br><span class="line">    <span class="keyword">public</span> Text resultText;</span><br><span class="line">    <span class="comment">//用于添加 PickUp 物体，之后克隆要用</span></span><br><span class="line">    <span class="keyword">public</span> GameObject pickUp;</span><br><span class="line">    <span class="comment">//用于添加我们的爆炸物体</span></span><br><span class="line">    <span class="keyword">public</span> GameObject Bang;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> count;</span><br><span class="line">    <span class="comment">//定义一个三维向量的值用于存储克隆物体的位置</span></span><br><span class="line">    <span class="keyword">private</span> Vector3 newPickUpPt;</span><br><span class="line">    <span class="comment">//定义一个需要等待克隆物体的时间，根据目标应该赋值为3</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> fireRate;</span><br><span class="line">    <span class="comment">//定义一个下一次克隆物体的时间</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> nextFire;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> time;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        count = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//给 fireRate 赋值，控制克隆物体的间隔时间</span></span><br><span class="line">        fireRate = <span class="number">3f</span>;</span><br><span class="line">        time = <span class="number">8</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Start</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        SetCount();</span><br><span class="line">        <span class="comment">//开始我们的协程</span></span><br><span class="line">        StartCoroutine(Timer());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> IEnumerator <span class="title">Timer</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//定义一个循环，条件为要time&gt;0</span></span><br><span class="line">        <span class="keyword">while</span> (time &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//间隔1秒继续执行一下代码</span></span><br><span class="line">            <span class="function">yield <span class="keyword">return</span> <span class="keyword">new</span> <span class="title">WaitForSeconds</span><span class="params">(<span class="number">1</span>)</span></span>;</span><br><span class="line">            <span class="comment">//time自减1</span></span><br><span class="line">            time--;</span><br><span class="line">            <span class="comment">//更新我们的时间文本</span></span><br><span class="line">            SetTime();</span><br><span class="line">            <span class="comment">//调用我们创建的控制结果函数</span></span><br><span class="line">            <span class="keyword">if</span> (time &lt;= <span class="number">0</span> &amp;&amp; count &lt; <span class="number">2</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                resultText.text = <span class="string">"Game Over!"</span>;</span><br><span class="line">                <span class="comment">//将 Player 物体销毁</span></span><br><span class="line">                Destroy(<span class="keyword">this</span>.gameObject);</span><br><span class="line">                <span class="comment">//克隆我们的爆炸物体来代替我们的 Player 物体</span></span><br><span class="line">                Instantiate(Bang, <span class="keyword">this</span>.transform.position, <span class="keyword">this</span>.transform.rotation);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (count &gt;= <span class="number">2</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                resultText.text = <span class="string">"You Win!"</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//结束我们的协程</span></span><br><span class="line">        StopCoroutine(Timer());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Update</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//判断游戏时间是否大于我们需要的它克隆的时间</span></span><br><span class="line">        <span class="keyword">if</span> (Time.time &gt; nextFire &amp;&amp; time &gt; <span class="number">0</span> &amp;&amp; count &lt; <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//计算下一次克隆时的时间</span></span><br><span class="line">            nextFire = Time.time + fireRate;</span><br><span class="line">            <span class="comment">//给我们的 PickUp 随机一个位置</span></span><br><span class="line">            newPickUpPt = <span class="keyword">new</span> Vector3(Random.Range(<span class="number">-8</span>, <span class="number">8</span>), <span class="number">1f</span>, Random.Range(<span class="number">-8</span>, <span class="number">8</span>));</span><br><span class="line">            <span class="comment">//这就是克隆的操作脚本了</span></span><br><span class="line">            <span class="comment">//Instantiate(需要克隆的物体，克隆物体的 Pothion 值，克隆物体的 Rotation值)</span></span><br><span class="line">            <span class="comment">//此处我们要克隆的物体是 PickUp，他的位置就是我们之前随机存储的那个位置，Quaternion.identity 的意思是与原物体的 Rotation 值保持不变</span></span><br><span class="line">            Instantiate(pickUp, newPickUpPt, Quaternion.identity);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnTriggerEnter</span><span class="params">(Collider other)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (other.gameObject.tag == <span class="string">"PickUp"</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Destroy(other.gameObject);</span><br><span class="line">            count++;</span><br><span class="line">            SetCount();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">SetCount</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        countText.text = <span class="string">"Count:"</span> + count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">SetTime</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        timeText.text = time.ToString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当我们将脚本写完保存后，打开 Unity 编辑器在我们的 Player 物体中 GameController 脚本下方的 Bang 处添加我们 Prefabs 文件下的爆炸文件后运行，当我们游戏结束时会发现我们的 Player 物体爆炸了，但是我们下方会有红色文字报错。</p><p><img src="http://pij34n7du.bkt.clouddn.com/pjt3_img03.png" alt="诶呀，图片加载出了点问题！"></p><p>它的意思大体为 <strong>物体已经被销毁了，但是游戏依旧还在使用它</strong> ，然后在找到下面的提示可以看到问题出现在了我们的 CameraController 文件中的第18行，我们顺着找过去看到的是我们用来使我们的相机位置为 Player 位置加上一个固定值的代码，找到了病因我们就去解决了。</p><p>脚本文件名：CameraController</p><p>代码如下：</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CameraController</span> : <span class="title">MonoBehaviour</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> GameObject player;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Vector3 offset;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        offset = transform.position - player.transform.position;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> != player)</span><br><span class="line">        &#123;</span><br><span class="line">            transform.position = player.transform.position + offset;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解决方法很简单就是将我们的相机位置代码放在一个 if 判断语句中就行了，判断的条件就是我们的 Player 物体存在就行了。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>以上就是这篇文章中的所有内容了，因为本人还是新手所以在很多内容上理解可能很不准确或者错误的，希望各位朋友能像我提出，我一定会悉心学习并改正的，我也会努力让自己与目标更加靠近的！！！</p><p><strong>欢迎大家收藏我的博客，我会努力更新更多的作品的，给自己加个油！</strong></p>]]></content>
    
    <summary type="html">
    
      Unity官方案例进阶--Roll a ball
    
    </summary>
    
      <category term="教程" scheme="http://noahcodemonkey.top/categories/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Unity" scheme="http://noahcodemonkey.top/categories/%E6%95%99%E7%A8%8B/Unity/"/>
    
      <category term="官方案例进阶" scheme="http://noahcodemonkey.top/categories/%E6%95%99%E7%A8%8B/Unity/%E5%AE%98%E6%96%B9%E6%A1%88%E4%BE%8B%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="Unity" scheme="http://noahcodemonkey.top/tags/Unity/"/>
    
      <category term="官方案例" scheme="http://noahcodemonkey.top/tags/%E5%AE%98%E6%96%B9%E6%A1%88%E4%BE%8B/"/>
    
      <category term="Roll a ball" scheme="http://noahcodemonkey.top/tags/Roll-a-ball/"/>
    
      <category term="进阶" scheme="http://noahcodemonkey.top/tags/%E8%BF%9B%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>Unity官方案例--Roll a ball</title>
    <link href="http://noahcodemonkey.top/2018/11/15/Unity%E5%AE%98%E6%96%B9%E6%A1%88%E4%BE%8B-Roll-a-ball/"/>
    <id>http://noahcodemonkey.top/2018/11/15/Unity官方案例-Roll-a-ball/</id>
    <published>2018-11-15T12:12:30.000Z</published>
    <updated>2019-01-10T04:11:50.689Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://noahcode-blog.oss-cn-beijing.aliyuncs.com/img/Unity%E5%AE%98%E6%96%B9%E6%A1%88%E4%BE%8B--Roll%20a%20ball/rollerball_projectheader.png?Expires=1547097090&OSSAccessKeyId=TMP.AQH9LzzUDmtXExw9XNU6EnE2zXWJjL7kAJdQTOYxnpLojK_yLvvuKKge68QYADAtAhR4uNWAxmQGLdj5AXHJwIpzRFHR9wIVAPb3UfDpBO1JoM8PUuK4FwyRWz7g&Signature=SM7xCqgO4Lk15ipF%2BGMMfilmNG8%3D" alt="" style="width:100%"></p><p class="description">现在的我还是一名 Unity3d 游戏开发初学者，所以现在都在围绕 Unity3d 的官方案例来做练习，为此写下一些文章作为笔记，文章中难免会有一些疏漏，有些不当之处还望指正。</p><a id="more"></a><h2 id="项目简介"><a href="#项目简介" class="headerlink" title="项目简介"></a>项目简介</h2><p>首先玩家可以控制一个小球，去吃那些悬浮在平面上的小方块，全部吃玩就游戏结束了，是一个很简单的小游戏。</p><h2 id="创建工程"><a href="#创建工程" class="headerlink" title="创建工程"></a>创建工程</h2><p>首先我们创建一个空的工程</p><p><img src="http://pij34n7du.bkt.clouddn.com/pjt2_img01.png" alt="诶呀，图片加载出了点问题！"></p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><h3 id="创建地面"><a href="#创建地面" class="headerlink" title="创建地面"></a>创建地面</h3><p>在 Hierarchy 界面中右键选择 3D Object 中的 Plane 创建一个地面，其中将他 Inspector 界面中的 Scale(X:2,Y:1,Z:2)使地面扩大一下，这里需要让大家养成一个好的习惯就是<strong>物体的需要命名并且要有意义</strong>，所以我将我们的 Plan物体名改为 Ground。</p><p><img src="http://pij34n7du.bkt.clouddn.com/pjt2_img02.png" alt="诶呀，图片加载出了点问题！"></p><h3 id="给地面添加材质"><a href="#给地面添加材质" class="headerlink" title="给地面添加材质"></a>给地面添加材质</h3><p>但由于这地面太白了，再加上默认的灯光效果很亮表现得很刺眼，所以我给地面添加了一个黑色的材质，这里有需要大家养成一个<strong>文件分类</strong>的好习惯，所以我在我们的 Assets 文件夹中新建了一个 Materials 文件夹用来存放我们需要用到的材质文件，选中 Materials 文件夹后右键选择 Create 选项中选择 Material 就可以创建一个材质文件了，我将它改名为 Ground，其中在他的 Inspector 界面中将 Main Maps 中的 Albedo 的颜色调整为黑色，最后只需将这个材质文件拖到我们场景中的地面上即可。</p><p><img src="http://pij34n7du.bkt.clouddn.com/pjt2_img03.png" alt="诶呀，图片加载出了点问题！"></p><h3 id="添加墙"><a href="#添加墙" class="headerlink" title="添加墙"></a>添加墙</h3><p>在 Hierarchy 界面中右键选择 3D Object 中的 Cube 来创建四周的墙，其中在它们的 Inspector 界面中都设置 Scale(X:21,Y:1,Z:1)，它们的位置分别设置为</p><p>Wall[Positon(X:0,Y:0,Z:10)],</p><p>Wall1[Positon(X:0,Y:0,Z:-10)],</p><p>Wall2[Position(X:10,Y:0,Z:0),Rotation(X:0,Y:90,Z:0)],</p><p>Wall3[Position(X:-10,Y:0,Z:0),Rotation(X:0,Y:90,Z:0)]</p><p>这里又有一点需要大家养成的习惯就是<strong>若有相同的物体应该创建一个空的物体将他们都存放在你里面</strong>，所以我在 Hierarchy 中创建了一个空的物体改名为 Walls 将这四个墙存放在其中。</p><p><img src="http://pij34n7du.bkt.clouddn.com/pjt2_img04.png" alt="诶呀，图片加载出了点问题！"></p><h3 id="设置摄像机"><a href="#设置摄像机" class="headerlink" title="设置摄像机"></a>设置摄像机</h3><p>选择我们场景中的 Main Camera 设置它的 Position(X:0,Y:10,Z:-10),Rotation(X:45,Y:0,Z:0)即可。</p><p><img src="http://pij34n7du.bkt.clouddn.com/pjt2_img05.png" alt="诶呀，图片加载出了点问题！"></p><h3 id="添加-Player"><a href="#添加-Player" class="headerlink" title="添加 Player"></a>添加 Player</h3><p>在 Hierarchy 界面中右键选择 3D Object 中选择 Sphere 将它改名为 Player，设置它的 Position(X:0,Y:0.5,Z:0)</p><p><img src="http://pij34n7du.bkt.clouddn.com/pjt2_img06.png" alt="诶呀，图片加载出了点问题！"></p><h3 id="添加-Pick-Up"><a href="#添加-Pick-Up" class="headerlink" title="添加 Pick Up"></a>添加 Pick Up</h3><p>在 Hierarchy 界面中右键选择 3D Object 中选择 Cube 将他改名为 Pickup ，其中几个比较关键的设置是 Position 的y的值最好要大于1因为过低 他会卡在地面里，Rotation(X:45,Y:45,Z:45)，还有一个特别关键的就是将 Box Collider 中的 Is Trigger 勾上，它的作用是做触发器，简单来说就是就是当两个物体发生碰撞不产生碰撞效果，但会触发碰撞事件(如果还不能理解，自己在 Unity 中实验一下)，然后就是多创建几个 Pick Up 位置你们随便放，不过这里也有一个方法方便我们创建多个相同的物体并且还可以同步之后需要更改的设置，那就是创建 Prefab。我们在 Assets 文件夹中创建一个 Prefabs 文件夹，将我们创建的 Pickup物体拖至此文件夹，当我们看到 Pickup 物体的名称变蓝后，这就意味着我们的 prefab 创建完成，当我们需要创建 Pickup 物体时，现在只需将 prefab 中的 Pickup 拖至我们的场景中即可创建，然后就是创建一个空的物体改名为 Pickups 用来存放我们创建的 Pickup 。</p><p><img src="http://pij34n7du.bkt.clouddn.com/pjt2_img07.png" alt="诶呀，图片加载出了点问题！"></p><p>在 Inspector 界面中找到 Tag 选项后单机再选择选项中最下方的 Add Tag… 后会来到我们的 Tags &amp; Layers 界面，在下方会看见一个 + 标志后单机在输入框中输入 PickUp 后选择 Sa7e 后即可添加标签</p><p><img src="http://pij34n7du.bkt.clouddn.com/pjt2_img08.png" alt="诶呀，图片加载出了点问题！"></p><h3 id="添加-UI"><a href="#添加-UI" class="headerlink" title="添加 UI"></a>添加 UI</h3><p>在 Hierarchy 界面中右键选择 UI 后再选择 Text 选项就可以添加我们的 UI 了，我们将创建出来的 Text 文件改名为 CountText，我们可以在 Inspector 界面中的 Text(Script) 中调整文字内容、字体、字体大小、颜色等多种属性，我们必须要做的是将文本默认的内容给删掉就行了，其他的设置看自己喜好了，但我们要将它至于界面的左上角该如何操作呢？我们可以在 Rect Transform 中看到一个田字格，我们单机一下它就会出现很多位置选项，但是并没有我们所需要的左上角，这时候我们只需要一直按住键盘上的 Alt 键就会发现上面的位置选项发生了变化，之后就可以很明显的看到左上角的选项然后我们选择它就可以了，然后在 Canvas 文件夹下在创建一个 Text 改名为 WinText 用来存储我们的胜利文本的，也要将文本内容删去，位置居中默认就行了，其他设置自定义。</p><p><img src="http://pij34n7du.bkt.clouddn.com/pjt2_img09.png" alt="诶呀，图片加载出了点问题！"></p><h2 id="游戏运行"><a href="#游戏运行" class="headerlink" title="游戏运行"></a>游戏运行</h2><p>从这儿起就要开始我们的脚本编写了，现在 Unity3D 主流脚本编辑语言是 <strong>C#</strong>，不过像我现在用的 Unity 3D 2018.2的版本脚本语言只剩下了 C#，所以推荐大家写脚本还是用 C# 来编写，学过的朋友理解起来就很方便了，没学过的朋友可以从网上找找相关教学视频了解一下，不过有一点编程经验的其实理解起来还是很简单的，我会在下面脚本中写下相应注释的，方便一些初学者理解的。</p><p>Unity官方有一个脚本文档，在遇到什么不懂得问题或者需要完成什么操作脚本忘了怎么写时可以进行查阅。</p><p><a href="https://docs.unity3d.com/ScriptReference/index.html" target="_blank" rel="noopener">Unity官方脚本文档</a></p><h3 id="Player-的移动"><a href="#Player-的移动" class="headerlink" title="Player 的移动"></a>Player 的移动</h3><p>选择我们的 Player 物体文件，在 Inspector 的下方点击 Add Component 在其中的输入框中输入 Rigidbody 回车确定选择，即可给我们的 Player物体添加刚体组件，刚体组件的用处就是给物体添加物理属性的，其中我们将 Angular Drag 的值改为0，意思是取消小球的摩擦力。</p><p><img src="http://pij34n7du.bkt.clouddn.com/pjt2_img10.png" alt="诶呀，图片加载出了点问题！"></p><p>还是点击 Add Component 在输入框中输入 PlayerController 选择 New script 再点击下方的 Create and Add 即可给我们的 Player 挂载脚本了，然后我在我们的 Assets 文件夹中创建一个 Scripts 文件夹用来存储我们游戏中的所有用到的脚本文件，将我们刚刚创建的脚本文件拖进此文件夹。</p><p><img src="http://pij34n7du.bkt.clouddn.com/pjt2_img11.png" alt="诶呀，图片加载出了点问题！"></p><p>双击我们的脚本文件，就打开了我们默认的脚本编辑器来编辑我们的脚本，我使用的是 visual studio 2017。</p><p><img src="http://pij34n7du.bkt.clouddn.com/pjt2_img12.png" alt="诶呀，图片加载出了点问题！"></p><p>下面就开始编辑我们的脚本，来完成小球 Player 的移动。</p><p>脚本文件名：PlayerController</p><p>代码如下：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PlayerController</span> :</span> MonoBehaviour &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//public 公共的，会使此变量显示在 unity 编辑器中方便我们调节数值</span></span><br><span class="line"><span class="comment">//此处定义一个 speed 变量是为了控制 Player 的运动速度</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">float</span> speed;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">FixedUpdate</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//获取横向要使 Player 位移的量</span></span><br><span class="line">    <span class="keyword">float</span> moveHorizontal = Input.GetAxis(<span class="string">"Horizontal"</span>);</span><br><span class="line">    <span class="comment">//获取纵向要使 Player 位移的量</span></span><br><span class="line">    <span class="keyword">float</span> moveVertical = Input.GetAxis(<span class="string">"Vertical"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义一个新的三维向量，来确定 Player 的运行方向</span></span><br><span class="line">    Vector3 movement = <span class="keyword">new</span> Vector3(moveHorizontal, <span class="number">0.0f</span>, moveVertical);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//给 Player 添加一个力使其运动，力的大小我们可以在 Unity 编辑器中编辑</span></span><br><span class="line">    <span class="comment">//这里再乘以一个Time.deltaTime是为了使 Player 完成的是每秒移动 speed 米，而不是每帧 speed 米，你们可以试试将这个Time.detalTime删去后 Player 的运行效果</span></span><br><span class="line">    GetComponent&lt;Rigidbody&gt;().AddForce(movement * Time.deltaTime * speed);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>脚本写完后记得保存一下，再来到我们的 Unity 编辑器中，选择 Player 物体后你会发现在脚本中多出来一个 Speed 项，这就是我们之前定义它为 public 公共项的作用了，我们将他设置值为120，然后点击 Unity 编辑器上方的播放按钮运行，之后我们就可以按 W、A、S、D 键来控制我们的 Player 运动了。</p><p><img src="http://pij34n7du.bkt.clouddn.com/pjt2_img13.png" alt="诶呀，图片加载出了点问题！"></p><h3 id="相机跟随"><a href="#相机跟随" class="headerlink" title="相机跟随"></a>相机跟随</h3><p>让相机跟随 Player 一起运动，使相机和物体为关联关系但不是父子级别的关系，若是父子关系由于 Player 是球体运动时会滚动，所以相机也会随着 Player 的滚动而滚动，这不是我们需要的效果。</p><p>选择 Main Camera 物体用上文同样的方法添加 CameraController 脚本文件，然后拖至 Scripts文件夹中存放，双击脚本文件进行编辑。</p><p>脚本文件名：Camera Controller</p><p>代码如下：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CameraController</span> :</span> MonoBehaviour &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建一个公共的游戏物体，在Unity编辑器中可以将一个物体拖至脚本处的 player 的框中，脚本中就可以直接获取此物体，就不需要查找的步骤</span></span><br><span class="line"><span class="comment">//此处的功能就是将我们需要摄像机跟随的物体添加进去，也就是 Player</span></span><br><span class="line"><span class="keyword">public</span> GameObject player;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建一个变量，用来存储摄像机与物体 Player 未知的默认的差值</span></span><br><span class="line"><span class="keyword">private</span> Vector3 offSet;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Start</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//我们给 offSet 赋值，值的的大小为摄像机的 Position 三维向量的值减去 物体 Position 三维向量的值，也就是相机与物体之间的距离</span></span><br><span class="line">    offSet = transform.position - player.transform.position;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">LateUpdate</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//使我们的相机的位置永远位于物体的位置+ offSet 这个差值</span></span><br><span class="line">    transform.position = player.transform.position + offSet;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>脚本编写完后我们来到 Unity3D编辑器，选择 Main Camera 物体文件后会发现在脚本下方出现了一个叫 Player 的项，我们可以吧 Player 物体拖至后方的框子中，然后运行移动 Player 就会发现摄像机也在跟随着 Player 一起运动。</p><p><img src="http://pij34n7du.bkt.clouddn.com/pjt2_img14.png" alt="诶呀，图片加载出了点问题！"></p><h3 id="Pick-Up-的自转"><a href="#Pick-Up-的自转" class="headerlink" title="Pick Up 的自转"></a>Pick Up 的自转</h3><p>这次我们要完成的是将 Pick Up 旋转起来。</p><p>选择 Prefabes 中的 Pickup 物体，添加名为 Rotation 的脚本文件后拖至 Scripts 文件夹中，然后双击我们的脚本文件编辑我们的脚本。</p><p><img src="http://pij34n7du.bkt.clouddn.com/pjt2_img15.png" alt="诶呀，图片加载出了点问题！"></p><p>脚本文件名： Rotation</p><p>代码如下：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Rotation</span> :</span> MonoBehaviour &#123;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">FixedUpdate</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    transform.Rotate(<span class="keyword">new</span> Vector3(<span class="number">15</span>, <span class="number">30</span>, <span class="number">45</span>) * Time.deltaTime);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>回到 Unity 编辑器运行我们的游戏就可以看到 Pickup 开始自己转了起来。</p><h3 id="UI-的控制"><a href="#UI-的控制" class="headerlink" title="UI 的控制"></a>UI 的控制</h3><p>打开我们的 PlayerController 脚本，我们在其中编辑 UI 的控制脚本。</p><p>脚本文件名：PlayerController</p><p>代码如下：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="comment">//切记一定要调用 UI</span></span><br><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PlayerController</span> :</span> MonoBehaviour &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//public 公共的，会使此变量显示在 unity 编辑器中方便我们调节数值</span></span><br><span class="line"><span class="comment">//此处定义一个 speed 变量是为了控制 Player 的运动速度</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">float</span> speed;</span><br><span class="line"><span class="comment">//获取我们创建的 CountText</span></span><br><span class="line"><span class="keyword">public</span> Text countText;</span><br><span class="line"><span class="comment">//获取我们的创建的 WinText</span></span><br><span class="line"><span class="keyword">public</span> Text winText;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义个变量记录我们的得分</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> count;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Start</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">//调用我们的自定义函数 SetCount</span></span><br><span class="line">    SetCount();</span><br><span class="line">    <span class="comment">//初始化我们的winText里的文本为空，功能相当于隐藏了此文本</span></span><br><span class="line">    winText.text = <span class="string">""</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">FixedUpdate</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//获取横向要使 Player 位移的量</span></span><br><span class="line">    <span class="keyword">float</span> moveHorizontal = Input.GetAxis(<span class="string">"Horizontal"</span>);</span><br><span class="line">    <span class="comment">//获取纵向要使 Player 位移的量</span></span><br><span class="line">    <span class="keyword">float</span> moveVertical = Input.GetAxis(<span class="string">"Vertical"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义一个新的三维向量，来确定 Player 的运行方向</span></span><br><span class="line">    Vector3 movement = <span class="keyword">new</span> Vector3(moveHorizontal, <span class="number">0.0f</span>, moveVertical);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//给 Player 添加一个力使其运动，力的大小我们可以在 Unity 编辑器中编辑</span></span><br><span class="line">    <span class="comment">//这里再乘以一个Time.deltaTime是为了使 Player 完成的是每秒移动 speed 米，而不是每帧 speed 米，你们可以试试将这个Time.detalTime删去后 Player 的运行效果</span></span><br><span class="line">    GetComponent&lt;Rigidbody&gt;().AddForce(movement * Time.deltaTime * speed);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnTriggerEnter</span><span class="params">(Collider other)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//当 Player 碰到了物体的 Tag 名为 PickUp 的物体时运行 if 的程序</span></span><br><span class="line">    <span class="comment">//为何要加 Tag呢？因为 Player 在运行中会碰到很多东西，比如：地面、墙壁，这些都不是我想要销毁的物体，所以我们给我们需要销毁的物体添加个“名字”</span></span><br><span class="line">    <span class="keyword">if</span> (other.gameObject.tag == <span class="string">"PickUp"</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//销毁 Pickup</span></span><br><span class="line">        Destroy(other.gameObject);</span><br><span class="line">        <span class="comment">//分数+1</span></span><br><span class="line">        count += <span class="number">1</span>;</span><br><span class="line">        <span class="comment">//更新 CountText 的文本内容</span></span><br><span class="line">        SetCount();</span><br><span class="line">        <span class="comment">//当我们的分数大于我们定义的 Pickup 的个数(因为我创建了8个 Pickup，所以我的是 count &gt;= 8)</span></span><br><span class="line">        <span class="keyword">if</span> (count &gt;= <span class="number">8</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//给我们的 WinText 的文本内添加获胜内容，其功能也就是显示获胜信息</span></span><br><span class="line">            winText.text = <span class="string">"You Win!"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetCount</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//使我们的 CountText 显示分数，其格式为 Count：[分数]</span></span><br><span class="line">    countText.text = <span class="string">"Count:"</span> + count;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>保存我们的代码并打开 Unity 编辑器，选择 Player 物体后将我们的创建的 CountText 和 WinText 物体拖至 PlayerCOntroller 脚本下方相对应的地方，然后运行我们的游戏，此时我们的 Roll a ball 的游戏已经制作完成了。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li>我们写完代码一定要记得将我们需要使用到的物体挂上，不然运行时没有效果或者报错。</li><li>Tag 的添加一定要注意自己的大小写，在脚本添加中判断物体的 Tag 时一定要与我们创建的 Tag 完全一样。</li><li>其中游戏的实现可能会有很多种方法，自己可以翻阅 Unity 官方的脚本文档然后去尝试使用其他的一些方法来实现我们的游戏。</li><li>如果自己有能力，可以尝试改编游戏加入自己的想法，然后一一去实现它，这样对于我们的游戏开发很有帮助。</li><li>游戏开发其实很简单，但是如果想要真正的在这个领域成为“大牛”级别的人物，还需要很多很多的努力，我们一起坚持，一起努力！</li></ol><p><strong>欢迎大家收藏我的博客，我会努力更新更多的作品的，给自己加个油！</strong></p>]]></content>
    
    <summary type="html">
    
      Unity官方案例--Roll a ball
    
    </summary>
    
      <category term="教程" scheme="http://noahcodemonkey.top/categories/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Unity" scheme="http://noahcodemonkey.top/categories/%E6%95%99%E7%A8%8B/Unity/"/>
    
      <category term="官方案例" scheme="http://noahcodemonkey.top/categories/%E6%95%99%E7%A8%8B/Unity/%E5%AE%98%E6%96%B9%E6%A1%88%E4%BE%8B/"/>
    
    
      <category term="Unity" scheme="http://noahcodemonkey.top/tags/Unity/"/>
    
      <category term="官方案例" scheme="http://noahcodemonkey.top/tags/%E5%AE%98%E6%96%B9%E6%A1%88%E4%BE%8B/"/>
    
      <category term="Roll a ball" scheme="http://noahcodemonkey.top/tags/Roll-a-ball/"/>
    
  </entry>
  
  <entry>
    <title>Atom 插件备份--Sync Setting</title>
    <link href="http://noahcodemonkey.top/2018/11/15/Atom-%E6%8F%92%E4%BB%B6%E5%A4%87%E4%BB%BD-Sync-Setting/"/>
    <id>http://noahcodemonkey.top/2018/11/15/Atom-插件备份-Sync-Setting/</id>
    <published>2018-11-15T12:03:43.000Z</published>
    <updated>2019-01-10T04:11:25.081Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://noahcode-blog.oss-cn-beijing.aliyuncs.com/img/Atom%20%E6%8F%92%E4%BB%B6%E5%A4%87%E4%BB%BD--Sync%20Setting/atom.jpg?Expires=1547097074&OSSAccessKeyId=TMP.AQH9LzzUDmtXExw9XNU6EnE2zXWJjL7kAJdQTOYxnpLojK_yLvvuKKge68QYADAtAhR4uNWAxmQGLdj5AXHJwIpzRFHR9wIVAPb3UfDpBO1JoM8PUuK4FwyRWz7g&Signature=KGf%2FOrh%2BZ1z8RQQ9uC0FvDb2APs%3D" alt="" style="width:100%"></p><p class="description">当我们使用的 Atom 插件装的越来越多，相关的配置也越来越个性化，一旦我们的电脑重装后就需要重新安装我们的开发环境，这将会是一件令人头疼的事情，但是现在我发现了一款备份的插件推荐给大家，它就是–Sync Setting。</p><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>打开我们的 Atom 在菜单栏 File 中找到 Settings 选项，选中的 Install 界面中搜索 Sync Setting 插件，然后点击 install 下载即可,之后可以在 Packages 中找打我们下载的所有插件。</p><p><img src="http://pij34n7du.bkt.clouddn.com/pjt1_img01.png" alt="诶呀，图片加载出了点问题！"></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p><img src="http://pij34n7du.bkt.clouddn.com/pjt1_img02.png" alt="诶呀，图片加载出了点问题！"></p><p>首先我们打开 Sync Setting 的插件配置界面看到，我们需要填写两个内容才可以备份，下面我就一步一步的教大家如何去完成。</p><p><strong>第一步：创建 personal access token</strong></p><p>打开我们的 GitHub，点击我们的头像选择 Settings 选项，在 Settings 界面中选择 Developer Settings，然后就看到我们需要找到的 Personal access tokens,然后点击右上角的 Generate new token 创建。</p><p><img src="http://pij34n7du.bkt.clouddn.com/pjt1_img03.png" alt="诶呀，图片加载出了点问题！"></p><p><strong>注：一定要记得勾选gist选项</strong></p><p>点击左下角的 Generate token 创建，然后复制生成的 token 序列粘贴到 Sync Setting 配置界面图中的第一个输入框中。</p><p><img src="http://pij34n7du.bkt.clouddn.com/pjt1_img04.png" alt="诶呀，图片加载出了点问题！"></p><p><strong>第二步：创建 gist</strong></p><p>还是点击我们的头像，选择 Your gists 后在输入框中随便输入点信息，然后点击 Create secret gist 创建一个gist。</p><p><img src="http://pij34n7du.bkt.clouddn.com/pjt1_img05.png" alt="诶呀，图片加载出了点问题！"></p><p>gist创建成功后，我们复制生成的 gistID 将其粘贴到Sync Setting 配置界面图中的第二个输入框中。</p><p><img src="http://pij34n7du.bkt.clouddn.com/pjt1_img06.png" alt="诶呀，图片加载出了点问题！"></p><p>以上就是我们的 Sync Setting 所有的配置操作了，那我们该如何备份呢？</p><p><strong>注：最好将两个数据备份一下，以便以后恢复用到。若没有备份需要恢复，可以看文章最下方的教程</strong></p><h2 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h2><p>打开我们 Atom 的文档编辑页面（Crtl + Shift + P），在其中输入”Syn”选中第二个 Backup 选项就可以开始备份了。</p><p><img src="http://pij34n7du.bkt.clouddn.com/pjt1_img07.png" alt="诶呀，图片加载出了点问题！"><br>../imgs/img_01/img07.png<br>当 Atom 编辑器右上角出现绿色的备份成功的提示消息，就意味着我们的备份成功啦。</p><p><img src="http://pij34n7du.bkt.clouddn.com/pjt1_img08.png" alt="诶呀，图片加载出了点问题！"></p><h2 id="恢复-备份"><a href="#恢复-备份" class="headerlink" title="恢复(备份)"></a>恢复(备份)</h2><p>在新的 Atom 编辑器中下载 Sync Setting 插件，在其配置界面中将我们备份的两个数据分别填入两个输入框中，打开我们 Atom 的文档编辑页面（Crtl + Shift + P），在其中输入”Syn”选中第三个 Restore 选项就可以恢复了。</p><p><img src="http://pij34n7du.bkt.clouddn.com/pjt1_img09.png" alt="诶呀，图片加载出了点问题！"></p><h2 id="恢复-未备份"><a href="#恢复-未备份" class="headerlink" title="恢复(未备份)"></a>恢复(未备份)</h2><p>我们缺的就是两个数据就可以完成ifu操作了，所以我们只需要想方法获取到这两个数据就可以了。</p><h3 id="personal-access-token"><a href="#personal-access-token" class="headerlink" title="personal access token"></a>personal access token</h3><p>打开我们的 GitHub 找到我们之前创建的 personal access token(在Settings中,前面写的很详细)，然后会看到有个红色字体的按钮，它的意思是重新生成令牌，我们就可以重新生成一个令牌。</p><p><img src="http://pij34n7du.bkt.clouddn.com/pjt1_img10.png" alt="诶呀，图片加载出了点问题！"></p><h3 id="GistID"><a href="#GistID" class="headerlink" title="GistID"></a>GistID</h3><p>打开我们的 GitHub 还是选择 Your gists 到达我们的 gist 的界面，然后选择我们的右上角的 See all of your gists ，找到我们之前创建的 gist。</p><p><img src="http://pij34n7du.bkt.clouddn.com/pjt1_img11.png" alt="诶呀，图片加载出了点问题！"></p><p>然后我们点击 init.coffee，就到达了我们备份 Atom 插件信息的一个库.</p><p><img src="http://pij34n7du.bkt.clouddn.com/pjt1_img12.png" alt="诶呀，图片加载出了点问题！"></p><p>之后我们以发现我们所需要的 gistID 就在我们的网址结尾处，直接将他复制过去即可。</p><p><img src="http://pij34n7du.bkt.clouddn.com/pjt1_img13.png" alt="诶呀，图片加载出了点问题！"></p><p>现在我们所需要的两个数据全都有了，就可以开始我们的恢复操作了，不过在此还是推荐各位朋友记得备份一下，免得花这么多时间去找。</p><p><strong>欢迎大家收藏我的博客，我会努力更新更多的作品的，给自己加个油！</strong></p>]]></content>
    
    <summary type="html">
    
      Atom 备份插件--Sync Setting教程
    
    </summary>
    
      <category term="教程" scheme="http://noahcodemonkey.top/categories/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Atom" scheme="http://noahcodemonkey.top/categories/%E6%95%99%E7%A8%8B/Atom/"/>
    
      <category term="Sync Setting 备份插件" scheme="http://noahcodemonkey.top/categories/%E6%95%99%E7%A8%8B/Atom/Sync-Setting-%E5%A4%87%E4%BB%BD%E6%8F%92%E4%BB%B6/"/>
    
    
      <category term="教程" scheme="http://noahcodemonkey.top/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Atom" scheme="http://noahcodemonkey.top/tags/Atom/"/>
    
      <category term="插件" scheme="http://noahcodemonkey.top/tags/%E6%8F%92%E4%BB%B6/"/>
    
      <category term="Sync Setting" scheme="http://noahcodemonkey.top/tags/Sync-Setting/"/>
    
      <category term="备份" scheme="http://noahcodemonkey.top/tags/%E5%A4%87%E4%BB%BD/"/>
    
  </entry>
  
  <entry>
    <title>Markdown 的使用</title>
    <link href="http://noahcodemonkey.top/2018/11/15/Markdown%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://noahcodemonkey.top/2018/11/15/Markdown的使用/</id>
    <published>2018-11-15T11:57:31.000Z</published>
    <updated>2019-01-10T04:11:05.520Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://noahcode-blog.oss-cn-beijing.aliyuncs.com/img/Markdown%E7%9A%84%E4%BD%BF%E7%94%A8/markdown.png?Expires=1547097055&OSSAccessKeyId=TMP.AQH9LzzUDmtXExw9XNU6EnE2zXWJjL7kAJdQTOYxnpLojK_yLvvuKKge68QYADAtAhR4uNWAxmQGLdj5AXHJwIpzRFHR9wIVAPb3UfDpBO1JoM8PUuK4FwyRWz7g&Signature=HiUlH7NDEbazB1nCFFhHJQurK7U%3D" alt="" style="width:100%"></p><p class="description">Markdown 是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。</p><a id="more"></a><h2 id="Markdown语法介绍"><a href="#Markdown语法介绍" class="headerlink" title="Markdown语法介绍"></a>Markdown语法介绍</h2><h3 id="段落与换行"><a href="#段落与换行" class="headerlink" title="段落与换行"></a>段落与换行</h3><p>Markdown 中的段落指连续的一段文字，编写时段落之间用至少一个空行隔开，段落内多个空格将被视为一个空格，段首不支持缩进。</p><p>如果想要在显示时显示多个空行，可以插入 <code>&lt;br/&gt;</code> 来实现，注意的是，插入的 <code>&lt;br/&gt;</code> 应与前后的段落中间至少空一行。</p><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p>这是最为常用的格式，在平时常用的的文本编辑器中大多是这样实现的：输入文本、选中文本、设置标题格式。</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Markdown支持两种类型的标题,例如：</span><br><span class="line"></span><br><span class="line"><span class="comment">//类型 1</span></span><br><span class="line">这是一级标题</span><br><span class="line">==========</span><br><span class="line">这是二级标题</span><br><span class="line">----------</span><br><span class="line"></span><br><span class="line"><span class="comment">//类型 2</span></span><br><span class="line"># 这是一级标题</span><br><span class="line">## 这是二级标题</span><br><span class="line">...</span><br><span class="line">###### 这是六级标题</span><br></pre></td></tr></table></figure><p>从上面可以看出类型 1 是在标题下面插入 \= 或者 - 来标识标题等级，但局限是其只能表示两个级别的标题。</p><p>类型 2 是在标题前面插入 1 - 6 个 # ，表示 6 个等级的标题，这是比较推荐的用法。</p><p>注：# 和「一级标题」之间建议保留一个字符的空格，这是最标准的 Markdown 写法。</p><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>列表格式也很常用，在 Markdown 中，你只需要在文字前面加上 -、+或 * 就可以了，例如：<br><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">- </span>文本1</span><br><span class="line"><span class="bullet">- </span>文本2</span><br><span class="line"><span class="bullet">- </span>文本3</span><br></pre></td></tr></table></figure></p><p>上面的 - 可以用 +、*替换。需要注意的是，- 等符号与后面的文字至少空一格空格。</p><p>如果你希望有序列表，<br>也可以在文字前面加上 1. 2. 3. 就可以了，例如：<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 文本<span class="number">1</span></span><br><span class="line"><span class="number">2.</span> 文本<span class="number">2</span></span><br><span class="line"><span class="number">3.</span> 文本<span class="number">3</span></span><br></pre></td></tr></table></figure></p><p>同无序列表一样，标记符号与后面的文字至少空一格空格。但编辑时的数字对显示无影响。</p><h3 id="代码区块"><a href="#代码区块" class="headerlink" title="代码区块"></a>代码区块</h3><p>缩进 4 个空格，需要注意的是，每行代码都需要至少缩进 4 个空格，不能像段落一样采用首行标记的偷懒写法，一个代码区会一直持续到没有缩进 4 个空格的那一行。</p><p>也可以用一对三个连续的撇号 ` 来包裹代码段，例如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这是一个代码区块。</span><br></pre></td></tr></table></figure></p><p>有的解释器还能根据代码的语言从而给代码加上语法高亮，例如：</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">func</span><span class="params">()</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure><h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><p>使用三个及以上的 *、 -或 _来表示一个分割线，符号不能混用，符号之间可以插入多个空格。需要注意的是，使用 - 来插入分割线时需要与上一个段落至少空一行，否则 Markdown 会将上一行文字解释为二级标题。</p><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p>表格是 Markdown 比较复杂的一种表示，例如：<br><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">|<span class="string"> Table </span>|<span class="string"> Col1 </span>|<span class="string"> Col2 </span>|</span><br><span class="line">|<span class="string"> ----- </span>|<span class="string">:----:</span>|<span class="string"> ----:</span>|</span><br><span class="line">|<span class="string"> Row1  </span>|<span class="string"> 1-1  </span>|<span class="string"> 1-2  </span>|</span><br><span class="line">|<span class="string"> Row2  </span>|<span class="string"> 2-1  </span>|<span class="string"> 2-2  </span>|</span><br><span class="line">|<span class="string"> Row3  </span>|<span class="string"> 3-1  </span>|<span class="string"> 3-2  </span>|</span><br></pre></td></tr></table></figure></p><p>注：上面第二行中的点代表对齐方式，分别是默认（居左）、居中、居右。</p><h3 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h3><p>Markdown 中有三种方式实现超链接,例如：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//方式 1</span><br><span class="line">[<span class="string">百度</span>](<span class="link">http://www.baidu.com</span>)</span><br></pre></td></tr></table></figure><p>方式 1 较为常用，也可以为链接的文字加上提示文字，只要在括号中超链接加上空格后添加提示内容即可，例如：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">百度</span>](<span class="link">http://www.baidu.com "这是提示文字"</span>)</span><br></pre></td></tr></table></figure><p>方式 2 由链接文字和链接地址组成，不同的是两者均由 [] 包裹。链接地址的格式为：</p><ul><li>方括号，里面输入链接地址；</li><li>紧接着是一个冒号；</li><li>冒号后面至少一个空格；</li><li>链接地址；</li><li>若有提示文字，空格后用引号或者括号包裹提示文字。</li></ul><p>下面是完整示例：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//方式 2</span><br><span class="line">[<span class="string">百度</span>][<span class="symbol">Baidu-url</span>]</span><br><span class="line">[<span class="symbol">Baidu-url</span>]: <span class="link">http://www.baidu.com</span></span><br></pre></td></tr></table></figure></p><p>第三种方式是用 \&lt;&gt; 来包裹 URL。</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方式 3</span></span><br><span class="line">&lt;<span class="string">http:</span><span class="comment">//www.baidu.com&gt;</span></span><br></pre></td></tr></table></figure><h2 id="加粗和斜体"><a href="#加粗和斜体" class="headerlink" title="加粗和斜体"></a>加粗和斜体</h2><p>Markdown 使用 * 和 _ 来表示粗体和斜体,例如：<br><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//加粗</span></span><br><span class="line"><span class="comment">**这是加粗文字**</span></span><br><span class="line">__这也是加粗文字__</span><br><span class="line"></span><br><span class="line"><span class="comment">//斜体</span></span><br><span class="line"><span class="comment">*这是斜体文字*</span></span><br><span class="line">_这也是斜体文字_</span><br></pre></td></tr></table></figure></p><p>被偶数个 * 或 _ 包裹的文字显示加粗效果，被奇数个包裹的为倾斜效果。</p><p>需要注意的是，* 和 - 要成对出现，不能混合使用，也不能只出现一个。同时，标识符号要与标识的文字紧挨着，符号与符号之间、符号文字之间不能有任何空格。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>使用 ` (撇号) 来包裹一小段代码，例如：<br><figure class="highlight sml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">'hello</span> world'</span><br></pre></td></tr></table></figure></p><p>若想在代码中添加撇号，可以使用多个撇号包裹里面需要添加的撇号，但注意里面的连续的撇号数量不能超过外面的数量,例如:<br><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//显示一个撇号</span></span><br><span class="line">`` ` ``</span><br></pre></td></tr></table></figure></p><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><p>图片的插入方式跟超链接前两种插入方式类似，例如：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//方式 1</span><br><span class="line">![<span class="string">如果图片不能显示，就显示这段文字</span>](<span class="link">图片 url</span>)</span><br><span class="line"></span><br><span class="line">//方式 2</span><br><span class="line">![<span class="string">如果图片不能显示，就显示这段文字</span>][<span class="symbol">Image-url</span>]</span><br><span class="line">[<span class="symbol">Image-url</span>]: <span class="link">图片url "这是提示文字"</span></span><br></pre></td></tr></table></figure></p><h3 id="反斜杠"><a href="#反斜杠" class="headerlink" title="反斜杠"></a>反斜杠</h3><p>我们经常需要在文章中插入一些特殊符号，而这些符号恰好是前面所讲的标识符号，可以在特殊符号前插入 \ 来直接显示符号，而不让 Markdown 来将其解释为标识符号。</p><p>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">\   反斜线</span><br><span class="line">`   反引号</span><br><span class="line"><span class="bullet">*   </span>星号</span><br><span class="line">_   底线</span><br><span class="line">&#123;&#125;  花括号</span><br><span class="line">[]  方括号</span><br><span class="line">()  括弧</span><br><span class="line"><span class="section">#   井字号</span></span><br><span class="line"><span class="bullet">+   </span>加号</span><br><span class="line"><span class="bullet">-   </span>减号</span><br><span class="line">.   英文句点</span><br><span class="line">!   惊叹号</span><br></pre></td></tr></table></figure></p><h2 id="Markdown编辑器"><a href="#Markdown编辑器" class="headerlink" title="Markdown编辑器"></a>Markdown编辑器</h2><p>支持Markdown的编辑器有好多，功能也不完全一致，有的是用来进行基本的写作，有的是用来写代码的，有的甚至只是博客平台配套的编辑器。</p><p>我个人用过一个都很不错，在这儿推荐一下</p><h4 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h4><ul><li>Markdown Pad 2（Pro版要收费，网上有注册码）</li><li>Atom （个人主推，免费，颜值高，还可以安装各式各样的插件）</li></ul><h4 id="Mac"><a href="#Mac" class="headerlink" title="Mac"></a>Mac</h4><ul><li>MacDown</li></ul><p><strong>欢迎大家收藏我的博客，我会努力更新更多的作品的，给自己加个油！</strong></p>]]></content>
    
    <summary type="html">
    
      Markdown语法教程
    
    </summary>
    
      <category term="教程" scheme="http://noahcodemonkey.top/categories/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Markdown语法" scheme="http://noahcodemonkey.top/categories/%E6%95%99%E7%A8%8B/Markdown%E8%AF%AD%E6%B3%95/"/>
    
    
      <category term="Markdown" scheme="http://noahcodemonkey.top/tags/Markdown/"/>
    
      <category term="语法" scheme="http://noahcodemonkey.top/tags/%E8%AF%AD%E6%B3%95/"/>
    
      <category term="教程" scheme="http://noahcodemonkey.top/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Markdown的使用</title>
    <link href="http://noahcodemonkey.top/2018/11/15/Markdown%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://noahcodemonkey.top/2018/11/15/Markdown的使用/</id>
    <published>2018-11-15T11:57:31.000Z</published>
    <updated>2019-01-10T08:14:03.617Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2018/11/15/Markdown的使用/main.png" alt="" style="width:100%"></p><p class="description">Markdown 是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。</p><a id="more"></a><h2 id="Markdown语法介绍"><a href="#Markdown语法介绍" class="headerlink" title="Markdown语法介绍"></a>Markdown语法介绍</h2><h3 id="段落与换行"><a href="#段落与换行" class="headerlink" title="段落与换行"></a>段落与换行</h3><p>Markdown 中的段落指连续的一段文字，编写时段落之间用至少一个空行隔开，段落内多个空格将被视为一个空格，段首不支持缩进。</p><p>如果想要在显示时显示多个空行，可以插入 <code>&lt;br/&gt;</code> 来实现，注意的是，插入的 <code>&lt;br/&gt;</code> 应与前后的段落中间至少空一行。</p><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p>这是最为常用的格式，在平时常用的的文本编辑器中大多是这样实现的：输入文本、选中文本、设置标题格式。</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Markdown支持两种类型的标题,例如：</span><br><span class="line"></span><br><span class="line"><span class="comment">//类型 1</span></span><br><span class="line">这是一级标题</span><br><span class="line">==========</span><br><span class="line">这是二级标题</span><br><span class="line">----------</span><br><span class="line"></span><br><span class="line"><span class="comment">//类型 2</span></span><br><span class="line"># 这是一级标题</span><br><span class="line">## 这是二级标题</span><br><span class="line">...</span><br><span class="line">###### 这是六级标题</span><br></pre></td></tr></table></figure><p>从上面可以看出类型 1 是在标题下面插入 \= 或者 - 来标识标题等级，但局限是其只能表示两个级别的标题。</p><p>类型 2 是在标题前面插入 1 - 6 个 # ，表示 6 个等级的标题，这是比较推荐的用法。</p><p>注：# 和「一级标题」之间建议保留一个字符的空格，这是最标准的 Markdown 写法。</p><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>列表格式也很常用，在 Markdown 中，你只需要在文字前面加上 -、+或 * 就可以了，例如：<br><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">- </span>文本1</span><br><span class="line"><span class="bullet">- </span>文本2</span><br><span class="line"><span class="bullet">- </span>文本3</span><br></pre></td></tr></table></figure></p><p>上面的 - 可以用 +、*替换。需要注意的是，- 等符号与后面的文字至少空一格空格。</p><p>如果你希望有序列表，<br>也可以在文字前面加上 1. 2. 3. 就可以了，例如：<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 文本<span class="number">1</span></span><br><span class="line"><span class="number">2.</span> 文本<span class="number">2</span></span><br><span class="line"><span class="number">3.</span> 文本<span class="number">3</span></span><br></pre></td></tr></table></figure></p><p>同无序列表一样，标记符号与后面的文字至少空一格空格。但编辑时的数字对显示无影响。</p><h3 id="代码区块"><a href="#代码区块" class="headerlink" title="代码区块"></a>代码区块</h3><p>缩进 4 个空格，需要注意的是，每行代码都需要至少缩进 4 个空格，不能像段落一样采用首行标记的偷懒写法，一个代码区会一直持续到没有缩进 4 个空格的那一行。</p><p>也可以用一对三个连续的撇号 ` 来包裹代码段，例如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这是一个代码区块。</span><br></pre></td></tr></table></figure></p><p>有的解释器还能根据代码的语言从而给代码加上语法高亮，例如：</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">func</span><span class="params">()</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure><h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><p>使用三个及以上的 *、 -或 _来表示一个分割线，符号不能混用，符号之间可以插入多个空格。需要注意的是，使用 - 来插入分割线时需要与上一个段落至少空一行，否则 Markdown 会将上一行文字解释为二级标题。</p><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p>表格是 Markdown 比较复杂的一种表示，例如：<br><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">|<span class="string"> Table </span>|<span class="string"> Col1 </span>|<span class="string"> Col2 </span>|</span><br><span class="line">|<span class="string"> ----- </span>|<span class="string">:----:</span>|<span class="string"> ----:</span>|</span><br><span class="line">|<span class="string"> Row1  </span>|<span class="string"> 1-1  </span>|<span class="string"> 1-2  </span>|</span><br><span class="line">|<span class="string"> Row2  </span>|<span class="string"> 2-1  </span>|<span class="string"> 2-2  </span>|</span><br><span class="line">|<span class="string"> Row3  </span>|<span class="string"> 3-1  </span>|<span class="string"> 3-2  </span>|</span><br></pre></td></tr></table></figure></p><p>注：上面第二行中的点代表对齐方式，分别是默认（居左）、居中、居右。</p><h3 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h3><p>Markdown 中有三种方式实现超链接,例如：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//方式 1</span><br><span class="line">[<span class="string">百度</span>](<span class="link">http://www.baidu.com</span>)</span><br></pre></td></tr></table></figure><p>方式 1 较为常用，也可以为链接的文字加上提示文字，只要在括号中超链接加上空格后添加提示内容即可，例如：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">百度</span>](<span class="link">http://www.baidu.com "这是提示文字"</span>)</span><br></pre></td></tr></table></figure><p>方式 2 由链接文字和链接地址组成，不同的是两者均由 [] 包裹。链接地址的格式为：</p><ul><li>方括号，里面输入链接地址；</li><li>紧接着是一个冒号；</li><li>冒号后面至少一个空格；</li><li>链接地址；</li><li>若有提示文字，空格后用引号或者括号包裹提示文字。</li></ul><p>下面是完整示例：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//方式 2</span><br><span class="line">[<span class="string">百度</span>][<span class="symbol">Baidu-url</span>]</span><br><span class="line">[<span class="symbol">Baidu-url</span>]: <span class="link">http://www.baidu.com</span></span><br></pre></td></tr></table></figure></p><p>第三种方式是用 \&lt;&gt; 来包裹 URL。</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方式 3</span></span><br><span class="line">&lt;<span class="string">http:</span><span class="comment">//www.baidu.com&gt;</span></span><br></pre></td></tr></table></figure><h2 id="加粗和斜体"><a href="#加粗和斜体" class="headerlink" title="加粗和斜体"></a>加粗和斜体</h2><p>Markdown 使用 * 和 _ 来表示粗体和斜体,例如：<br><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//加粗</span></span><br><span class="line"><span class="comment">**这是加粗文字**</span></span><br><span class="line">__这也是加粗文字__</span><br><span class="line"></span><br><span class="line"><span class="comment">//斜体</span></span><br><span class="line"><span class="comment">*这是斜体文字*</span></span><br><span class="line">_这也是斜体文字_</span><br></pre></td></tr></table></figure></p><p>被偶数个 * 或 _ 包裹的文字显示加粗效果，被奇数个包裹的为倾斜效果。</p><p>需要注意的是，* 和 - 要成对出现，不能混合使用，也不能只出现一个。同时，标识符号要与标识的文字紧挨着，符号与符号之间、符号文字之间不能有任何空格。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>使用 ` (撇号) 来包裹一小段代码，例如：<br><figure class="highlight sml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">'hello</span> world'</span><br></pre></td></tr></table></figure></p><p>若想在代码中添加撇号，可以使用多个撇号包裹里面需要添加的撇号，但注意里面的连续的撇号数量不能超过外面的数量,例如:<br><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//显示一个撇号</span></span><br><span class="line">`` ` ``</span><br></pre></td></tr></table></figure></p><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><p>图片的插入方式跟超链接前两种插入方式类似，例如：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//方式 1</span><br><span class="line">![<span class="string">如果图片不能显示，就显示这段文字</span>](<span class="link">图片 url</span>)</span><br><span class="line"></span><br><span class="line">//方式 2</span><br><span class="line">![<span class="string">如果图片不能显示，就显示这段文字</span>][<span class="symbol">Image-url</span>]</span><br><span class="line">[<span class="symbol">Image-url</span>]: <span class="link">图片url "这是提示文字"</span></span><br></pre></td></tr></table></figure></p><h3 id="反斜杠"><a href="#反斜杠" class="headerlink" title="反斜杠"></a>反斜杠</h3><p>我们经常需要在文章中插入一些特殊符号，而这些符号恰好是前面所讲的标识符号，可以在特殊符号前插入 \ 来直接显示符号，而不让 Markdown 来将其解释为标识符号。</p><p>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">\   反斜线</span><br><span class="line">`   反引号</span><br><span class="line"><span class="bullet">*   </span>星号</span><br><span class="line">_   底线</span><br><span class="line">&#123;&#125;  花括号</span><br><span class="line">[]  方括号</span><br><span class="line">()  括弧</span><br><span class="line"><span class="section">#   井字号</span></span><br><span class="line"><span class="bullet">+   </span>加号</span><br><span class="line"><span class="bullet">-   </span>减号</span><br><span class="line">.   英文句点</span><br><span class="line">!   惊叹号</span><br></pre></td></tr></table></figure></p><h2 id="Markdown编辑器"><a href="#Markdown编辑器" class="headerlink" title="Markdown编辑器"></a>Markdown编辑器</h2><p>支持Markdown的编辑器有好多，功能也不完全一致，有的是用来进行基本的写作，有的是用来写代码的，有的甚至只是博客平台配套的编辑器。</p><p>我个人用过一个都很不错，在这儿推荐一下</p><h4 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h4><ul><li>Markdown Pad 2（Pro版要收费，网上有注册码）</li><li>Atom （个人主推，免费，颜值高，还可以安装各式各样的插件）</li></ul><h4 id="Mac"><a href="#Mac" class="headerlink" title="Mac"></a>Mac</h4><ul><li>MacDown</li></ul><p><strong>欢迎大家收藏我的博客，我会努力更新更多的作品的，给自己加个油！</strong></p>]]></content>
    
    <summary type="html">
    
      Markdown语法教程
    
    </summary>
    
      <category term="教程" scheme="http://noahcodemonkey.top/categories/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Markdown语法" scheme="http://noahcodemonkey.top/categories/%E6%95%99%E7%A8%8B/Markdown%E8%AF%AD%E6%B3%95/"/>
    
    
      <category term="Markdown" scheme="http://noahcodemonkey.top/tags/Markdown/"/>
    
      <category term="语法" scheme="http://noahcodemonkey.top/tags/%E8%AF%AD%E6%B3%95/"/>
    
      <category term="教程" scheme="http://noahcodemonkey.top/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
</feed>
