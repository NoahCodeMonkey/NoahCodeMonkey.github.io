<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>NoahCodeMonkey&#39;s Blog</title>
  
  <subtitle>一点点积累，一点点奋斗</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://noahcodemonkey.top/"/>
  <updated>2019-07-25T13:50:31.958Z</updated>
  <id>https://noahcodemonkey.top/</id>
  
  <author>
    <name>NoahCode</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>好的开源项目干货分享</title>
    <link href="https://noahcodemonkey.top/2019/07/25/%E5%A5%BD%E7%9A%84%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E5%B9%B2%E8%B4%A7%E5%88%86%E4%BA%AB/"/>
    <id>https://noahcodemonkey.top/2019/07/25/好的开源项目干货分享/</id>
    <published>2019-07-25T13:46:08.000Z</published>
    <updated>2019-07-25T13:50:31.958Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><img src="" alt="" style="width:100%"><p class="description"></p><a id="more"></a><h1 id="好的开源项目干货分享-会持续更新哦"><a href="#好的开源项目干货分享-会持续更新哦" class="headerlink" title="好的开源项目干货分享(会持续更新哦)"></a>好的开源项目干货分享(会持续更新哦)</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本人也是一名菜鸟，本文记录自己在学习中看到的一些不错的开源项目在此与大家分享，感谢这些开源者们，为我们提供了这么优秀的开源项目(至上最崇高的敬意),也激励着自己早日成长，成为他们中的一员</p><h2 id="开源项目"><a href="#开源项目" class="headerlink" title="开源项目"></a>开源项目</h2><ol><li><h3 id="Halo"><a href="#Halo" class="headerlink" title="Halo"></a>Halo</h3><p>Halo 是一款现代化的个人独立博客系统，给习惯写博客的同学一个更好的选择。</p><p>简介：<strong>Halo</strong> [ˈheɪloʊ]，意为光环。当然，你也可以当成拼音读(哈喽)。</p><p>​            轻快，简洁，功能强大，使用 Java 开发的博客系统。</p><p>GitHub：<a href="https://github.com/halo-dev/halo" target="_blank" rel="noopener">https://github.com/halo-dev/halo</a></p><p>官网：<a href="https://halo.run/" target="_blank" rel="noopener">https://halo.run/</a></p><p>官方论坛：<a href="https://bbs.halo.run/" target="_blank" rel="noopener">https://bbs.halo.run/</a></p></li><li><p>mall(这个我没研究过，也是从网上知道的这个项目)</p><p><code>mall</code>项目致力于打造一个完整的电商系统，采用现阶段流行技术实现。</p><p>简介：<code>mall</code>项目是一套电商系统，包括前台商城系统及后台管理系统，基于SpringBoot+MyBatis实现。 前台商城系统包含首页门户、商品推荐、商品搜索、商品展示、购物车、订单流程、会员中心、客户服务、帮助中心等模块。 后台管理系统包含商品管理、订单管理、会员管理、促销管理、运营管理、内容管理、统计报表、财务管理、权限管理、设置等模块。</p><p>GitHub：<a href="https://github.com/macrozheng/mall" target="_blank" rel="noopener">https://github.com/macrozheng/mall</a></p></li><li><p>Hutool(我是推荐学完基础后先看这个，它的源码比较底层非常值得学习)</p><p>A set of tools that keep Java sweet.</p><p>简介：Hutool是一个Java工具包，也只是一个工具包，它帮助我们简化每一行代码，减少每一个方法，让Java语言也可以“甜甜的”。它最初是作者项目中“util”包的一个整理，后来慢慢积累并加入更多非业务相关功能，并广泛学习其它开源项目精髓，经过自己整理修改，最终形成丰富的开源工具集。</p><p>Hutool是Hu + tool的自造词，谐音“糊涂”，寓意，追求“万事都作糊涂观，无所谓失，无所谓得”的境界。</p><p>GitHub：<a href="https://github.com/looly/hutool" target="_blank" rel="noopener">https://github.com/looly/hutool</a></p></li></ol><hr><p>​                                                                            <strong>接下来会持续更新哦</strong></p>]]></content>
    
    <summary type="html">
    
      推荐一些好的开源项目
    
    </summary>
    
      <category term="干货" scheme="https://noahcodemonkey.top/categories/%E5%B9%B2%E8%B4%A7/"/>
    
      <category term="开源项目" scheme="https://noahcodemonkey.top/categories/%E5%B9%B2%E8%B4%A7/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/"/>
    
    
      <category term="干货" scheme="https://noahcodemonkey.top/tags/%E5%B9%B2%E8%B4%A7/"/>
    
      <category term="开源项目" scheme="https://noahcodemonkey.top/tags/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>我的Java学习之旅二</title>
    <link href="https://noahcodemonkey.top/2019/06/13/%E6%88%91%E7%9A%84Java%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%97%85%E4%BA%8C/"/>
    <id>https://noahcodemonkey.top/2019/06/13/我的Java学习之旅二/</id>
    <published>2019-06-13T10:02:13.000Z</published>
    <updated>2019-06-15T07:53:31.694Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><img src="https://noahcodemonkey.top/images/img/我的Java学习之旅二/header.jpg" alt="" style="width:100%"><p class="description">这一篇内容还是挺杂的，有异常、一些常用类、集合框架等，因为学过一些基础，不太熟悉但有印象所以就不像写初学新知识文章那样丰富了，我会记一些主要的知识点，容易记混或者已经记混的知识点，新知识点这些</p><a id="more"></a><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><ol><li><p>异常抛出</p><ol><li>throw<ul><li>将产生的异常抛出(动作) </li></ul></li><li>throws<ul><li>声明将要抛出何种类型的异常(声明)</li><li>代码：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> 方法名(参数列表)</span><br><span class="line">    <span class="keyword">throws</span> 异常列表&#123;</span><br><span class="line">        <span class="comment">//调用会抛出异常的方法或者:</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> Exception();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul></li></ol></li><li><p>异常的实际应用中的经验与总结</p><ol><li>处理运行时异常时，采用逻辑去合理规避同时雇主try-catch处理</li><li>在多重catch块后面，可以加一个cath(Exception)来处理可能会被遗漏的异常</li><li>对于不确定的代码，也可以加上try-catch来处理潜在的异常</li><li>尽量去处理异常，切忌知识简单的调用printStackTrace()去打印输出</li><li>具体如何处理异常，要根据不同的业务需求和异常类型去决定</li><li>尽量添加finally语句块去释放占用的资源</li></ol></li><li><p>字符串</p><ol><li><p>多次出现的字符常量，Java编译程序只创建一个，所以当两个字符常量相等的话，判断他们的地址是相同的</p><ul><li>代码  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">String s1=<span class="string">"NoahCode"</span>;</span><br><span class="line">String s2=<span class="string">"NoahCode"</span>;</span><br><span class="line">System.out.println(s1==s2);</span><br><span class="line">控制台输出：</span><br><span class="line"><span class="keyword">true</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>通过 String s1=”爱慕课”; 声明了一个字符串对象， s1 存放了到字符串对象的引用，在内存中的存放引用关系如下图所示：</p><p> <img src="https://noahcodemonkey.top/images/img/%E6%88%91%E7%9A%84Java%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%97%85%E4%BA%8C/img01.jpg" alt="诶呀，图片加载出了点问题！"></p><p> 然后通过 s1=”欢迎来到：”+s1; 改变了字符串 s1 ，其实质是创建了新的字符串对象，变量 s1 指向了新创建的字符串对象，如下图所示：</p><p> <img src="https://noahcodemonkey.top/images/img/%E6%88%91%E7%9A%84Java%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%97%85%E4%BA%8C/img02.jpg" alt="诶呀，图片加载出了点问题！"></p></li><li><p>一旦一个字符串在内存中创建，则这个字符串将不可改变。如果需要一个可以改变的字符串，我们可以使用StringBuffer或者StringBuilder</p></li><li><p>每次 new 一个字符串就是产生一个新的对象，即便两个字符串的内容相同，使用 ”==” 比较时也为 ”false” ,如果只需比较内容是否相同，应使用 ”equals()” 方法</p></li></ol></li><li><p>String类的常用方法</p><p><img src="https://noahcodemonkey.top/images/img/%E6%88%91%E7%9A%84Java%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%97%85%E4%BA%8C/img03.jpg" alt="诶呀，图片加载出了点问题！"></p><p> <strong>注意点</strong></p><ol><li>字符串 str 中字符的索引从0开始，范围为 0 到 str.length()-1</li><li>使用 indexOf 进行字符或字符串查找时，如果匹配返回位置索引；如果没有匹配结果，返回 <strong>-1</strong></li><li>使用 substring(beginIndex , endIndex) 进行字符串截取时，包括 beginIndex 位置的字符，不包括 endIndex 位置的字符</li></ol></li><li><p>到现在还在搞混的知识点</p><ol><li><p>获取数组，字符串，集合的大小</p><ul><li>如果是数组的话：数组.length属性；</li><li>如果是字符串的话：字符串.length()方法；</li><li>如果是集合的话：集合.size()方法；</li></ul><ol start="2"><li><p>==和equals</p><ul><li><p>基本数据类型，也称原始数据类型。（byte,short,char,int,long,float,double,boolean）</p><p> 它们之间的比较，应用双等号（==）,比较的是他们的值。 </p></li><li><p>复合数据类型(类) </p><p> 当他们用（==）进行比较的时候，比较的是他们在内存中的存放地址，所以，除非是同一个new出来的对象，他们的比较后的结果为true，否则比较后结果为false。 JAVA当中所有的类都是继承于Object这个基类的，在Object中的基类中定义了一个equals的方法，这个方法的初始行为是比较对象的内存地 址，但在一些类库当中这个方法被覆盖掉了，如String,Integer,Date在这些类当中equals有其自身的实现，而不再是比较类在堆内存中的存放地址了。</p><p> 对于复合数据类型之间进行equals比较，在没有覆写equals方法的情况下，他们之间的比较还是基于他们在内存中的存放位置的地址值的，因为Object的equals方法也是用双等号（==）进行比较的，所以比较后的结果跟双等号（==）的结果相同。</p></li><li><p>代码案例：</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">      <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> </span>&#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 定义一个字符串</span></span><br><span class="line">String s = <span class="string">"aljlkdsflkjsadjfklhasdkjlflkajdflwoiudsafhaasdasd"</span>;</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// 出现次数</span></span><br><span class="line"><span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">  </span><br><span class="line">          <span class="comment">// 循环遍历每个字符，判断是否是字符 a ，如果是，累加次数</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.length();i++)</span><br><span class="line">    &#123;</span><br><span class="line">              <span class="comment">// 获取每个字符，判断是否是字符a</span></span><br><span class="line">     <span class="keyword">if</span> (s.charAt(i)==<span class="string">'a'</span>) &#123;</span><br><span class="line">                  <span class="comment">// 累加统计次数</span></span><br><span class="line">      num++; </span><br><span class="line">     &#125;</span><br><span class="line">    &#125;</span><br><span class="line">System.out.println(<span class="string">"字符a出现的次数："</span> + num);</span><br><span class="line">       &#125;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure></li></ul></li></ol></li></ol></li><li><p>StringBuilder类常用方法</p><p> <img src="https://noahcodemonkey.top/images/img/%E6%88%91%E7%9A%84Java%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%97%85%E4%BA%8C/img04.jpg" alt="诶呀，图片加载出了点问题！"></p><ol><li><p>测试题</p><ul><li><p>功能：将一个由英文字母组成的字符串转换成指定格式—从右边开始每三个字母用逗号分隔的形式</p></li><li><p>代码：</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">      <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> </span>&#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 创建一个空的StringBuilder对象</span></span><br><span class="line">StringBuilder str=<span class="keyword">new</span> StringBuilder();</span><br><span class="line"><span class="comment">// 追加字符串</span></span><br><span class="line">str.append(<span class="string">"jaewkjldfxmopzdm"</span>);</span><br><span class="line">      <span class="comment">// 从后往前每隔三位插入逗号</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=str.length();i&gt;=<span class="number">0</span>;i-=<span class="number">3</span>)&#123;</span><br><span class="line">    str.insert(i,<span class="string">","</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 将StringBuilder对象转换为String对象并输出</span></span><br><span class="line">System.out.print(str.toString());</span><br><span class="line">   &#125;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure></li><li><p>这道题目我居然想了半天，看了别人的代码，才想到了解决方案,我就是迟迟想不到for可以使用i-=3;脑子中一直卡着i–;for循环里面判断(str.length()-i)/3==0的时候insert，可是这样的话他就会把新加入的’,’也当做一位然后就错了</p></li></ul></li></ol></li><li><p>包装类</p><ol><li><p>基本类型和包装类之间对应关系<br>  <img src="https://noahcodemonkey.top/images/img/%E6%88%91%E7%9A%84Java%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%97%85%E4%BA%8C/img05.jpg" alt="诶呀，图片加载出了点问题！"></p><p>  Integer包装类的构造方法:</p><p>  <img src="https://noahcodemonkey.top/images/img/%E6%88%91%E7%9A%84Java%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%97%85%E4%BA%8C/img05_01.jpg" alt="诶呀，图片加载出了点问题！"></p><p>  Integer包装类中最常用方法:</p><p>  <img src="https://noahcodemonkey.top/images/img/%E6%88%91%E7%9A%84Java%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%97%85%E4%BA%8C/img05_02.jpg" alt="诶呀，图片加载出了点问题！"></p><ol start="2"><li><p>基本类型和包装类之间的转换</p><ol><li><p>装箱</p><ul><li><p>把基本类型转换成包装类，使其具有对象的性质，又可分为手动装箱和自动装箱</p><ol><li><p>手动装箱</p><ul><li>代码： <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Integer i1 = <span class="keyword">new</span> Integer(<span class="number">10</span>);</span><br></pre></td></tr></table></figure></li></ul></li><li><p>自动装箱</p><ul><li>代码： <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Integer i2 = <span class="number">10</span>;</span><br></pre></td></tr></table></figure></li></ul></li></ol></li></ul></li><li><p>拆箱</p><ul><li><p>和装箱相反，把包装类对象装换成基本类型的值，又可分为手动拆箱和自动拆箱</p><ol><li><p>手动拆箱</p><ul><li>代码： <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i3 = i1.intValue();</span><br></pre></td></tr></table></figure></li></ul></li><li><p>自动拆箱</p><ul><li>代码： <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">                    <span class="keyword">int</span> i4 = i2;</span><br><span class="line">                    ``` </span><br><span class="line"><span class="number">8</span>. 基本类型和字符串之间的转换</span><br><span class="line">    <span class="number">1</span>. 基本类型转换为字符串有三种方法：</span><br><span class="line">       <span class="number">1</span>. 使用包装类的toString()方法</span><br><span class="line">       <span class="number">2</span>. 使用String类的valueOf()方法</span><br><span class="line">       <span class="number">3</span>. 用一个空字符串加上基本类型得到的就是基本类型数据对应的字符串</span><br><span class="line">    <span class="number">2</span>. 字符串转换成基本类型有两种方法</span><br><span class="line">       <span class="number">1</span>. 调用包装类的parseXxx静态方法</span><br><span class="line">       <span class="number">2</span>. 调用包装类的valueOf()方法转换为基本类型的包装类，会自动拆箱</span><br><span class="line"><span class="number">9</span>. 使用Date和SimpleDateFormat类表示时间</span><br><span class="line">    <span class="number">1</span>. Date类</span><br><span class="line">       * <span class="keyword">import</span> java.util.data;(它所在的包)</span><br><span class="line">       * Date 类的默认无参构造方法创建出的对象就代表当前时间，我们可以直接输出Date对象显示当前的时间，显示结果如下：</span><br><span class="line">            ![诶呀，图片加载出了点问题！](https:<span class="comment">//noahcodemonkey.top/images/img/我的Java学习之旅二/img06.jpg)</span></span><br><span class="line">       * 其中， Wed 代表 Wednesday (星期三)， Jun 代表 June (六月)， <span class="number">11</span> 代表 <span class="number">11</span> 号， CST 代表 <span class="function">China Standard <span class="title">Time</span> <span class="params">(中国标准时间，也就是北京时间，东八区)</span>。</span></span><br><span class="line"><span class="function">       * 从上面的输出结果中，我们发现，默认的时间格式不是很友好，与我们日常看到的日期格式不太一样，如果想要按指定的格式进行显示，如 2014-06-11 09:22:30，这时候我们就可以可以使用 SimpleDateFormat 来对日期时间进行格式化，如可以将日期转换为指定格式的文本，也可将文本转换为日期</span></span><br><span class="line"><span class="function">    2. SimpleDateFormat类</span></span><br><span class="line"><span class="function">        * <span class="keyword">import</span> java.text.SimpleDateFormat</span>;(它的包的位置)</span><br><span class="line">        * 使用 format() 方法将日期转换为指定格式的文本</span><br><span class="line">            </span><br><span class="line">            ![诶呀，图片加载出了点问题！](https:<span class="comment">//noahcodemonkey.top/images/img/我的Java学习之旅二/img07.jpg)</span></span><br><span class="line">        </span><br><span class="line">        * 使用 parse() 方法将文本转换为日期</span><br><span class="line">            </span><br><span class="line">            ![诶呀，图片加载出了点问题！](https:<span class="comment">//noahcodemonkey.top/images/img/我的Java学习之旅二/img08.jpg)</span></span><br><span class="line">        </span><br><span class="line">        * 注意：</span><br><span class="line">           <span class="number">1</span>. 调用 SimpleDateFormat 对象的 parse() 方法时可能会出现转换异常，即 ParseException ，因此需要进行异常处理</span><br><span class="line">           <span class="number">2</span>. 使用 Date 类时需要导入 java.util 包，使用 SimpleDateFormat 时需要导入 java.text 包</span><br><span class="line"><span class="number">10</span>. Calendar类的应用</span><br><span class="line">    * <span class="keyword">import</span> java.util.Calendar;</span><br><span class="line">    * java.util.Calendar 类是一个抽象类，可以通过调用 getInstance() 静态方法获取一个 Calendar 对象，此对象已由当前日期时间初始化，即默认代表当前时间:Calendar c = Calendar.getInstance();</span><br><span class="line">    * 想要获取年、月、日、时间等信息，我们可以在创建完对象后使用get()方法来获取日期时间信息，参数为需要获得的字段的值：Calendar.Year...(如图所示)</span><br><span class="line">        </span><br><span class="line">        ![诶呀，图片加载出了点问题！](https:<span class="comment">//noahcodemonkey.top/images/img/我的Java学习之旅二/img09.jpg)</span></span><br><span class="line">    </span><br><span class="line">    * Calendar 类提供了 getTime() 方法，用来获取 Date 对象，完成 Calendar 和 Date 的转换，还可通过 getTimeInMillis() 方法，获取此 Calendar 的时间值，以毫秒为单位(如图所示)</span><br><span class="line">        </span><br><span class="line">        ![诶呀，图片加载出了点问题！](https:<span class="comment">//noahcodemonkey.top/images/img/我的Java学习之旅二/img010.jpg)</span></span><br><span class="line"></span><br><span class="line"><span class="number">11</span>. Math类操作数据</span><br><span class="line">    * 常用的方法：</span><br><span class="line">        </span><br><span class="line">        ![诶呀，图片加载出了点问题！](https:<span class="comment">//noahcodemonkey.top/images/img/我的Java学习之旅二/img011.jpg)</span></span><br><span class="line"></span><br><span class="line"><span class="number">12</span>. Java中的集合框架</span><br><span class="line">    </span><br><span class="line">    ![诶呀，图片加载出了点问题！](https:<span class="comment">//noahcodemonkey.top/images/img/我的Java学习之旅二/img012.png)</span></span><br><span class="line"></span><br><span class="line">    <span class="number">1</span>. 通过迭代器遍历List</span><br><span class="line">        ```Java</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testIterator</span><span class="params">()</span></span>&#123;</span><br><span class="line">            Iterator it = coursesToSelect.iterator();</span><br><span class="line">            <span class="keyword">while</span>(it.hasNext())&#123;</span><br><span class="line">                Course cr = (Course)it.next();</span><br><span class="line">                System.out.println(<span class="string">"课程:"</span>+cr.id+<span class="string">":"</span>+cr.name);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li></ul></li></ol></li></ul></li></ol></li><li><p>对集合进行排序</p><ul><li>import java.util.Collections;</li><li>使用Collections.sort();进行排序</li></ul></li></ol></li></ol></li><li><p>Comparable和Comparator</p><ol><li>Comparable接口–可比较的<ul><li>实现该接口表示：这个类的实例可以比较大小，可以进行自然排序</li><li>定义了默认的比较规则</li><li>其实现类需要实现compareTo()方法</li><li>compareTo()方法返回证书表示大，负数表示小，0表示相等</li></ul></li><li>Comparator接口–比较工具接口<ul><li>用一定以临时比较规则，而不是默认比较规则</li><li>其实现类需要实现compare()方法</li><li>Comparator和Comparable都是Java集合框架的成员</li></ul></li></ol></li></ol><p><strong>到头来就是要多写代码，多看API，有很多有意思的方法，虽然很少用，但是能减轻我们的代码量，要去认识它们，想到它们，熟悉它们</strong></p>]]></content>
    
    <summary type="html">
    
      我的 Java 学习之旅二--异常、类、集合框架
    
    </summary>
    
      <category term="Java" scheme="https://noahcodemonkey.top/categories/Java/"/>
    
      <category term="入门" scheme="https://noahcodemonkey.top/categories/Java/%E5%85%A5%E9%97%A8/"/>
    
      <category term="教程" scheme="https://noahcodemonkey.top/categories/Java/%E5%85%A5%E9%97%A8/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="https://noahcodemonkey.top/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Java" scheme="https://noahcodemonkey.top/tags/Java/"/>
    
      <category term="入门" scheme="https://noahcodemonkey.top/tags/%E5%85%A5%E9%97%A8/"/>
    
  </entry>
  
  <entry>
    <title>我的Java学习之旅一</title>
    <link href="https://noahcodemonkey.top/2019/06/12/%E6%88%91%E7%9A%84Java%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%97%85%E4%B8%80/"/>
    <id>https://noahcodemonkey.top/2019/06/12/我的Java学习之旅一/</id>
    <published>2019-06-12T05:11:41.000Z</published>
    <updated>2019-06-15T12:28:49.419Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><img src="https://noahcodemonkey.top/images/img/我的Java学习之旅一/header.jpg" alt="" style="width:100%"><p class="description">开始重新学习Java知识，最终目标是Java的后端开发，从头开始，一点一滴，不急不躁。</p><a id="more"></a><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><ol><li><p>源文件的编译过程</p><p> 源文件(.java) -&gt; compiler(编译器) -&gt; 字节码文件(.class) -&gt; interpreter(解释器) -&gt; 软件(program)</p></li><li><p>随机数的创建</p><ol><li><p>脑子中一直只有创建Random对象，然后使用随机数</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">   Random random = <span class="keyword">new</span> Random();</span><br><span class="line">nums[i] = random.nextInt(<span class="number">100</span>);</span><br></pre></td></tr></table></figure><ol start="2"><li>现在才知道Math类中也有random随机数<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nums[i]=(<span class="keyword">int</span>)(Math.random()*<span class="number">100</span>);</span><br></pre></td></tr></table></figure></li></ol></li></ol></li><li><p>静态初始化块只在类加载时执行，且只会执行一次，同时静态初始化块只能给静态变量赋值，不能初始化普通的成员变量</p></li><li><p>this</p><ul><li>this关键字代表当前对象<ul><li>this.属性 操作当前对象的属性</li><li>this.方法 调用当前对象的方法</li></ul></li><li>封装对象的属性的时候，经常会使用this关键字</li></ul></li><li><p>创建内部类对象：内部类 对象名 = 外部类对象.new 内部类( )</p></li><li><p>内部类的使用注意点</p><ol><li>外部类是不能直接使用内部类的成员和方法滴</li><li>如果外部类和内部类具有相同的成员变量或方法，内部类默认访问自己的成员变量或方法，如果要访问外部类的成员变量，可以使用 this 关键字</li></ol></li><li><p>静态内部类</p><ol><li>静态内部类不能直接访问外部类的非静态成员，但可以通过 new 外部类().成员 的方式访问</li><li>如果外部类的静态成员与内部类的成员名称相同，可通过“类名.静态成员”访问外部类的静态成员；如果外部类的静态成员与内部类的成员名称不相同，则可通过“成员名”直接调用外部类的静态成员</li><li>创建静态内部类的对象时，不需要外部类的对象，可以直接创建 内部类 对象名= new 内部类();</li></ol></li><li><p>方法内部类</p><ol><li>由于方法内部类不能在外部类的方法以外的地方使用，因此方法内部类不能使用访问控制符和 static 修饰符</li></ol></li><li><p>final 修饰的类不可被继承</p></li><li><p>super关键字：在对象的内部使用，可以代表父类对象</p><ul><li><p>若要访问父类的属性：super.age</p></li><li><p>若要访问父类的方法：super.eat()</p></li><li><p>super的应用：</p><ol><li>子类的构造的过程当中必须调用其父类的构造方法</li><li>如果子类的构造方法中没有显示调用父类的构造方法，则系统会默认调用父类无参的构造方法</li><li>如果显示的调用构造方法，必须在子类的构造方法的第一行</li><li>如果子类构造方法中既没有显示调用父类的构造方法，而父类有没有无参的构造方法，则编译错误</li></ol></li></ul></li><li><p>包的命名规范：包名应该全是<strong>小写字母</strong>拼写</p></li><li><p>object类的使用</p><ol><li>toString()方法<ul><li>在object类里面定义toString()方法的时候返回的对象的哈希code码(对象地址字符串)</li><li>我们可以通过重写toString()方法表示出对象的属性</li></ul></li><li>equals()方法<ul><li>比较的是<strong>对象的引用是否只想同一块内存地址</strong></li><li>若要比较两个对象的值是否相同，我们需要重写equals方法</li></ul></li></ol></li></ol><p><strong>PS:在生成的重写equals方法中有一个getClass()方法，下面有一张图片方便我们理解</strong></p><p><img src="https://noahcodemonkey.top/images/img/%E6%88%91%E7%9A%84Java%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%97%85%E4%B8%80/img01.png" alt="诶呀，图片加载出了点问题！"></p><p>差别：</p><ol><li><p>类的对象：主要关注的是类的对象的值的信息</p></li><li><p>类对象：主要关注的是类的属性的信息</p></li><li><p>多态</p><ol><li><p>引用多态</p><ul><li><p>父类的引用可以指向本类的对象</p><ul><li>代码：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Animal a1 = <span class="keyword">new</span> Animal();</span><br></pre></td></tr></table></figure></li></ul></li><li><p>父类的引用可以指向子类的对象</p><ul><li>代码：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Animal a2 = <span class="keyword">new</span> Dog();</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><p>方法多态</p><ul><li><p>创建本类对象时，调用的方法为本类方法</p><ul><li>代码：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Animal a1 = <span class="keyword">new</span> Animal();</span><br><span class="line">a1.eat();<span class="comment">//此方法为父类Animal的eat方法</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>创建子类对象时，调用的方法为子类重写的方法或者继承的方法</p><ul><li>代码：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Animal a2 = <span class="keyword">new</span> Dog();</span><br><span class="line">a1.eat();<span class="comment">//此方法为子类Dog的eat方法</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ol></li><li><p>引用类型的转换</p><ol><li><p>向上类型转换(隐式/自动类型转换)，是小类型到大类型的转换</p><ul><li>没有风险，可以直接转换</li><li>代码：  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Dog dog = <span class="keyword">new</span> Dog();</span><br><span class="line">Animal animal = dog;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>向下类型转换(强制转换)，是大类型到小类型</p><ul><li>有风险</li><li>代码：  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Dog dog = <span class="keyword">new</span> Dog();</span><br><span class="line">Animal animal = dog;</span><br><span class="line">Dog dog2 = (Dog)animal;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>instanceof运算符，来解决引用对象的类型，避免类型转换的安全性问题</p><ul><li>自我总结：使用起来就像try catch</li><li>代码：  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(animal <span class="keyword">instanceof</span> Dog)&#123;</span><br><span class="line">    Dog dog2 = (Dog)animal;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"无法进行类型转换"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ol></li><li><p>抽象类</p><ol><li>应用场景<ol><li>在某些情况下，某个父类知识知道其子类应该包含怎样的方法，但无法准确知道这些子类如何实现这些方法</li><li>从多个具有相同特征的类中抽象出一个抽象类，以这个抽象类作为子类的模版，从而避免了子类设计的随意性</li></ol></li><li>作用：<ul><li>限制规定子类必须实现某些方法，但不关注实现细节</li></ul></li><li>使用规则： <ol><li>abstract 定义抽象类</li><li>abstract定义抽象方法，只有声明，不需要实现</li><li>包含抽象方法的类是抽象类</li><li>抽象类中可以包含普通的方法，也可以没有抽象方法</li><li>抽象类不能直接创建，可以定义引用变量</li></ol></li></ol></li><li><p>接口 <strong>(负责功能的拓展)</strong></p><ol><li><p>接口的概念</p><ul><li>接口可以理解为一种特殊的类，由全局常量和公共的抽象方法组成</li><li>类是一种具体实现体，而接口定义了某一批类所需要遵守的规范，接口不关心这些类的内部数据，也不关心这些类里的方法的实现细节，她只规定这些类里必须提供某些方法</li></ul></li><li><p>接口定义</p><ul><li>和类定义不同，定义接口不再使用class关键字，而是使用interface关键字</li></ul></li><li><p>接口就是用来被继承、被实现的，修饰符一般建议用public </p><p> <strong>注意：不能使用private和protected修饰接口</strong></p></li></ol></li><li><p>项目的分析</p><ol><li>数据模型分析<ul><li>通过对像是世界的事与物主要特征的分析、抽象，为信息系统提供的 实施提供数据存储的数据结构以及相应的约束</li><li>数据结构组成：操作(方法)、属性</li></ul></li><li>业务模型分析 <ul><li>在设计应用程序之前，应该明确该应用程序必须执行哪些任务</li><li>分析业务需求是应该用程序开发中最重要的步骤之一</li><li>确认业务需求的目的在于创建一个能同事满足零售商和消费者需要的解决方案</li></ul></li><li>显示和流程分析<ul><li>显示：用户可以看到的信息提示界面</li><li>流程：显示信息的执行过、步骤</li></ul></li></ol></li></ol><h2 id="习题测试"><a href="#习题测试" class="headerlink" title="习题测试"></a>习题测试</h2><p>最后一章视频中老师给我们一个小任务让我们去完成，我完全用的是老的知识去完成了这个项目，并没有使用什么封装啊，多态啊什么的，感觉自己真的对于这块的知识不是很熟悉，遇到问题基本想不到要去用到他们，我想以后更多的练习来提升自己的编码思维</p>]]></content>
    
    <summary type="html">
    
      我的 Java 学习之旅一
    
    </summary>
    
      <category term="Java" scheme="https://noahcodemonkey.top/categories/Java/"/>
    
      <category term="入门" scheme="https://noahcodemonkey.top/categories/Java/%E5%85%A5%E9%97%A8/"/>
    
      <category term="教程" scheme="https://noahcodemonkey.top/categories/Java/%E5%85%A5%E9%97%A8/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="https://noahcodemonkey.top/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Java" scheme="https://noahcodemonkey.top/tags/Java/"/>
    
      <category term="入门" scheme="https://noahcodemonkey.top/tags/%E5%85%A5%E9%97%A8/"/>
    
  </entry>
  
  <entry>
    <title>我的Spring学习之旅二</title>
    <link href="https://noahcodemonkey.top/2019/06/07/%E6%88%91%E7%9A%84Spring%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%97%85%E4%BA%8C/"/>
    <id>https://noahcodemonkey.top/2019/06/07/我的Spring学习之旅二/</id>
    <published>2019-06-07T02:56:24.000Z</published>
    <updated>2019-06-13T09:57:52.418Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><img src="https://noahcodemonkey.top/images/img/我的Spring学习之旅二/header.jpg" alt="" style="width:100%"><p class="description"></p><a id="more"></a><h2 id="学习内容"><a href="#学习内容" class="headerlink" title="学习内容"></a>学习内容</h2><ol><li>Spring中IOC的常用注解</li><li>案例使用XML方式和注解方式实现单标的CURD操作<ul><li>持久层技术选择：dbutils</li></ul></li><li>改造基于注解的IOC案例，使用纯主机的方式实现<ul><li>spring的一些新注解的使用</li></ul></li><li>Spring和Junit整合</li></ol><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><p><strong>注意：用于告知Spring在创建容器时要扫描的包，配置所需要的标签不是在bean的约束中，而是一个名称为context名称空间和约束中</strong></p><p>代码如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/context/spring-context.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.noahcode"</span>&gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li>Spring中IOC的常用注解<ol><li>用于创建对象的<ul><li>他们的作用就和在XML配置文件中编写一个&lt;bean&gt;标签实现的功能是一样的</li><li>@Component<ul><li>用于把当前对象存入Spring容器中</li><li>属性：<ul><li>value：用于指定bean的id。当我们不写时，它的默认值是当前类名，且首字母改小写</li></ul></li></ul></li><li>@Controller:一般用在表现层</li><li>@Service：一般用在业务层</li><li>@Repository：一般用于持久层</li><li>以上三个注解他们的作用和属性与Component是一模一样的。他们三个是Spring框架为我们提供明确的三层使用的注解，使我们的三层对象更加清晰</li></ul></li><li>用于注入数据的<ul><li>他们的作用就和在XML配置文件中的&lt;bean&gt;标签中写一个&lt;property&gt;标签的作用是一样的</li><li>@Autowired<ul><li>作用：<ul><li>自动按照类型注入，只要容器中有唯一的一个bean对象类型和要注入的变量类型匹配就可以注入成功；</li><li>如果IOC容器中没有任何bean的类型和要注入的数据类型匹配就报错；</li><li>如果IOC中有多个类型匹配时，首先先按照数据类型圈定出来匹配的对象，然后再使用变量名称作为bean的id在圈定出来的对象中进项匹配，如果有就注入成功，如果没有就报错。</li></ul></li><li>出现位置：<ul><li>可以是变量上，也可以是方法上</li></ul></li><li>细节：<ul><li>在使用注解注入时，set方法就不是必须的了。</li></ul></li></ul></li><li>@Qualifier:<ul><li>作用：在按照类中注入的基础之上再按照名称注入，他在给类成员注入时不能单独使用，但是在给方法参数注入时可以</li><li>属性：<ul><li>value：用于指定注入bean的id</li></ul></li></ul></li><li>@Resource<ul><li>作用：直接按照bean的id注入，他可以独立使用</li><li>属性：<ul><li>name：用于指定bean的id</li></ul></li></ul></li><li>以上三种注解都只能注入其他bean类型的数据，而基本类型和String类型无法使用上述注解实现，另外，集合类型的注入只能通过XML来实现。</li><li>@Value<ul><li>作用：用于注入基本类型和String类型的数据</li><li>属性：<ul><li>value：用于指定数据的值，它可以使用Spring中的SpEL(也就是Spring的el表达式)</li><li><strong>SpEL的写法：${表达式}</strong></li></ul></li></ul></li></ul></li><li>用于改变作用范围的<ul><li>他们的作用就和在&lt;bean&gt;标签中使用scope属相实现是一样的</li><li>@Scope<ul><li>作用：用于指定bean的作用范围</li><li>属性：<ul><li>value：指定范围的取值。常用取值：singleton(单例/默认)prototype(多例)</li></ul></li></ul></li></ul></li><li>和生命周期相关的(<strong>仅需了解</strong>)<ul><li>他们的作用就和在&lt;bean&gt;标签中使用init-method和destroy-methode属性的作用是一样的</li><li>@PostConstruct<ul><li>作用：用于指定初始化方法</li></ul></li><li>@PreDestroy<ul><li>作用：用于指定销毁方法</li></ul></li></ul></li></ol></li></ol><h2 id="JDBC项目代码记录-xml配置版"><a href="#JDBC项目代码记录-xml配置版" class="headerlink" title="JDBC项目代码记录(xml配置版)"></a>JDBC项目代码记录(xml配置版)</h2><ol><li>pom.xml</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.noahcode<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>day01_spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-dbutils<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-dbutils<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.13<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>src/main/java/com/noahcode/domain/Account</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.noahcode.domain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 账户的实体类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Account</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> money;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">float</span> <span class="title">getMoney</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> money;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMoney</span><span class="params">(<span class="keyword">float</span> money)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.money = money;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Account&#123;"</span> +</span><br><span class="line">                <span class="string">"id="</span> + id +</span><br><span class="line">                <span class="string">", name='"</span> + name + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", money="</span> + money +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>src/main/java/com/noahcode/service/IAccountService</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.noahcode.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.noahcode.domain.Account;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 账户的业务层接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IAccountService</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询所有</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;Account&gt; <span class="title">findAllAccount</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询一个</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">Account <span class="title">findAccountByID</span><span class="params">(Integer accountId)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> account</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">saveAccount</span><span class="params">(Account account)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> account</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">updateAccount</span><span class="params">(Account account)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> accountId</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">deleteAccount</span><span class="params">(Integer accountId)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>src/main/java/com/noahcode/service/impl/AccountService</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.noahcode.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.noahcode.dao.IAccountDao;</span><br><span class="line"><span class="keyword">import</span> com.noahcode.domain.Account;</span><br><span class="line"><span class="keyword">import</span> com.noahcode.service.IAccountService;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 账户的业务层实现类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountServiceImpl</span> <span class="keyword">implements</span> <span class="title">IAccountService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> IAccountDao accountDao;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAccountDao</span><span class="params">(IAccountDao accountDao)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.accountDao = accountDao;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Account&gt; <span class="title">findAllAccount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> accountDao.findAllAccount();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Account <span class="title">findAccountByID</span><span class="params">(Integer accountId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> accountDao.findAccountByID(accountId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveAccount</span><span class="params">(Account account)</span> </span>&#123;</span><br><span class="line">        accountDao.saveAccount(account);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateAccount</span><span class="params">(Account account)</span> </span>&#123;</span><br><span class="line">        accountDao.updateAccount(account);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteAccount</span><span class="params">(Integer accountId)</span> </span>&#123;</span><br><span class="line">        accountDao.deleteAccount(accountId);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>src/main/java/com/noahcode/dao/IAccountDao</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.noahcode.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.noahcode.domain.Account;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 账户的持久层</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IAccountDao</span></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询所有</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;Account&gt; <span class="title">findAllAccount</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询一个</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">Account <span class="title">findAccountByID</span><span class="params">(Integer accountId)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> account</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">saveAccount</span><span class="params">(Account account)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> account</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">updateAccount</span><span class="params">(Account account)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> accountId</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">deleteAccount</span><span class="params">(Integer accountId)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="6"><li>src/main/java/com/noahcode/dao/impl/AccountDao</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.noahcode.dao.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.noahcode.dao.IAccountDao;</span><br><span class="line"><span class="keyword">import</span> com.noahcode.domain.Account;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbutils.QueryRunner;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbutils.handlers.BeanHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbutils.handlers.BeanListHandler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 账户的持久层实现类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountDao</span> <span class="keyword">implements</span> <span class="title">IAccountDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> QueryRunner runner;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRunner</span><span class="params">(QueryRunner runner)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.runner = runner;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Account&gt; <span class="title">findAllAccount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> runner.query(<span class="string">"select * from account"</span>,<span class="keyword">new</span> BeanListHandler&lt;Account&gt;(Account.class));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Account <span class="title">findAccountByID</span><span class="params">(Integer accountId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> runner.query(<span class="string">"select * from account where id = ?"</span>,<span class="keyword">new</span> BeanHandler&lt;Account&gt;(Account.class),accountId);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveAccount</span><span class="params">(Account account)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            runner.update(<span class="string">"insert into account(name,money)values(?,?)"</span>,account.getName(),account.getMoney());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateAccount</span><span class="params">(Account account)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            runner.update(<span class="string">"update account set name=?,money=? where id=?"</span>,account.getName(),account.getMoney(),account.getId());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteAccount</span><span class="params">(Integer accountId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            runner.update(<span class="string">"delete from account where id=?"</span>,accountId);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="7"><li>/src/main/java/resources/bean.xml</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/beans/spring-beans.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--配置Service对象--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"accountService"</span> <span class="attr">class</span>=<span class="string">"com.noahcode.service.impl.AccountServiceImpl"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"accountDao"</span> <span class="attr">ref</span>=<span class="string">"accountDao"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--配置Dao对象--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"accountDao"</span> <span class="attr">class</span>=<span class="string">"com.noahcode.dao.impl.AccountDao"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"runner"</span> <span class="attr">ref</span>=<span class="string">"runner"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--配置QueryRunner对象--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"runner"</span> <span class="attr">class</span>=<span class="string">"org.apache.commons.dbutils.QueryRunner"</span> <span class="attr">scope</span>=<span class="string">"prototype"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"ds"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--配置数据源对象--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSource"</span> <span class="attr">class</span>=<span class="string">"com.mchange.v2.c3p0.ComboPooledDataSource"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--连接数据库的必备信息--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClass"</span> <span class="attr">value</span>=<span class="string">"com.mysql.cj.jdbc.Driver"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jdbcUrl"</span> <span class="attr">value</span>=<span class="string">"jdbc:mysql://localhost:3306/eesy"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"user"</span> <span class="attr">value</span>=<span class="string">"root"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"5945"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="8"><li>/src/test/java/com/noahcode/test/AccountServiceTest</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.noahcode.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.noahcode.domain.Account;</span><br><span class="line"><span class="keyword">import</span> com.noahcode.service.IAccountService;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sound.midi.Soundbank;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 使用Junit单元测试，测试我们的配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountServiceTest</span> </span>&#123;</span><br><span class="line">    <span class="comment">//1.获取容器</span></span><br><span class="line">    ApplicationContext ac = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"bean.xml"</span>);</span><br><span class="line">    <span class="comment">//2.得到业务层对像</span></span><br><span class="line">    IAccountService as = ac.getBean(<span class="string">"accountService"</span>, IAccountService.class);</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        List&lt;Account&gt; accounts = as.findAllAccount();</span><br><span class="line">        <span class="keyword">for</span> (Account account : accounts) &#123;</span><br><span class="line">            System.out.println(account);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindOne</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Account account=as.findAccountByID(<span class="number">1</span>);</span><br><span class="line">        System.out.println(account);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSave</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Account account=<span class="keyword">new</span> Account();</span><br><span class="line">        account.setName(<span class="string">"test"</span>);</span><br><span class="line">        account.setMoney(<span class="number">4</span>);</span><br><span class="line">        as.saveAccount(account);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUpdate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Account account=as.findAccountByID(<span class="number">2</span>);</span><br><span class="line">        account.setName(<span class="string">"Noah"</span>);</span><br><span class="line">        account.setMoney(<span class="number">10</span>);</span><br><span class="line">        as.updateAccount(account);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDelete</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        as.deleteAccount(<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="知识点-1"><a href="#知识点-1" class="headerlink" title="知识点"></a>知识点</h2><h3 id="Spring中的新注解"><a href="#Spring中的新注解" class="headerlink" title="Spring中的新注解"></a>Spring中的新注解</h3><ol><li><p>@Configuration</p><ul><li>作用：制定当前类是一个配置类</li><li>细节：<ul><li>当配置类作为AnnotationConfigApplicationContext对象创建的参数时，该注解可以不写</li></ul></li></ul></li><li><p>@ComponentScan</p><ul><li>作用：用于通过注解指定Spring在创建容器是要扫描的包</li><li>属性：<ul><li>value：他和basePackages的作用是一样的，都是用于指定创建容器是要扫描的包。</li><li>我们使用此注解等同于在xml中配置了：  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.noahcode"</span>&gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><p>@Bean</p><ul><li>作用：用于把当前方法的返回值作为bean对象存入Spring的IOC容器中</li><li>属性：<ul><li>name：用于指定bean的id，当不写时，默认值是当前方法的名称</li></ul></li><li>细节：<ul><li>当我们使用注解配制方法时，如果方法有参数，spring框架回去容器中查找有没有可用的bean对象</li><li>查找方式和@Autowired猪似的作用是一样的</li></ul></li></ul></li><li><p>@Import</p><ul><li>作用：用于导入其他的配置类</li><li>属性：<ul><li>value：用于指定其他配置类的字节码。<ul><li>当我们使用Import注解的泪就是父配置类，而导入的都是子配置类</li></ul></li></ul></li></ul></li><li><p>@PropertySource</p><ul><li>作用：用于指定Properties文件的位置</li><li>属性：<ul><li>value：指定文件的名称和路径<ul><li>关键字：classpath：表示类路径下</li></ul></li></ul></li></ul></li></ol><h3 id="补充：junit的一点基础知识"><a href="#补充：junit的一点基础知识" class="headerlink" title="补充：junit的一点基础知识"></a>补充：junit的一点基础知识</h3><ol><li><p>应用程序的入口</p><ul><li>main方法</li></ul></li><li><p>junit单元测试中，没有main方法也能执行</p><ul><li>junit集成了一个main方法</li><li>该方法就会判断当前测试类中哪些方法有@Test注解</li><li>junit就会让有@Test主机的方法执行</li></ul></li><li><p>junit不会管我们是否采用Spring框架</p><ul><li>在执行测试方法时，junit根本不知道我们是不是使用了Spring框架</li><li>所以也就不会为我们读取配置文件/配置类创建Spring核心容器</li></ul></li></ol><p>以上三点可知：<strong>当测试方法执行时，没有IOC容器，就算写了Autowired注解，也无法实现注入</strong></p><h3 id="Spirng整合Junit的配置"><a href="#Spirng整合Junit的配置" class="headerlink" title="Spirng整合Junit的配置"></a>Spirng整合Junit的配置</h3><ol><li>导入Spring整合Junit的jar包(坐标)</li><li>使用Junit提供的一个注解把原有的main方法替换了，替换成Spinrg提供的<ul><li>@Runwith</li></ul></li><li>告知Spring的运行器，Spinrg和IOC创建时基于XML还是注解的，并且说明位置<ul><li>@ContextConfiguration<ul><li>location:指定XML文件的位置，加上classpath关键字，表示在类路径下</li><li>classes：指定注解类所在地位置</li></ul></li></ul></li></ol><p><strong>注：当我们使用Spinrg 5.x版本的时候，要求Junit的jar包必须是4.12及以上</strong></p><h2 id="JDBC项目代码记录-完全注解版-Spring整合Junit版"><a href="#JDBC项目代码记录-完全注解版-Spring整合Junit版" class="headerlink" title="JDBC项目代码记录(完全注解版)+Spring整合Junit版"></a>JDBC项目代码记录(完全注解版)+Spring整合Junit版</h2><ol><li>/src/main/java/com/noahcode/config/SpringConfiguration</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.noahcode.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 该类是一个配置类，它的作用和bean.xml是一样的</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//@Configuration</span></span><br><span class="line"><span class="meta">@ComponentScan</span>(basePackages = <span class="string">"com.noahcode"</span>)</span><br><span class="line"><span class="meta">@Import</span>(JdbcConfig.class)</span><br><span class="line"><span class="meta">@PropertySource</span>(<span class="string">"classpath:jdbcConfig.properties"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringConfiguration</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>/src/main/java/com/noahcode/config/JdbcConfig</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.noahcode.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mchange.v2.c3p0.ComboPooledDataSource;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbutils.QueryRunner;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Scope;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> java.beans.PropertyVetoException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;jdbc.driver&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String driver;</span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;jdbc.url&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String url;</span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;jdbc.username&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;jdbc.password&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用于创建一个QueryRunner对象</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dataSource</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"runner"</span>)</span><br><span class="line">    <span class="meta">@Scope</span>(<span class="string">"prototype"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> QueryRunner <span class="title">createQueryRunner</span><span class="params">(DataSource dataSource)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> QueryRunner(dataSource);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建数据源对象</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"dataSource"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSource <span class="title">createDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ComboPooledDataSource ds = <span class="keyword">new</span> ComboPooledDataSource();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            ds.setDriverClass(driver);</span><br><span class="line">            ds.setJdbcUrl(url);</span><br><span class="line">            ds.setUser(username);</span><br><span class="line">            ds.setPassword(password);</span><br><span class="line">            <span class="keyword">return</span> ds;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (PropertyVetoException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>src/main/java/com/noahcode/service/IAccountService</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.noahcode.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.noahcode.domain.Account;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 账户的业务层接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IAccountService</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询所有</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;Account&gt; <span class="title">findAllAccount</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询一个</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">Account <span class="title">findAccountByID</span><span class="params">(Integer accountId)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> account</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">saveAccount</span><span class="params">(Account account)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> account</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">updateAccount</span><span class="params">(Account account)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> accountId</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">deleteAccount</span><span class="params">(Integer accountId)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>src/main/java/com/noahcode/service/impl/IAccountService</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.noahcode.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.noahcode.dao.IAccountDao;</span><br><span class="line"><span class="keyword">import</span> com.noahcode.domain.Account;</span><br><span class="line"><span class="keyword">import</span> com.noahcode.service.IAccountService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 账户的业务层实现类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span>(<span class="string">"accountService"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountServiceImpl</span> <span class="keyword">implements</span> <span class="title">IAccountService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> IAccountDao accountDao;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Account&gt; <span class="title">findAllAccount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> accountDao.findAllAccount();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Account <span class="title">findAccountByID</span><span class="params">(Integer accountId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> accountDao.findAccountByID(accountId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveAccount</span><span class="params">(Account account)</span> </span>&#123;</span><br><span class="line">        accountDao.saveAccount(account);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateAccount</span><span class="params">(Account account)</span> </span>&#123;</span><br><span class="line">        accountDao.updateAccount(account);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteAccount</span><span class="params">(Integer accountId)</span> </span>&#123;</span><br><span class="line">        accountDao.deleteAccount(accountId);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>src/main/java/com/noahcode/dao/IAccountDao</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.noahcode.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.noahcode.domain.Account;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 账户的持久层</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IAccountDao</span></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询所有</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;Account&gt; <span class="title">findAllAccount</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询一个</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">Account <span class="title">findAccountByID</span><span class="params">(Integer accountId)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> account</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">saveAccount</span><span class="params">(Account account)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> account</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">updateAccount</span><span class="params">(Account account)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> accountId</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">deleteAccount</span><span class="params">(Integer accountId)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="6"><li>src/main/java/com/noahcode/dao/impl/AccountDao</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.noahcode.dao.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.noahcode.dao.IAccountDao;</span><br><span class="line"><span class="keyword">import</span> com.noahcode.domain.Account;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbutils.QueryRunner;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbutils.handlers.BeanHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbutils.handlers.BeanListHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 账户的持久层实现类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Repository</span>(<span class="string">"accountDao"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountDao</span> <span class="keyword">implements</span> <span class="title">IAccountDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> QueryRunner runner;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Account&gt; <span class="title">findAllAccount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> runner.query(<span class="string">"select * from account"</span>,<span class="keyword">new</span> BeanListHandler&lt;Account&gt;(Account.class));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Account <span class="title">findAccountByID</span><span class="params">(Integer accountId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> runner.query(<span class="string">"select * from account where id = ?"</span>,<span class="keyword">new</span> BeanHandler&lt;Account&gt;(Account.class),accountId);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveAccount</span><span class="params">(Account account)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            runner.update(<span class="string">"insert into account(name,money)values(?,?)"</span>,account.getName(),account.getMoney());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateAccount</span><span class="params">(Account account)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            runner.update(<span class="string">"update account set name=?,money=? where id=?"</span>,account.getName(),account.getMoney(),account.getId());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteAccount</span><span class="params">(Integer accountId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            runner.update(<span class="string">"delete from account where id=?"</span>,accountId);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="7"><li>/src/main/java/resources/jdbcConfig.properties</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">jdbc.driver=com.mysql.cj.jdbc.Driver</span><br><span class="line">jdbc.url=jdbc:mysql://localhost:3306/eesy</span><br><span class="line">jdbc.username=root</span><br><span class="line">jdbc.password=5945</span><br></pre></td></tr></table></figure><ol start="8"><li>/src/test/java/com/noahcode/test/AccountServiceTest</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.noahcode.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.noahcode.config.SpringConfiguration;</span><br><span class="line"><span class="keyword">import</span> com.noahcode.domain.Account;</span><br><span class="line"><span class="keyword">import</span> com.noahcode.service.IAccountService;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.AnnotationConfigApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.ContextConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringJUnit4ClassRunner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sound.midi.Soundbank;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 使用Junit单元测试，测试我们的配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RunWith</span>(SpringJUnit4ClassRunner.class)</span><br><span class="line"><span class="meta">@ContextConfiguration</span>(classes = SpringConfiguration.class)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountServiceTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> IAccountService as;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        List&lt;Account&gt; accounts = as.findAllAccount();</span><br><span class="line">        <span class="keyword">for</span> (Account account : accounts) &#123;</span><br><span class="line">            System.out.println(account);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindOne</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Account account=as.findAccountByID(<span class="number">1</span>);</span><br><span class="line">        System.out.println(account);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSave</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Account account=<span class="keyword">new</span> Account();</span><br><span class="line">        account.setName(<span class="string">"test"</span>);</span><br><span class="line">        account.setMoney(<span class="number">4</span>);</span><br><span class="line">        as.saveAccount(account);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUpdate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Account account=as.findAccountByID(<span class="number">2</span>);</span><br><span class="line">        account.setName(<span class="string">"Noah"</span>);</span><br><span class="line">        account.setMoney(<span class="number">10</span>);</span><br><span class="line">        as.updateAccount(account);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDelete</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        as.deleteAccount(<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>现在主要是记笔记了，记录视频中的知识点，还有一些经典案例代码，方便以后回头学习</p>]]></content>
    
    <summary type="html">
    
      我的 Spring 学习之旅--第二章
    
    </summary>
    
      <category term="Java" scheme="https://noahcodemonkey.top/categories/Java/"/>
    
      <category term="Spring 全家桶" scheme="https://noahcodemonkey.top/categories/Java/Spring-%E5%85%A8%E5%AE%B6%E6%A1%B6/"/>
    
      <category term="Spring" scheme="https://noahcodemonkey.top/categories/Java/Spring-%E5%85%A8%E5%AE%B6%E6%A1%B6/Spring/"/>
    
      <category term="教程" scheme="https://noahcodemonkey.top/categories/Java/Spring-%E5%85%A8%E5%AE%B6%E6%A1%B6/Spring/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="https://noahcodemonkey.top/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Java" scheme="https://noahcodemonkey.top/tags/Java/"/>
    
      <category term="Spring 全家桶" scheme="https://noahcodemonkey.top/tags/Spring-%E5%85%A8%E5%AE%B6%E6%A1%B6/"/>
    
      <category term="入门" scheme="https://noahcodemonkey.top/tags/%E5%85%A5%E9%97%A8/"/>
    
      <category term="Spring" scheme="https://noahcodemonkey.top/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>我的Spring学习之旅一</title>
    <link href="https://noahcodemonkey.top/2019/06/03/%E6%88%91%E7%9A%84Spring%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%97%85%E4%B8%80/"/>
    <id>https://noahcodemonkey.top/2019/06/03/我的Spring学习之旅一/</id>
    <published>2019-06-03T12:14:20.000Z</published>
    <updated>2019-07-25T13:49:57.100Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><img src="https://noahcodemonkey.top/images/img/我的Spring学习之旅一/header.jpg" alt="" style="width:100%"><p class="description">之前学了三章的 Spring Boot 课程，然后换了三波教材，一开始自信的我直接磕文档，败下阵来后在b站找了一个极客时间的教程，学到多条数据源配置的时候看代码着实有点懵，就换了一套尚硅谷的 Spinrg Boot 教程，但是吧一进去老师就说，Spirng Boot 有一个缺点就是上手简单，精通很难因为他是由 Spring 集合而成的，所以想要学好 Spring Boot 就要先学好 Spinrg，接着我就来写此篇文章了。</p><a id="more"></a><h2 id="参考教程"><a href="#参考教程" class="headerlink" title="参考教程"></a>参考教程</h2><p>b站是个好地方，现在我要学啥的时候都是先在b站找找有没有相关的教学视频.</p><p><a href="https://www.bilibili.com/video/av47952931?from=search&seid=297785963133916895" target="_blank" rel="noopener">Spring教程IDEA版-4天-2018黑马</a></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><h3 id="简单介绍"><a href="#简单介绍" class="headerlink" title="简单介绍"></a>简单介绍</h3><ul><li>Spring 是一个一站式轻量级开源框架</li><li>IOC(反转控制)和AOP(面向切面编程)为内核</li><li>提供了展现层 Spring MVC 和持久层 Spring JDBC 以及业务层事物管理等众多的企业级应用技术，还可以整合开元世界众多著名的第三方框架和类库</li></ul><h3 id="具体描述"><a href="#具体描述" class="headerlink" title="具体描述"></a>具体描述</h3><ul><li>轻量级：Spring 使非侵入性的-基于 Spring 开发地应用中的对象可以不依赖于 Spring 的 API</li><li>依赖注入：(DI—dependency injection、IOC)</li><li>面向切面编程(AOP–aspect oriented programming)</li><li>容器：Spring 是一个容器，因为他包含并且管理应用对象的生命周期</li><li>一站式：在 IOC 和 AOP 的基础上可以整合各种企业应用的开源框架和优秀的第三方类库(实际上 Spring 自身也提供了展现层的 SpringMVC 和 持久层的 Spring JDBC)</li></ul><h3 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h3><ol><li><p>方便解耦 简化开发</p></li><li><p>AOP 编程的支持</p></li><li><p>声明式事物的支持</p></li><li><p>方便程序的测试</p></li><li><p>方便集成各种优秀的框架</p></li><li><p>降低 JavaEE API 的使用难度</p></li><li><p>Java 源码是经典学习案例</p></li></ol><h3 id="Spring-的体系结构"><a href="#Spring-的体系结构" class="headerlink" title="Spring 的体系结构"></a>Spring 的体系结构</h3><p><img src="https://noahcodemonkey.top/images/img/%E6%88%91%E7%9A%84Spring%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%97%85%E4%B8%80/img01_01.png" alt="诶呀，图片加载出了点问题!"></p><h2 id="方便解耦-简化开发"><a href="#方便解耦-简化开发" class="headerlink" title="方便解耦 简化开发"></a>方便解耦 简化开发</h2><h3 id="代码1"><a href="#代码1" class="headerlink" title="代码1"></a>代码1</h3><p><strong>pom.xml</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.noahcode<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>day01_spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.13<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>Demo1.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.noahcode.spring.jdbc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.naming.Name;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 程序的解耦</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//1.注册驱动</span></span><br><span class="line">        DriverManager.registerDriver(<span class="keyword">new</span> com.mysql.jdbc.Driver());</span><br><span class="line">        <span class="comment">//2.获取连接</span></span><br><span class="line">        Connection conn=DriverManager.getConnection(<span class="string">"jdbc:mysql://localhost:3306/eesy"</span>,<span class="string">"root"</span>,<span class="string">"5945"</span>);</span><br><span class="line">        <span class="comment">//3.获取操作数据库的预处理对象</span></span><br><span class="line">        PreparedStatement pst=conn.prepareStatement(<span class="string">"select * from account"</span>);</span><br><span class="line">        <span class="comment">//4.执行SQL，得到结果集</span></span><br><span class="line">        ResultSet rs=pst.executeQuery();</span><br><span class="line">        <span class="comment">//5.遍历结果集</span></span><br><span class="line">        <span class="keyword">while</span> (rs.next())&#123;</span><br><span class="line">            System.out.println(rs.getString(<span class="string">"name"</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//6.释放资源</span></span><br><span class="line">        rs.close();</span><br><span class="line">        pst.close();</span><br><span class="line">        conn.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h4><p>1．耦合：程序见的依赖关系</p><ul><li>包括：<ul><li>类之间的依赖</li><li>方法间的依赖</li></ul></li></ul><p>２．解耦：</p><ul><li>降低程序间的依赖关系</li></ul><p>３．实际开发中：</p><ul><li>应该做到：编译期不依赖，运行时才依赖</li></ul><p>4.解耦的思路：</p><ul><li>第一步：使用反射来创建对象，而避免使用 new 关键字</li><li>第二步：通过读取配置文件来获取要创建的对象全限定类名</li></ul><p><strong>从老师中的总结，我才知道为什么会有配置文件这个东西，此处感悟很深。</strong></p><h3 id="代码2"><a href="#代码2" class="headerlink" title="代码2"></a>代码2</h3><p>因为此处的代码多为展示程序的依赖性，所以代码比较分散，就不粘贴代码了。</p><h4 id="知识点-1"><a href="#知识点-1" class="headerlink" title="知识点"></a>知识点</h4><p>1．Bean：在计算机英语中，有可重用组件的含义</p><p>2．JavaBean：用Java语言编写的可重用组件</p><ul><li>javabean = 实体类 它不等于 javabean &gt; 实体类</li></ul><p>3．如何创建我们的service和dao对象的</p><p>第一个：需要一个配置文件来配置我们的service和dao</p><ul><li>配置文件的内容：唯一标识=全限定类名(key=value)</li></ul><p>第二个：通过读取配置文件中的配置内容，反射创建对象</p><ul><li>我的配置文件可以是 xml 也可以是 properties</li></ul><h2 id="知识点-2"><a href="#知识点-2" class="headerlink" title="知识点"></a>知识点</h2><ol><li><p>ApplicationContext的三个常用实现类</p><ul><li>ClassPathXmlApplicatonContext：他可以加载类路径下的配置文件，要求配置文件必须在类路径下，不在的话加载不了</li><li>FileSystemXmlApplicationContext:他可以加载磁盘任意路径下的配置文件(必须有访问权限)</li><li>AnnotationConfigApplicationContext:他用于读取注解创建容器的</li></ul></li><li><p>核心容器的两个接口引发出的问题：</p><ul><li><p>ApplicationContext: <strong>单例对象适用(实际开发中较多使用此接口)</strong></p></li><li><p>他在构建核心容器时，创建对象采取的策略是采用立即加载的方式，也就是说，只要一读取完配置文件马上就创建配置文件中配置的对象</p><ul><li><p>代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ApplicationContext ac = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"bean.xml"</span>);</span><br><span class="line">IAccountService as = (IAccountService) ac.getBean(<span class="string">"accountService"</span>);</span><br><span class="line">IAccountDao adao = (IAccountDao) ac.getBean(<span class="string">"accountDao"</span>, IAccountDao.class);</span><br></pre></td></tr></table></figure></li><li><p>BeanFactory: <strong>多例对象适用</strong></p></li><li><p>他在构建核心容器时，创建对象采取的策略是采用延迟加载的方式，也就是说，什么时候根据id获取对象了，什么时候才真正的创建对象</p></li><li><p>代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Resource resource = <span class="keyword">new</span> ClassPathResource(<span class="string">"bean.xml"</span>);</span><br><span class="line">BeanFactory factory = <span class="keyword">new</span> XmlBeanFactory(resource);</span><br><span class="line">IAccountService as = (IAccountService) factory.getBean(<span class="string">"accountService"</span>);</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><p>Spring对bean的管理细节</p><ol><li>创建bean的三种方式</li></ol><ul><li><p>第一种：使用默认构造函数创建</p><ul><li><p>在Spring的配置文件中使用bean标签，配以id和class属性之后，且没有其他属性和标签时，采用的就是默认构造函数创建bean对象，此时如果类中没有默认构造函数，则对象无法创建</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"accountService"</span> <span class="attr">class</span>=<span class="string">"com.noahcode.service.impl.AccountServiceImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>第二种：使用普通工厂中的方法创建对象(使用某个类中的方法创建对象，并存入Spirng容器中)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"instanceFactory"</span> <span class="attr">class</span>=<span class="string">"com.noahcode.factory.InstanceFactory"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"accountService"</span> <span class="attr">factory-bean</span>=<span class="string">"instanceFactory"</span> <span class="attr">factory-method</span>=<span class="string">"getAccountService"</span>&gt;</span><span class="tag">&lt;/ <span class="attr">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>第三种：使用工厂中的静态方法创建对象(使用某个类中的静态方法创建对象，并存入Spring容器中)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"accountService"</span> <span class="attr">class</span>=<span class="string">"com.noahcode.factory.staticFactory"</span> <span class="attr">factory-method</span>=<span class="string">"getAccountService"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><ol><li>bean对象的作用范围调整<ul><li>bean标签的scope属性：<ul><li>作用：用于指定bean的作用范围</li><li>取值：<strong>(常用的就是单例的和多例的)</strong><ul><li>singleton:单例的(默认值)<ul><li>意义：在整个系统上下文环境中，仅有一个Bean实例。也就是说，在整个系统上下文环境中，你通过Spring IOC获取的都是同一个实例。</li></ul></li><li>prototy:多例的<ul><li>意义：意味着程序每次从IOC容器获取的Bean都是一个新的实例</li></ul></li><li>request:作用于web应该用的请求范围</li><li>session:作用于web应该用的会话范围</li><li>global-session:用用语集群环境的会话范围(全局会话范围),当不是集群环境时，他就是session</li></ul></li></ul></li></ul></li><li>bean对象的生命周期<ul><li>单例对象<ul><li>出生：当容器创建时对象出生</li><li>活着：只要容器存在，对象一直活着</li><li>死亡：容器销毁，对象死亡</li></ul></li><li>多例对象<ul><li>出生：当我们使用对象时Spring框架为我们创建</li><li>活着：对象只要实在使用过程中一直活着</li><li>死亡：当对象长时间不用且没有别的对象引用时，由Java的垃圾回收机制回收</li></ul></li></ul></li></ol></li><li><p>Spring的依赖注入</p><ul><li>IOC的作用<ul><li>降低程序间的耦合(依赖关系)</li></ul></li><li>依赖关系的管理<ul><li>以后都交给spring来维护</li><li>在当前类需要用到其他类的对象，由spring为我们提供，我们只需要在配置文件中说明</li></ul></li><li>依赖关系的维护<ul><li>就称之为依赖注入</li></ul></li><li>依赖注入<ul><li>能注入的数据：有三种<ol><li>基本数据类型和String</li><li>其他bean类型(在配置文件中或者注解配置过的bean)</li><li>复杂类型/集合类型</li></ol></li><li>注入的方式：有三种<ol><li>使用构造函数提供</li><li>使用set方式提供</li><li>使用注解提供</li></ol></li></ul></li></ul></li></ol><p><strong>注意：若是经常变化的数据，并不适合用于注入的方式</strong></p><ol><li><p>构造函数注入</p><ul><li><p>使用的标签：constructor-arg</p></li><li><p>标签的出现位置：bean标签的内部</p></li><li><p>标签中的属性：</p><ul><li>type：用于指定要注入的数据的数据类型，该数据类型也是构造函数中某个或某些参数的类型</li><li>index：用于指定要注入的数据给构造函数中指定索引位置的参数赋值。索引的位置是从0开始</li><li>name：用于指定给构造函数中指定名称的参数赋值 <strong>(常用的)</strong></li><li>value：用于提供基本类型和String类型的数据</li><li>ref：用于指定其他的bean类型数据。他指的就是在spring的IOC核心容器中出现过的bean对象</li></ul></li><li><p>优势</p><ul><li>在获取bean对象时，诸如数据是必须的操作，否则对象无法创建。</li></ul></li><li><p>弊端</p><ul><li>改变了bean对象的实例化方式，使我们在创建对象时，如果用不到这些数据，也必须提供。</li></ul></li><li><p>代码 </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"accountService"</span> <span class="attr">class</span>=<span class="string">"com.noahcode.service.impl.AccountServiceImpl"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"test"</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">value</span>=<span class="string">"18"</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"birthday"</span> <span class="attr">ref</span>=<span class="string">"now"</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"now"</span> <span class="attr">class</span>=<span class="string">"java.util.Date"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>set方法注入 <strong>(更常用的方式)</strong></p><ul><li><p>使用标签：property</p></li><li><p>出现的位置：bean标签的内部</p></li><li><p>标签中的属性：</p><ul><li>name:用于指定注入时所调用的set方法名称</li><li>value:用于提供基本类型和String类型的数据</li><li>ref:用于指定其他的bean类型数据。他指的就是在spring的IOC核心容器中出现过的bean对象</li></ul></li><li><p>优势：</p><ul><li>创建对象时没有明确的的限制，可以直接使用默认构造函数</li></ul></li><li><p>弊端：</p><ul><li>如果有某个成员必须有值，则获取对象时有可能set方法没有执行</li></ul></li><li><p>代码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"accountService"</span> <span class="attr">class</span>=<span class="string">"com.noahcode.service.impl.AccountServiceImpl"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"test"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">value</span>=<span class="string">"18"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"birthday"</span> <span class="attr">ref</span>=<span class="string">"now"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"now"</span> <span class="attr">class</span>=<span class="string">"java.util.Date"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ol><hr><p><strong>复杂类型的注入/集合类型的注入</strong></p><p>我们分别测试了array，list，set，map和properties这五种复杂类型。</p><ol><li>用于给List结构集合注入的标签：<ul><li>list</li><li>array</li><li>set</li></ul></li><li>用于给Map结构集合注入的标签：<ul><li>map</li><li>props<br>总结：结构相同，标签可以互换<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"accountService"</span> <span class="attr">class</span>=<span class="string">"com.noahcode.service.impl.AccountServiceImpl"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"myString"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>aaa<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>bbb<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>ccc<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"myList"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>aaa<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>bbb<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>ccc<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"mySet"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>aaa<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>bbb<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>ccc<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"myMap"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">map</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"key1"</span> <span class="attr">value</span>=<span class="string">"value1"</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"key2"</span> <span class="attr">value</span>=<span class="string">"value2"</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"myProperties"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"test"</span>&gt;</span>test<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ol><hr><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li>首先视频中的两张图真的是点睛之笔，原本听得有些似懂非懂的，看了图之后脑子思路清晰了很多</li></ol><p><img src="https://noahcodemonkey.top/images/img/%E6%88%91%E7%9A%84Spring%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%97%85%E4%B8%80/img02.png" alt="诶呀，图片加载出了点问题!"></p><p><img src="https://noahcodemonkey.top/images/img/%E6%88%91%E7%9A%84Spring%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%97%85%E4%B8%80/img03.png" alt="诶呀，图片加载出了点问题!"></p><ol start="2"><li>知道了bean对象的创建，虽然不是很熟练，但已经理解它创建的整体步骤。</li></ol><p>这两张图完美的诠释了解耦的原理，为什么叫反转控制，也让我知道了工厂的重要性，老师讲的真的挺好的，赞一个！</p>]]></content>
    
    <summary type="html">
    
      我的 Spring 学习之旅--第一章
    
    </summary>
    
      <category term="Java" scheme="https://noahcodemonkey.top/categories/Java/"/>
    
      <category term="Spring 全家桶" scheme="https://noahcodemonkey.top/categories/Java/Spring-%E5%85%A8%E5%AE%B6%E6%A1%B6/"/>
    
      <category term="Spring" scheme="https://noahcodemonkey.top/categories/Java/Spring-%E5%85%A8%E5%AE%B6%E6%A1%B6/Spring/"/>
    
      <category term="教程" scheme="https://noahcodemonkey.top/categories/Java/Spring-%E5%85%A8%E5%AE%B6%E6%A1%B6/Spring/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="https://noahcodemonkey.top/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Java" scheme="https://noahcodemonkey.top/tags/Java/"/>
    
      <category term="Spring 全家桶" scheme="https://noahcodemonkey.top/tags/Spring-%E5%85%A8%E5%AE%B6%E6%A1%B6/"/>
    
      <category term="入门" scheme="https://noahcodemonkey.top/tags/%E5%85%A5%E9%97%A8/"/>
    
      <category term="Spring" scheme="https://noahcodemonkey.top/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>我的SpringBoot学习之旅(二)</title>
    <link href="https://noahcodemonkey.top/2019/06/01/%E6%88%91%E7%9A%84SpringBoot%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%97%85%E4%BA%8C/"/>
    <id>https://noahcodemonkey.top/2019/06/01/我的SpringBoot学习之旅二/</id>
    <published>2019-06-01T08:23:27.000Z</published>
    <updated>2019-06-02T09:38:21.112Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><img src="https://noahcodemonkey.top/images/img/我的SpringBoot学习之旅二/header.jpg" alt="" style="width:100%"><p class="description">这是我 Spring Boot学习的第二章，由于文档已经看不懂了，所以选择了从网上找视频来看，然后在b站上看到了极客时间的 Spring Boot 全家桶视频，所以这篇文章是以此视频为参考。</p><a id="more"></a><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://www.bilibili.com/video/av53680082/?p=5" target="_blank" rel="noopener">极客时间SpringBoot全家桶视频</a></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>极客时间的视频看的话其实也有点难度，他需要你有一定基础，有些东西我也看不懂，但是可以一点点去摸索，靠猜测它的意思吧，继续靠着这种方法学习，如果实在遇到不能搞懂的，就还是老老实实的回头学基础去了。</p><p>这篇文章学习的是它的第5节课内容–将项目与数据库进行连接获取相关信息。</p><h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><p>视频中使用的是我上一篇文章中总结出的三种方法中的官网创建的方法，我是用的编辑器创建，其实都一样只要依赖选项没搞错就行。</p><h2 id="读取连接数据库相关信息"><a href="#读取连接数据库相关信息" class="headerlink" title="读取连接数据库相关信息"></a>读取连接数据库相关信息</h2><h3 id="代码编辑"><a href="#代码编辑" class="headerlink" title="代码编辑"></a>代码编辑</h3><p>在我们的/src/main/java/xxx/xxx.java中编辑我们的代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.noahcode.test.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.CommandLineRunner;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoApplication</span> <span class="keyword">implements</span> <span class="title">CommandLineRunner</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> DataSource dataSource;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(DemoApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">(String... args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        showConnection();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">showConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line">        log.info(dataSource.toString());</span><br><span class="line">        Connection conn=dataSource.getConnection();</span><br><span class="line">        log.info(conn.toString());</span><br><span class="line">        conn.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h3><h4 id="注解"><a href="#注解" class="headerlink" title="注解"></a>注解</h4><p>这一次我们又看到了几个新的注解，我们在一个个去了解一下。</p><ol><li><p>@Slf4j</p><ul><li><p>实现日志输出</p></li><li><p>在类上添加@Slf4j注解，在方法中直接使用log</p></li></ul></li><li><p>@Autowired</p><ul><li><p>@Autowired表示被修饰的类需要注入对象,spring会扫描所有被@Autowired标注的类,然后根据 <strong>类型</strong> 在ioc容器中找到匹配的类注入。</p></li><li><p>Spring 会自动帮我们把 Bean 里面的对象的 setter/getter 给省略，它会自动帮我们完成 set/get 的操作，之后你需要用到的话可以直接使用。</p></li></ul></li><li><p>@Override</p><ul><li>这个注解就很熟悉–重构方法，就不做多讲了</li></ul></li></ol><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><ol><li>首先两个注解，@SpringBootApplication 不用过多解释标准注解，@Slf4j 用于实现日志输出，我们在方法中直接使用 log 方法。</li><li>将我们的主类引入一个借口–CommandLineRunner，我们按住 ctrl 键选择 CommandLineRunner 会发现这个接口中只有一个 run 方法，之后我们就需要重构它。</li><li>向我们的 Spring 中注入一个 dataSource 这个 DataSource 类型对象，然后我们的 @Autowired 注解就会帮我们完成自动装配的工作，来消除get/set的方法。</li><li>主方法就是运行我们的主类嘛</li><li>重写了我们接口–CommandLineRunner 的 run 方法，让它运行时调用我们写的 showConnection 的方法。</li><li>写了一个 showConnnection 的异常处理方法，里面使用了 log.info 来输出日志信息，先是输出了我们连接数据库的信息，然后连接输出连接数据库池的信息，最后关闭连接。</li></ol><p><img src="https://noahcodemonkey.top/images/img/%E6%88%91%E7%9A%84SpringBoot%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%97%85%E4%BA%8C/1.png" alt="诶呀，图片加载出了点问题!"></p><h4 id="Spring-Boot-做的配置"><a href="#Spring-Boot-做的配置" class="headerlink" title="Spring Boot 做的配置"></a>Spring Boot 做的配置</h4><ol><li><p>DataSourceAutoConfiguration</p><ul><li>配置 DataSource</li></ul></li><li><p>DataSourceTransactionManagerAutoConfiguration</p><ul><li>配置 DataSourceTransactionManager</li></ul></li><li><p>JdbcTemplateAutoConfiguration</p><ul><li>配置 JdbcTemplate</li></ul></li></ol><p>当老师讲到这些完全是蒙的，没想到 Spring Boot 为我们做了这么多。</p><h4 id="数据源相关配置属性"><a href="#数据源相关配置属性" class="headerlink" title="数据源相关配置属性"></a>数据源相关配置属性</h4><h5 id="通用"><a href="#通用" class="headerlink" title="通用"></a>通用</h5><ul><li>spring.datasource.url=jdbc:mysql://localhost/test</li><li>spring.datasource.username=dbuser</li><li>spring.datasource.password=dbpass</li><li>spring.datasource.drive-class-name=com.mysql.jdbc.Driver(可选)</li></ul><h5 id="初始化内嵌数据库"><a href="#初始化内嵌数据库" class="headerlink" title="初始化内嵌数据库"></a>初始化内嵌数据库</h5><ul><li>spring.datasource.initialization-mode=embedded|always|never</li><li>spring.datasource.schema与spring.datasource.data确定初始化SQL文件</li><li>spring.datasource.platform=hsqldb|h2|oracle|mysql|postgresql(与前者对应)</li></ul><h3 id="读取数据库内的数据"><a href="#读取数据库内的数据" class="headerlink" title="读取数据库内的数据"></a>读取数据库内的数据</h3><h4 id="编写代码"><a href="#编写代码" class="headerlink" title="编写代码"></a>编写代码</h4><p>首先在我们的/src/main/resources目录下，创建两个 sql 文件–schema.sql和data.sql</p><p><strong>schema.sql</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> FOO(<span class="keyword">ID</span> <span class="built_in">INT</span> <span class="keyword">IDENTITY</span> ,BAR <span class="built_in">VARCHAR</span>(<span class="number">64</span>));</span><br></pre></td></tr></table></figure><p><strong>data.sql</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> FOO(<span class="keyword">ID</span>,BAR) <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">'aaa'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> FOO(<span class="keyword">ID</span>,BAR) <span class="keyword">VALUES</span>(<span class="number">2</span>,<span class="string">'bbb'</span>);</span><br></pre></td></tr></table></figure><p>再在我们的/src/main/java/xxx/xxx.java中编辑我们的代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.noahcode.test.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.micrometer.core.instrument.MultiGauge;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.CommandLineRunner;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.JdbcTemplate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoApplication</span> <span class="keyword">implements</span> <span class="title">CommandLineRunner</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> DataSource dataSource;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(DemoApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">(String... args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        showConnection();</span><br><span class="line">        showData();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">showConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line">        log.info(dataSource.toString());</span><br><span class="line">        Connection conn=dataSource.getConnection();</span><br><span class="line">        log.info(conn.toString());</span><br><span class="line">        conn.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">showData</span><span class="params">()</span></span>&#123;</span><br><span class="line">        jdbcTemplate.queryForList(<span class="string">"select * from foo"</span>).forEach(row -&gt; log.info(row.toString()));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="代码分析-1"><a href="#代码分析-1" class="headerlink" title="代码分析"></a>代码分析</h3><h4 id="注解-1"><a href="#注解-1" class="headerlink" title="注解"></a>注解</h4><p>注解并没有出现新的，所以还是一样的</p><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><ol><li>又向我们的 Spring 中注入一个 jdbcTemplate 这个 JdbcTemplate 类型对象</li><li>在我们重构的 run 方法里又让他调用了一个 showData 的方法。</li><li>创建了一个 ShowData 的方法在里面使用了一段查询SQL语句，然后使用foreach 遍历所有数据内容将每一行数据使用日志输出。</li></ol><p><img src="https://noahcodemonkey.top/images/img/%E6%88%91%E7%9A%84SpringBoot%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%97%85%E4%BA%8C/2.png" alt="诶呀，图片加载出了点问题!"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>学到现在总体感觉还行，现在的一些操作还是很容易就理解的，结合百度再扩展一点还是能接受的下来的，继续努力了。</p>]]></content>
    
    <summary type="html">
    
      我的 Spring Boot 学习之旅(二)--Spring Boot 与单数据源配置
    
    </summary>
    
      <category term="Java" scheme="https://noahcodemonkey.top/categories/Java/"/>
    
      <category term="Spring 全家桶" scheme="https://noahcodemonkey.top/categories/Java/Spring-%E5%85%A8%E5%AE%B6%E6%A1%B6/"/>
    
      <category term="Spring Boot" scheme="https://noahcodemonkey.top/categories/Java/Spring-%E5%85%A8%E5%AE%B6%E6%A1%B6/Spring-Boot/"/>
    
      <category term="教程" scheme="https://noahcodemonkey.top/categories/Java/Spring-%E5%85%A8%E5%AE%B6%E6%A1%B6/Spring-Boot/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="https://noahcodemonkey.top/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Java" scheme="https://noahcodemonkey.top/tags/Java/"/>
    
      <category term="Spring 全家桶" scheme="https://noahcodemonkey.top/tags/Spring-%E5%85%A8%E5%AE%B6%E6%A1%B6/"/>
    
      <category term="Spring Boot" scheme="https://noahcodemonkey.top/tags/Spring-Boot/"/>
    
      <category term="入门" scheme="https://noahcodemonkey.top/tags/%E5%85%A5%E9%97%A8/"/>
    
  </entry>
  
  <entry>
    <title>我的 Spring Boot 学习之旅(一)</title>
    <link href="https://noahcodemonkey.top/2019/05/30/%E6%88%91%E7%9A%84SpringBoot%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%97%85%E4%B8%80/"/>
    <id>https://noahcodemonkey.top/2019/05/30/我的SpringBoot学习之旅一/</id>
    <published>2019-05-30T11:48:35.000Z</published>
    <updated>2019-06-02T09:34:30.274Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><img src="https://noahcodemonkey.top/images/img/我的SpringBoot学习之旅一/header.jpg" alt="" style="width:100%"><p class="description">这次终于确定了我学习的方向了，不再变了就是它了，之前一直犹豫到底该干什么，往哪个方向学习，心中一直想做的是游戏开发，但是从其他途径询问了两位在职程序员，他们都不推荐我做游戏开发，一位老师推荐我做前端就业市场大，还有以为推荐我做Java后端，最终我选择了做Java这条路。</p><a id="more"></a><h2 id="参考文档："><a href="#参考文档：" class="headerlink" title="参考文档："></a>参考文档：</h2><p><a href="https://www.breakyizhan.com/springboot/3028.html" target="_blank" rel="noopener">Break易站</a></p><p><a href="http://www.importnew.com/" target="_blank" rel="noopener">ImportNew</a></p><h2 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h2><ol><li>Java</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">λ java -version</span><br><span class="line">java version &quot;11.0.3&quot; 2019-04-16 LTS</span><br><span class="line">Java(TM) SE Runtime Environment 18.9 (build 11.0.3+12-LTS)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM 18.9 (build 11.0.3+12-LTS, mixed mode)</span><br></pre></td></tr></table></figure><ol start="2"><li>Maven</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">λ mvn -v</span><br><span class="line">Apache Maven 3.6.1 (d66c9c0b3152b2e69ee9bac180bb8fcc8e6af555; 2019-04-05T03:00:29+08:00)</span><br><span class="line">Maven home: F:\JavaSpace\WorkSpaces\Maven\apache-maven-3.6.1</span><br><span class="line">Java version: 11.0.3, vendor: Oracle Corporation, runtime: F:\JavaSpace\JDK\jdk11</span><br><span class="line">Default locale: zh_CN, platform encoding: GBK</span><br><span class="line">OS name: &quot;windows 10&quot;, version: &quot;10.0&quot;, arch: &quot;amd64&quot;, family: &quot;windows&quot;</span><br></pre></td></tr></table></figure><p><strong>注：需要确保系统已安装了Java和Maven的有效版本</strong></p><h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><p>其中我总结了三种创建项目的方法，分别位自己创建，Spring Boot官网创建还有编辑器创建三种，下面分别介绍这三种方法如何去创建。</p><h3 id="自己创建"><a href="#自己创建" class="headerlink" title="自己创建"></a>自己创建</h3><p>网站中使用的就是自己创建，虽然麻烦一点但是可以让小白的我们明白一个 Spring Boot 项目的文件结构。</p><h3 id="Spring-Boot-官网创建"><a href="#Spring-Boot-官网创建" class="headerlink" title="Spring Boot 官网创建"></a>Spring Boot 官网创建</h3><p>创建 Spring Boot 项目网址：<a href="https://start.spring.io/" target="_blank" rel="noopener">start.spring.io</a></p><p><strong>注：其中的 dependencies 依赖选项 记得要 add 添加 Web 即可。</strong></p><p>创建完成后他就会下载一个压缩包，解压缩完后就是一个完整的 Spring Boot 项目了。</p><p><img src="https://noahcodemonkey.top/images/img/%E6%88%91%E7%9A%84SpringBoot%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%97%85%E4%B8%80/img01.png" alt="诶呀,图片加载出了点问题!"></p><h3 id="编辑器创建"><a href="#编辑器创建" class="headerlink" title="编辑器创建"></a>编辑器创建</h3><p>我使用的是 IDEA ，使用 eclipse 的朋友可以参考<a href="https://www.breakyizhan.com/springboot/3062.html" target="_blank" rel="noopener">Spring boot入门：在Eclipse中搭建Spring boot 项目</a></p><p><img src="https://noahcodemonkey.top/images/img/%E6%88%91%E7%9A%84SpringBoot%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%97%85%E4%B8%80/img02.png" alt="诶呀,图片加载出了点问题!"></p><p>然后就选择 Next 下一步，这个界面其实很熟悉就是我们上一种在 Spring Boot 官网创建项目是一样的，然后填写并选择所需要的选项然后继续选择 Next 选项</p><p><img src="https://noahcodemonkey.top/images/img/%E6%88%91%E7%9A%84SpringBoot%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%97%85%E4%B8%80/img03.png" alt="诶呀,图片加载出了点问题!"></p><p>下面就是添加我们的依赖了，选择 Web 中的 Web 即可。</p><p><img src="https://noahcodemonkey.top/images/img/%E6%88%91%E7%9A%84SpringBoot%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%97%85%E4%B8%80/img04.png" alt="诶呀,图片加载出了点问题!"></p><p>接下来就是我们项目的路径了，选择完后 Finish 选项后就创建好我们的 Spring Boot 项目了。</p><p><img src="https://noahcodemonkey.top/images/img/%E6%88%91%E7%9A%84SpringBoot%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%97%85%E4%B8%80/img05.png" alt="诶呀,图片加载出了点问题!"></p><h3 id="编写代码"><a href="#编写代码" class="headerlink" title="编写代码"></a>编写代码</h3><p>代码的编辑在 src/main/java/com.noahcode.demo/DemoApplication 文件编辑(此处以我的路径举例)</p><p><img src="https://noahcodemonkey.top/images/img/%E6%88%91%E7%9A%84SpringBoot%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%97%85%E4%B8%80/img06.png" alt="诶呀,图片加载出了点问题"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.noahcode.demo;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line">        <span class="keyword">import</span> org.springframework.boot.autoconfigure.EnableAutoConfiguration;</span><br><span class="line">        <span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line">        <span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@EnableAutoConfiguration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/"</span>)</span><br><span class="line">    <span class="function">String <span class="title">home</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span>  <span class="string">"Hello World!"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        SpringApplication.run(DemoApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h3><h4 id="注解"><a href="#注解" class="headerlink" title="注解"></a>注解</h4><p>对注解一点都不懂的我说实话一开始见到这个有点蒙，总感觉它像注释，对程序运行啥的应该不影响，之后去翻阅资料，才知道它的重要性，以下内容基本摘抄于原博客，并不是很理解的透彻，云里雾里的，以后多多使用来感受它的作用。</p><ol><li><p>@SpringBootApplication</p><p>在文档中我们并没有看到这个注解，但是我们在IDEA中创建的项目中，使用了此注解，然后我们来了解一下。</p><ul><li>他是个组合注解，包含一下三个配置@SpringBootConfiguration、@EnableAutoConfigration和@ComponentScan三个注解，接下来我们回依次分析</li></ul><ol><li><p>@SpringBootConfiguration</p><p>它继承自 @Configuration,标注当前类是配置类，会把当前类内声明的一个或多个以@Bean注解标记的方法的实例纳入到 Spring 的容器中，并且实例名就是方法名。</p><p>源码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Target</span>(&#123;ElementType.TYPE&#125;)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> SpringBootConfiguration &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>@ComponentScan</p><p>这个注解在 Spring 的注解中起到很重要的作用，他可以自定义 Spring扫描的包，默认回扫描标有@Controller、@Service、@Component以及@Repository注解的类，并且实例化到 SpringIOC 的容器中，其中它的源码中有个配置属性：basePackages，用来指定扫描的包，如果不知道，他会扫描配置了该注解的类的包所在的路径</p><p>源码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@AliasFor</span>(</span><br><span class="line"> annotation = ComponentScan.class,</span><br><span class="line"> attribute = <span class="string">"basePackages"</span></span><br><span class="line"> )</span><br><span class="line"> String[] scanBasePackages() <span class="keyword">default</span> &#123;&#125;;</span><br></pre></td></tr></table></figure><p> 在Spring Boot 中我们也可以将 scanBasePackages 属行指定包扫描的路径(若不指定默认扫描主程序类所在的包路径以及子包下的类)</p><p> e.g.</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span>(scanBasePackages = <span class="string">"com.seagetech.springbootdemo"</span>)</span><br></pre></td></tr></table></figure></li><li><p>@EnableAutoConfiguration</p><p>这个注解是 Spring Boot 完成自动配置的关键，此注解完成的是将所有符合自动配置条件的 bean 的定义加载到 Spring 的容器中。</p><p>源码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Target</span>(&#123;ElementType.TYPE&#125;)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Inherited</span></span><br><span class="line"><span class="meta">@AutoConfigurationPackage</span></span><br><span class="line"><span class="meta">@Import</span>(&#123;AutoConfigurationImportSelector.class&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> EnableAutoConfiguration &#123;</span><br><span class="line">    String ENABLED_OVERRIDE_PROPERTY = <span class="string">"spring.boot.enableautoconfiguration"</span>;</span><br><span class="line"></span><br><span class="line">    Class&lt;?&gt;[] exclude() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    String[] excludeName() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到它的源码又引用了很多注解，下面我们依次来分析它们。</p></li><li><p>@AutoConfigurationPackage</p><p>这个注解的功能就是自动配置包，获取主程序类所在的包路径，并将包路径下的所有组件注册到 SpringIOC 容器中。</p></li><li><p>@Import({AutoConfigurationImportSelector.class})</p><p>@Import 是 @EnableAutoConfiguration 的重要功能用于导入配置,使用的是 SpringFactoriesLoadFactoryNames 方法来扫描具有 META-INF/spirng.factories 文件的 jar 包。</p></li></ol></li></ol><h4 id="home-方法"><a href="#home-方法" class="headerlink" title="home 方法"></a>home 方法</h4><p>添加了 @RequestMapping 注释告诉 Spring ，任何带有 / 路径的 HTTP 请求都应该映射到 home 方法，最后告诉 Spring 将结果字符串直接呈现给调用者。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>没有一点基础说实话有点难理解，到现在都半知半解的，像注解啊什么的感觉还需要多练习之后才能懂得它的作用。</p>]]></content>
    
    <summary type="html">
    
      我的 Spring Boot 学习之旅(一)--开发第一个 Spring Boot 应用程序
    
    </summary>
    
      <category term="Java" scheme="https://noahcodemonkey.top/categories/Java/"/>
    
      <category term="Spring 全家桶" scheme="https://noahcodemonkey.top/categories/Java/Spring-%E5%85%A8%E5%AE%B6%E6%A1%B6/"/>
    
      <category term="Spring Boot" scheme="https://noahcodemonkey.top/categories/Java/Spring-%E5%85%A8%E5%AE%B6%E6%A1%B6/Spring-Boot/"/>
    
      <category term="教程" scheme="https://noahcodemonkey.top/categories/Java/Spring-%E5%85%A8%E5%AE%B6%E6%A1%B6/Spring-Boot/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="https://noahcodemonkey.top/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Java" scheme="https://noahcodemonkey.top/tags/Java/"/>
    
      <category term="Spring 全家桶" scheme="https://noahcodemonkey.top/tags/Spring-%E5%85%A8%E5%AE%B6%E6%A1%B6/"/>
    
      <category term="Spring Boot" scheme="https://noahcodemonkey.top/tags/Spring-Boot/"/>
    
      <category term="入门" scheme="https://noahcodemonkey.top/tags/%E5%85%A5%E9%97%A8/"/>
    
  </entry>
  
  <entry>
    <title>我的Markdown编辑器</title>
    <link href="https://noahcodemonkey.top/2019/05/11/%E6%88%91%E7%9A%84Markdown%E7%BC%96%E8%BE%91%E5%99%A8/"/>
    <id>https://noahcodemonkey.top/2019/05/11/我的Markdown编辑器/</id>
    <published>2019-05-11T03:50:06.000Z</published>
    <updated>2019-06-01T02:03:31.620Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><img src="https://noahcodemonkey.top/images/img/我的Markdown编辑器/Header.png" alt="" style="width:100%"><p class="description">这篇文章主要介绍的就是我使用的 Markdown 编辑器推荐，用的软件还是挺多的，但是主推还是--Atom。</p><a id="more"></a><h2 id="经历"><a href="#经历" class="headerlink" title="经历"></a>经历</h2><p>我有很多东西都是看网上其他教程看到的才知道的，就像我使用Markdown语言来写文章，我当初就是看前端的教程然后看到老师使用的Markdown来写笔记感觉很神奇，然后才深入了解并且逐渐爱上了这款语言，省去了我们大部分的文章美化时间，并且我还有些强迫症，排版一定要有模有样的那种才行。</p><h2 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h2><p>以前是使用过Mac系统，也使用过相关的Markdown编辑器软件来书写文章，我感觉最好用的就是MacDown这款软件，能提供实时上下滚动，右侧实时更新文章预览，感觉还是很棒的，但是用的不是很多，之后就是因为电脑存储太小128g固态，并且学校学习使用的都是window系统，很麻烦就放弃了我的Macbook Air，然后重新买了一台惠普光影精灵，电脑感觉还行，就是散热这个问题好像是笔记本通病了，风扇有些吵其他没什么，诶呀，好像越来越偏移主题了。</p><p>window使用的软件就相对与Mac多一点并且使用的时间也长，像什么别人推荐的印象笔记啊，MaHua，简书，MarkdownPad(付费软件，可以破解)，Atom，Visual Studio Code，到最近又发现一款Typed这款软件，其实有些还是可以的，但是我最终还是选择了Atom这款编辑器。</p><h2 id="Atom"><a href="#Atom" class="headerlink" title="Atom"></a>Atom</h2><p>他是一款文本编辑器软件，一开始知道这款软件是看一篇微信小程序的教程时看到老师使用这款软件来编写代码，我当时是因为他的主题深深的吸引住了，天哪，怎么可以这么好看！！！</p><p>它的主题搭配之后也被我用来制作了很多东西，什么输入法皮肤，什么PPT的主题等等等。</p><h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><p>为了方便我们编写Markdown语言，我安装了如下几个插件</p><h4 id="Markdown系列："><a href="#Markdown系列：" class="headerlink" title="Markdown系列："></a>Markdown系列：</h4><ul><li><p>language-Markdown(代码增强)</p><p>一般的Markdown编辑器提供了代码着色等基本功能，language-markdown除了能给代码着色，还提供了快捷的代码片段生成等功能。</p></li><li><p>markdown-table-editor(表格创建编辑)</p><p>虽然我没写多少文章但是我用到表格的地方真的少，但感觉之后肯定会用到的，所以我还留着</p></li><li><p>markdown-preview-enhanced(markdown预览)</p><p>网上都推荐的是 markdown-preview-plus + markdown-scroll-sync 这两个插件配合使用，但是我的markdown-scroll-sync这个插件老是报错，不懂为啥，在怪我英文不好，更加不想搞了，最后看到这个插件拯救了我，Markdown预览以及实时滚动一个插件直接搞定，我还是推荐一下这款插件。</p></li></ul><h4 id="Atom美化插件"><a href="#Atom美化插件" class="headerlink" title="Atom美化插件"></a>Atom美化插件</h4><ul><li><p>file-icon(图标美化)</p><p>推荐这款主要就是使用的人多，其他的我也没试过，不管了，随大流了，啥时候看见什么好看的再说吧。</p></li><li><p>activate-power-mode(装逼利器)</p><p>打字时候会有爆炸特效，乖乖大爱好吧！以前在使用XCode编辑器的时候才知道有这么个插件，当时爽的不行，然后XCode更新到8了之后不可以安装插件了，就渐渐淡忘了，然而Atom又重新让我使用到了！</p></li></ul><p><strong>好了，我的Markdown编辑器就推荐到这里了，大家一起加油呀！！！</strong></p>]]></content>
    
    <summary type="html">
    
      我的Markdown编辑器
    
    </summary>
    
      <category term="Markdown" scheme="https://noahcodemonkey.top/categories/Markdown/"/>
    
      <category term="编辑器" scheme="https://noahcodemonkey.top/categories/Markdown/%E7%BC%96%E8%BE%91%E5%99%A8/"/>
    
    
      <category term="Atom" scheme="https://noahcodemonkey.top/tags/Atom/"/>
    
      <category term="Markdown" scheme="https://noahcodemonkey.top/tags/Markdown/"/>
    
      <category term="编辑器" scheme="https://noahcodemonkey.top/tags/%E7%BC%96%E8%BE%91%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>2016届蓝桥杯 Java C组 省赛试题及答案</title>
    <link href="https://noahcodemonkey.top/2019/03/12/2016%E5%B1%8A%E8%93%9D%E6%A1%A5%E6%9D%AF-Java-C%E7%BB%84-%E7%9C%81%E8%B5%9B%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88/"/>
    <id>https://noahcodemonkey.top/2019/03/12/2016届蓝桥杯-Java-C组-省赛试题及答案/</id>
    <published>2019-03-12T07:05:36.000Z</published>
    <updated>2019-03-16T02:01:26.396Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><img src="https://noahcodemonkey.top/images/img/2016届蓝桥杯JavaC组省赛试题及答案/timg.jpg" alt="" style="width:100%"><p class="description">在之前其实写了一篇2015年决赛的文章，但是发现每一条我感觉都要去翻阅别人的代码，这样子的效率太低了，所以赶紧开始做2016届的省赛题</p><a id="more"></a><h2 id="结果填空"><a href="#结果填空" class="headerlink" title="结果填空"></a>结果填空</h2><h3 id="有奖猜谜"><a href="#有奖猜谜" class="headerlink" title="有奖猜谜"></a>有奖猜谜</h3><h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>小明很喜欢猜谜语。<br>最近，他被邀请参加了X星球的猜谜活动。</p><p>每位选手开始的时候都被发给777个电子币。<br>规则是：猜对了，手里的电子币数目翻倍，<br>猜错了，扣除555个电子币, 扣完为止。</p><p>小明一共猜了15条谜语。<br>战果为：vxvxvxvxvxvxvvx<br>其中v表示猜对了，x表示猜错了。</p><p>请你计算一下，小明最后手里的电子币数目是多少。</p><p>请填写表示最后电子币数目的数字。<br>注意：你提交的应该是一个整数，不要填写任何多余的内容或说明性文字。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>这毕竟第一条嘛没啥难度，直接计算器算都可以算出来，所以就不过多的说啥了。</p><h4 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h4><p><strong>58497</strong></p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> x = <span class="number">777</span>;</span><br><span class="line"><span class="keyword">int</span>[] b = &#123; <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; b.length; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (b[i] == <span class="number">1</span>) &#123;</span><br><span class="line">x *= <span class="number">2</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">x -= <span class="number">555</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="煤球数目"><a href="#煤球数目" class="headerlink" title="煤球数目"></a>煤球数目</h3><h4 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h4><p>有一堆煤球，堆成三角棱锥形。具体：<br>第一层放1个，<br>第二层3个（排列成三角形），<br>第三层6个（排列成三角形），<br>第四层10个（排列成三角形），<br>….<br>如果一共有100层，共有多少个煤球？</p><p>请填表示煤球总数目的数字。<br>注意：你提交的应该是一个整数，不要填写任何多余的内容或说明性文字。</p><h4 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h4><p>对，这是一条找规律的题目，你们可能已经做出来了，但是愚蠢的我居然还看了答案才知道，天呐，这么简单的规律我都没想到真的很蠢， 总想着是什么 2^n-1 之类相对比较复杂的答案，然后看了答案后都怀疑自己是不是个傻子。。。</p><h4 id="答案-1"><a href="#答案-1" class="headerlink" title="答案"></a>答案</h4><p><strong>171700</strong></p><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> num = <span class="number">0</span>, sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">100</span>; i++) &#123;</span><br><span class="line">num += i;</span><br><span class="line">sum += num;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(sum);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="平方怪圈"><a href="#平方怪圈" class="headerlink" title="平方怪圈"></a>平方怪圈</h3><h4 id="题目-2"><a href="#题目-2" class="headerlink" title="题目"></a>题目</h4><p>如果把一个正整数的每一位都平方后再求和，得到一个新的正整数。<br>对新产生的正整数再做同样的处理。</p><p>如此一来，你会发现，不管开始取的是什么数字，<br>最终如果不是落入1，就是落入同一个循环圈。</p><p>请写出这个循环圈中最大的那个数字。</p><p>请填写该最大数字。<br>注意：你提交的应该是一个整数，不要填写任何多余的内容或说明性文字。</p><h4 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h4><p>这道题我一开始做的时候就直接找了几个数手算算出了最终结果，比赛的时候还是聪明点，只要能得出答案就行，但现在毕竟是在练习嘛我还是选择写了代码运行出最终结果，代码有点乱并不是最优代码，但我感觉稍微看看应该看得懂的.</p><h4 id="答案-2"><a href="#答案-2" class="headerlink" title="答案"></a>答案</h4><p><strong>145</strong></p><h4 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> sum;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> time = <span class="number">0</span>, max = <span class="number">0</span>;</span><br><span class="line">loop: <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">getSum(i);</span><br><span class="line"><span class="keyword">if</span> (time == <span class="number">1000</span>) &#123;</span><br><span class="line">System.out.println(max);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">while</span> (time &lt; <span class="number">1000</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (sum == <span class="number">1</span>) &#123;</span><br><span class="line">time = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">continue</span> loop;</span><br><span class="line">&#125;</span><br><span class="line">getSum(sum);</span><br><span class="line"><span class="keyword">if</span> (max &lt; sum) &#123;</span><br><span class="line">max = sum;</span><br><span class="line">&#125;</span><br><span class="line">time++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getSum</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">String str = String.valueOf(n);</span><br><span class="line"><span class="keyword">char</span>[] charArrays = str.toCharArray();</span><br><span class="line">sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; charArrays.length; i++) &#123;</span><br><span class="line">sum += Math.pow((<span class="keyword">int</span>) charArrays[i] - <span class="number">48</span>, <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="代码填空"><a href="#代码填空" class="headerlink" title="代码填空"></a>代码填空</h2><h3 id="骰子游戏"><a href="#骰子游戏" class="headerlink" title="骰子游戏"></a>骰子游戏</h3><h4 id="题目-3"><a href="#题目-3" class="headerlink" title="题目"></a>题目</h4><p>我们来玩一个游戏。<br>同时掷出3个普通骰子（6个面上的数字分别是1~6）。<br>如果其中一个骰子上的数字等于另外两个的和，你就赢了。</p><p>下面的程序计算出你能获胜的精确概率（以既约分数表示）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(b==<span class="number">0</span>) <span class="keyword">return</span> a;</span><br><span class="line"><span class="keyword">return</span> gcd(b,a%b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">6</span>; i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;<span class="number">6</span>; j++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>; k&lt;<span class="number">6</span>; k++)&#123;</span><br><span class="line"><span class="keyword">if</span>(________________________________) n++;   <span class="comment">//填空位置</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> m = gcd(n,<span class="number">6</span>*<span class="number">6</span>*<span class="number">6</span>);</span><br><span class="line">System.out.println(n/m + <span class="string">"/"</span> + <span class="number">6</span>*<span class="number">6</span>*<span class="number">6</span>/m);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>仔细阅读代码，填写划线部分缺少的内容。</p><p>注意：不要填写任何已有内容或说明性文字。</p><h4 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h4><p>这道题不难简单理解一下就行了，但是这题目坏的就是它的 for 循环的值设置的不好，它的取值只有0-5，但是骰子我们都知道是1-6所以我们判断大小时候每个值都要加上1，所以做这类题目的时候要认真审题和理解它的代码。</p><h4 id="答案-3"><a href="#答案-3" class="headerlink" title="答案"></a>答案</h4><p><strong>i + 1 == j + k + 2 || j + 1 == i + k + 2 || k + 1 == i + j + 2</strong></p><h4 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (b == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line"><span class="keyword">return</span> gcd(b, a % b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">6</span>; j++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; <span class="number">6</span>; k++) &#123;</span><br><span class="line"><span class="keyword">if</span> (i + <span class="number">1</span> == j + k + <span class="number">2</span> || j + <span class="number">1</span> == i + k + <span class="number">2</span> || k + <span class="number">1</span> == i + j + <span class="number">2</span>)</span><br><span class="line">n++; <span class="comment">// 填空位置</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> m = gcd(n, <span class="number">6</span> * <span class="number">6</span> * <span class="number">6</span>);</span><br><span class="line">System.out.println(n / m + <span class="string">"/"</span> + <span class="number">6</span> * <span class="number">6</span> * <span class="number">6</span> / m);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="分小组"><a href="#分小组" class="headerlink" title="分小组"></a>分小组</h3><h4 id="题目-4"><a href="#题目-4" class="headerlink" title="题目"></a>题目</h4><p>9名运动员参加比赛，需要分3组进行预赛。<br>有哪些分组的方案呢？</p><p>我们标记运动员为 A,B,C,… I<br>下面的程序列出了所有的分组方法。</p><p>该程序的正常输出为：</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">ABC DEF GHI</span><br><span class="line">ABC DEG FHI</span><br><span class="line">ABC <span class="number">DEH</span> FGI</span><br><span class="line">ABC DEI FGH</span><br><span class="line">ABC DFG EHI</span><br><span class="line">ABC <span class="number">DFH</span> EGI</span><br><span class="line">ABC DFI EGH</span><br><span class="line">ABC DGH EFI</span><br><span class="line">ABC DGI <span class="number">EFH</span></span><br><span class="line">ABC DHI EFG</span><br><span class="line">ABC EFG DHI</span><br><span class="line">ABC <span class="number">EFH</span> DGI</span><br><span class="line">ABC EFI DGH</span><br><span class="line">ABC EGH DFI</span><br><span class="line">ABC EGI <span class="number">DFH</span></span><br><span class="line">ABC EHI DFG</span><br><span class="line">ABC FGH DEI</span><br><span class="line">ABC FGI <span class="number">DEH</span></span><br><span class="line">ABC FHI DEG</span><br><span class="line">ABC GHI DEF</span><br><span class="line">ABD CEF GHI</span><br><span class="line">ABD CEG FHI</span><br><span class="line">ABD <span class="number">CEH</span> FGI</span><br><span class="line">ABD CEI FGH</span><br><span class="line">ABD CFG EHI</span><br><span class="line">ABD <span class="number">CFH</span> EGI</span><br><span class="line">ABD CFI EGH</span><br><span class="line">ABD CGH EFI</span><br><span class="line">ABD CGI <span class="number">EFH</span></span><br><span class="line">ABD CHI EFG</span><br><span class="line">ABD EFG CHI</span><br><span class="line">..... (以下省略，总共<span class="number">560</span>行)。</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">A</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">remain</span><span class="params">(<span class="keyword">int</span>[] a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">String s = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;a.length; i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i] == <span class="number">0</span>) s += (<span class="keyword">char</span>)(i+<span class="string">'A'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">f</span><span class="params">(String s, <span class="keyword">int</span>[] a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;a.length; i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]==<span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line">a[i] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>; j&lt;a.length; j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[j]==<span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line">a[j]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=j+<span class="number">1</span>; k&lt;a.length; k++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[k]==<span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line">a[k]=<span class="number">1</span>;</span><br><span class="line">System.out.println(__________________________________);  <span class="comment">//填空位置</span></span><br><span class="line">a[k]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">a[j]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">a[i] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span>[] a = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">9</span>];</span><br><span class="line">a[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> b=<span class="number">1</span>; b&lt;a.length; b++)&#123;</span><br><span class="line">a[b] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> c=b+<span class="number">1</span>; c&lt;a.length; c++)&#123;</span><br><span class="line">a[c] = <span class="number">1</span>;</span><br><span class="line">String s = <span class="string">"A"</span> + (<span class="keyword">char</span>)(b+<span class="string">'A'</span>) + (<span class="keyword">char</span>)(c+<span class="string">'A'</span>);</span><br><span class="line">f(s,a);</span><br><span class="line">a[c] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">a[b] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>仔细阅读代码，填写划线部分缺少的内容。</p><p>注意：不要填写任何已有内容或说明性文字。</p><h4 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h4><p>这道题怎么说呢，我可能做完了才基本知道了啥意思，我的答案完全靠猜出来的，首先有一个方法 remain 没有使用所以这个输出中肯定要使用到，还有一个 s 没有输出，最后肯定也要输出，看了一下答案刚好是第一列和第三列，还剩下中间这一列就可以完成了，看了一下这个 f 方法，刚好有三个 for 循环看样子可能表示的就是中间的数，然后我们模仿一下 mian 方法中的 <strong>(char)(b+’A’)</strong> 试了一下，居然真的完成了，我可真是个机灵鬼！！！</p><h4 id="答案-4"><a href="#答案-4" class="headerlink" title="答案"></a>答案</h4><p><strong>s+” “+(char)(i+’A’)+(char)(j+’A’)+(char)(k+’A’)+” “+remain(a)</strong></p><h4 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 分小组 </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">remain</span><span class="params">(<span class="keyword">int</span>[] a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">String s = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;a.length; i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i] == <span class="number">0</span>) s += (<span class="keyword">char</span>)(i+<span class="string">'A'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">f</span><span class="params">(String s, <span class="keyword">int</span>[] a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;a.length; i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]==<span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line">a[i] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>; j&lt;a.length; j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[j]==<span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line">a[j]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=j+<span class="number">1</span>; k&lt;a.length; k++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[k]==<span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line">a[k]=<span class="number">1</span>;</span><br><span class="line">System.out.println(s+<span class="string">" "</span>+(<span class="keyword">char</span>)(i+<span class="string">'A'</span>)+(<span class="keyword">char</span>)(j+<span class="string">'A'</span>)+(<span class="keyword">char</span>)(k+<span class="string">'A'</span>)+<span class="string">" "</span>+remain(a));  <span class="comment">//填空位置</span></span><br><span class="line">a[k]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">a[j]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">a[i] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span>[] a = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">9</span>];</span><br><span class="line">a[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> b=<span class="number">1</span>; b&lt;a.length; b++)&#123;</span><br><span class="line">a[b] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> c=b+<span class="number">1</span>; c&lt;a.length; c++)&#123;</span><br><span class="line">a[c] = <span class="number">1</span>;</span><br><span class="line">String s = <span class="string">"A"</span> + (<span class="keyword">char</span>)(b+<span class="string">'A'</span>) + (<span class="keyword">char</span>)(c+<span class="string">'A'</span>);</span><br><span class="line">f(s,a);</span><br><span class="line">a[c] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">a[b] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="结果填空-1"><a href="#结果填空-1" class="headerlink" title="结果填空"></a>结果填空</h2><h3 id="凑算式"><a href="#凑算式" class="headerlink" title="凑算式"></a>凑算式</h3><h4 id="题目-5"><a href="#题目-5" class="headerlink" title="题目"></a>题目</h4><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">     B      DEF</span><br><span class="line">A + --- + ------- = <span class="number">10</span></span><br><span class="line">     C      GHI</span><br><span class="line">```  </span><br><span class="line"></span><br><span class="line">（如果显示有问题，可以参见【图<span class="number">1.</span>jpg】）</span><br><span class="line"></span><br><span class="line">这个算式中A~I代表<span class="number">1</span>~<span class="number">9</span>的数字，不同的字母代表不同的数字。</span><br><span class="line"></span><br><span class="line">比如：</span><br><span class="line"></span><br><span class="line"><span class="number">6</span>+<span class="number">8</span>/<span class="number">3</span>+<span class="number">952</span>/<span class="number">714</span> 就是一种解法，</span><br><span class="line"></span><br><span class="line"><span class="number">5</span>+<span class="number">3</span>/<span class="number">1</span>+<span class="number">972</span>/<span class="number">486</span> 是另一种解法。</span><br><span class="line"></span><br><span class="line">这个算式一共有多少种解法？</span><br><span class="line"></span><br><span class="line">注意：你提交应该是个整数，不要填写任何多余的内容或说明性文字。</span><br><span class="line"></span><br><span class="line">![诶呀,图片加载出了点问题!](https:<span class="comment">//noahcodemonkey.top/images/img/2016届蓝桥杯JavaC组省赛试题及答案/图1.jpg)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#### 思路</span></span><br><span class="line"></span><br><span class="line">一开始我看到这题目想到的方法就是全排列算法，但是不知道之后为啥运行不出结果，我从网上找了一下答案也没啥错误啊，然后最后我还是用了暴力破解才做出了结果，全排列的方法之后再写吧，我先挂上我的暴力破解，但是我感觉如果在比赛中用的话会爆内存的，我电脑配置还算可以了，还运行了有一会儿，风扇都转的飞起。。。</span><br><span class="line"></span><br><span class="line"><span class="meta">#### 代码</span></span><br><span class="line"></span><br><span class="line">暴力破解法</span><br><span class="line">```Java</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(String[] args) &#123;</span><br><span class="line"><span class="keyword">int</span> <span class="keyword">count</span>=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">double</span> A,B,C;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> a=<span class="number">1</span>;a&lt;<span class="number">10</span>;a++) &#123;</span><br><span class="line">A=a;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> b=<span class="number">1</span>;b&lt;<span class="number">10</span>;b++) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> c=<span class="number">1</span>;c&lt;<span class="number">10</span>;c++) &#123;</span><br><span class="line">B=b*<span class="number">1.00</span>/c;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> d=<span class="number">1</span>;d&lt;<span class="number">10</span>;d++) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> e=<span class="number">1</span>;e&lt;<span class="number">10</span>;e++) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> f=<span class="number">1</span>;f&lt;<span class="number">10</span>;f++) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> g=<span class="number">1</span>;g&lt;<span class="number">10</span>;g++) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> h=<span class="number">1</span>;h&lt;<span class="number">10</span>;h++) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;<span class="number">10</span>;i++) &#123;</span><br><span class="line">C=(d*<span class="number">100</span>+e*<span class="number">10</span>+f)*<span class="number">1.00</span>/(g*<span class="number">100</span>+h*<span class="number">10</span>+i);</span><br><span class="line"><span class="keyword">if</span>(PD(a,b,c,d,e,f,g,h,i)&amp;&amp;A+B+C==<span class="number">10</span>)&#123;</span><br><span class="line"><span class="keyword">count</span>++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="keyword">count</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> PD(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> c,<span class="keyword">int</span> d,<span class="keyword">int</span> e,<span class="keyword">int</span> f,<span class="keyword">int</span> g,<span class="keyword">int</span> h,<span class="keyword">int</span> i) &#123;</span><br><span class="line">String <span class="keyword">str</span>=a+<span class="string">" "</span>+b+<span class="string">" "</span>+c+<span class="string">" "</span>+d+<span class="string">" "</span>+e+<span class="string">" "</span>+f+<span class="string">" "</span>+g+<span class="string">" "</span>+h+<span class="string">" "</span>+i;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">str</span>.contains(<span class="string">"1"</span>)&amp;&amp;<span class="keyword">str</span>.contains(<span class="string">"2"</span>)&amp;&amp;<span class="keyword">str</span>.contains(<span class="string">"3"</span>)&amp;&amp;<span class="keyword">str</span>.contains(<span class="string">"4"</span>)&amp;&amp;<span class="keyword">str</span>.contains(<span class="string">"5"</span>)&amp;&amp;<span class="keyword">str</span>.contains(<span class="string">"6"</span>)&amp;&amp;<span class="keyword">str</span>.contains(<span class="string">"7"</span>)&amp;&amp;<span class="keyword">str</span>.contains(<span class="string">"8"</span>)&amp;&amp;<span class="keyword">str</span>.contains(<span class="string">"9"</span>)) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>全排列解法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 凑算式 </span>&#123;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[] = &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span> &#125;;</span><br><span class="line">f(a, <span class="number">0</span>);</span><br><span class="line">System.out.println(count);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span>[] a, <span class="keyword">int</span> begin)</span> </span>&#123;</span><br><span class="line"><span class="keyword">double</span> q, w, e;</span><br><span class="line"><span class="keyword">if</span> (begin == a.length - <span class="number">1</span>) &#123;</span><br><span class="line">q = a[<span class="number">0</span>];</span><br><span class="line">w = a[<span class="number">1</span>] * <span class="number">1.00</span> / a[<span class="number">2</span>];</span><br><span class="line">e = (a[<span class="number">3</span>] * <span class="number">100</span> + a[<span class="number">4</span>] * <span class="number">10</span> + a[<span class="number">5</span>]) * <span class="number">1.00</span> / (a[<span class="number">6</span>] * <span class="number">100</span> + a[<span class="number">7</span>] * <span class="number">10</span> + a[<span class="number">8</span>]);</span><br><span class="line"><span class="keyword">if</span> (q + w + e == <span class="number">10</span>) &#123;</span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = begin; i &lt; a.length; i++) &#123;</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> tmp = a[i];</span><br><span class="line">a[i] = a[begin];</span><br><span class="line">a[begin] = tmp;</span><br><span class="line">&#125;</span><br><span class="line">f(a, begin + <span class="number">1</span>);</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> tmp = a[i];</span><br><span class="line">a[i] = a[begin];</span><br><span class="line">a[begin] = tmp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="冰雹数"><a href="#冰雹数" class="headerlink" title="冰雹数"></a>冰雹数</h3><h4 id="题目-6"><a href="#题目-6" class="headerlink" title="题目"></a>题目</h4><p>任意给定一个正整数N，<br>如果是偶数，执行： N / 2<br>如果是奇数，执行： N * 3 + 1</p><p>生成的新的数字再执行同样的动作，循环往复。</p><p>通过观察发现，这个数字会一会儿上升到很高，<br>一会儿又降落下来。<br>就这样起起落落的，但最终必会落到“1”<br>这有点像小冰雹粒子在冰雹云中翻滚增长的样子。</p><p>比如N=9<br>9,28,14,7,22,11,34,17,52,26,13,40,20,10,5,16,8,4,2,1<br>可以看到，N=9的时候，这个“小冰雹”最高冲到了52这个高度。</p><p>输入格式：<br>一个正整数N（N&lt;1000000）<br>输出格式：<br>一个正整数，表示 <strong>不大于N的数字</strong> ，经过冰雹数变换过程中，最高冲到了多少。</p><p>例如，输入：<br>10<br>程序应该输出：<br>52</p><p>再例如，输入：<br>100<br>程序应该输出：<br>9232</p><p>资源约定：<br>峰值内存消耗（含虚拟机） &lt; 256M<br>CPU消耗  &lt; 1000ms</p><p>请严格按要求输出，不要画蛇添足地打印类似：“请您输入…” 的多余内容。</p><p>所有代码放在同一个源文件中，调试通过后，拷贝提交该源码。<br>注意：不要使用package语句。不要使用jdk1.7及以上版本的特性。<br>注意：主类的名字必须是：Main，否则按无效代码处理。</p><h4 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h4><p>看到我划的重点了嘛？对，就是加粗的那块地方，我真的是想暴揍这道题的作者，难得能自己独立写出一道递归题，想要找找自己的存在感，居然跟我玩文字游戏，一开始我的代码运行9没问题，但是运行到10答案就不一样了，我就纳闷了，这么简单的题目我不可能错啊，自己做了至少3次的手动推算，怎么也是16这个结果啊，然后就去找资料查找原因，看到他们的main函数就懵了，为啥n要卸载循环里啊？？？完全没道理啊，他不是只要输入一个值然后递归吗？然后又看了一篇文章，也是这样？但这篇文章将我标注的地方也加粗了并用红色标明了，可看了几眼还是没看出头绪，最后的最后终于搞懂了。。。(我承认我语文不好)</p><h4 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Scanner s1 = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> n = s1.nextInt();</span><br><span class="line"><span class="keyword">int</span> max = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> tmp = BBS(i, max);</span><br><span class="line"><span class="keyword">if</span> (tmp &gt; max) &#123;</span><br><span class="line">max = tmp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(max);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">BBS</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> max)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> max;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (n % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">n /= <span class="number">2</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">n = n * <span class="number">3</span> + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (n &gt; max) &#123;</span><br><span class="line">max = n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> BBS(n, max);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="四平方和"><a href="#四平方和" class="headerlink" title="四平方和"></a>四平方和</h3><h4 id="题目-7"><a href="#题目-7" class="headerlink" title="题目"></a>题目</h4><p>四平方和定理，又称为拉格朗日定理：<br>每个正整数都可以表示为至多4个正整数的平方和。<br>如果把0包括进去，就正好可以表示为4个数的平方和。</p><p>比如：<br>5 = 0^2 + 0^2 + 1^2 + 2^2<br>7 = 1^2 + 1^2 + 1^2 + 2^2<br>（^符号表示乘方的意思）</p><p>对于一个给定的正整数，可能存在多种平方和的表示法。<br>要求你对4个数排序：<br>0 &lt;= a &lt;= b &lt;= c &lt;= d<br>并对所有的可能表示法按 a,b,c,d 为联合主键升序排列，最后输出第一个表示法</p><p>程序输入为一个正整数N (N&lt;5000000)<br>要求输出4个非负整数，按从小到大排序，中间用空格分开</p><p>例如，输入：</p><p>5</p><p>则程序应该输出：</p><p>0 0 1 2</p><p>再例如，输入：</p><p>12</p><p>则程序应该输出：</p><p>0 2 2 2</p><p>再例如，输入：</p><p>773535</p><p>则程序应该输出：</p><p>1 1 267 838</p><p>资源约定：<br>峰值内存消耗（含虚拟机） &lt; 256M<br>CPU消耗  &lt; 3000ms</p><p>请严格按要求输出，不要画蛇添足地打印类似：“请您输入…” 的多余内容。</p><p>所有代码放在同一个源文件中，调试通过后，拷贝提交该源码。<br>注意：不要使用package语句。不要使用jdk1.7及以上版本的特性。<br>注意：主类的名字必须是：Main，否则按无效代码处理。</p><h4 id="思路-6"><a href="#思路-6" class="headerlink" title="思路"></a>思路</h4><p>哇，看到这道题都哭了，为什么感觉从2018年以前的题都相对于比较简单啊，这居然是第9条的题目，完全可以暴力破解嘛。但是之后的代码应该需要优化一下循环取值的范围，太大的话应该会超内存。</p><h4 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Scanner s1 = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> n = s1.nextInt();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; Math.sqrt(n); i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt; Math.sqrt(n); j++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = j; k &lt; Math.sqrt(n); k++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> m = k; m &lt; Math.sqrt(n); m++) &#123;</span><br><span class="line"><span class="keyword">if</span> (i * i + j * j + k * k + m * m == n) &#123;</span><br><span class="line">System.out.println(i + <span class="string">" "</span> + j + <span class="string">" "</span> + k + <span class="string">" "</span> + m);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="密码脱落"><a href="#密码脱落" class="headerlink" title="密码脱落"></a>密码脱落</h3><h4 id="题目-8"><a href="#题目-8" class="headerlink" title="题目"></a>题目</h4><p>X星球的考古学家发现了一批古代留下来的密码。<br>这些密码是由A、B、C、D 四种植物的种子串成的序列。<br>仔细分析发现，这些密码串当初应该是前后对称的（也就是我们说的镜像串）。<br>由于年代久远，其中许多种子脱落了，因而可能会失去镜像的特征。</p><p>你的任务是：<br>给定一个现在看到的密码串，计算一下从当初的状态，它要至少脱落多少个种子，才可能会变成现在的样子。</p><p>输入一行，表示现在看到的密码串（长度不大于1000）<br>要求输出一个正整数，表示至少脱落了多少个种子。</p><p>例如，输入：<br>ABCBA<br>则程序应该输出：<br>0</p><p>再例如，输入：<br>ABDCDCBABC<br>则程序应该输出：<br>3</p><p>资源约定：<br>峰值内存消耗（含虚拟机） &lt; 256M<br>CPU消耗  &lt; 3000ms</p><p>请严格按要求输出，不要画蛇添足地打印类似：“请您输入…” 的多余内容。</p><p>所有代码放在同一个源文件中，调试通过后，拷贝提交该源码。<br>注意：不要使用package语句。不要使用jdk1.7及以上版本的特性。<br>注意：主类的名字必须是：Main，否则按无效代码处理。</p><h4 id="思路-7"><a href="#思路-7" class="headerlink" title="思路"></a>思路</h4><p>思路就是找到中间值然后依次往两边作比较，相同则继续往两边找，如果不同就分两种情况，一个是将右边的值添加在左边另一种相反，然后在判断。。。这只是个想法，也不知道对不对，第十条都暂时不研究了</p><h4 id="代码-7"><a href="#代码-7" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">还在脑海中加载...</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      2016届蓝桥杯 Java C组 省赛试题及答案
    
    </summary>
    
      <category term="蓝桥杯" scheme="https://noahcodemonkey.top/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
      <category term="省赛" scheme="https://noahcodemonkey.top/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%9C%81%E8%B5%9B/"/>
    
      <category term="java" scheme="https://noahcodemonkey.top/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%9C%81%E8%B5%9B/java/"/>
    
    
      <category term="蓝桥杯" scheme="https://noahcodemonkey.top/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
      <category term="Java" scheme="https://noahcodemonkey.top/tags/Java/"/>
    
      <category term="C组" scheme="https://noahcodemonkey.top/tags/C%E7%BB%84/"/>
    
      <category term="省赛" scheme="https://noahcodemonkey.top/tags/%E7%9C%81%E8%B5%9B/"/>
    
      <category term="2016届" scheme="https://noahcodemonkey.top/tags/2016%E5%B1%8A/"/>
    
  </entry>
  
  <entry>
    <title>2015届蓝桥杯 Java C组 省赛试题及答案</title>
    <link href="https://noahcodemonkey.top/2019/03/05/2015%E5%B1%8A%E8%93%9D%E6%A1%A5%E6%9D%AF-Java-C%E7%BB%84-%E7%9C%81%E8%B5%9B%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88/"/>
    <id>https://noahcodemonkey.top/2019/03/05/2015届蓝桥杯-Java-C组-省赛试题及答案/</id>
    <published>2019-03-05T02:35:06.000Z</published>
    <updated>2019-03-11T03:13:02.061Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><img src="https://noahcodemonkey.top/images/img/2015届蓝桥杯JavaC组省赛试题及答案/timg.jpg" alt="" style="width:100%"><p class="description">因为今年3月份要参加这一届的蓝桥杯比赛，为此刷真题并写下一些文章留些记录，不管最后的成绩如何，我努力了！加油！！！</p><a id="more"></a><h2 id="结果填空1"><a href="#结果填空1" class="headerlink" title="结果填空1"></a>结果填空1</h2><h3 id="隔行变色"><a href="#隔行变色" class="headerlink" title="隔行变色"></a>隔行变色</h3><h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>  Excel 表的格子很多，为了避免把某行的数据和相邻行混淆，可以采用隔行变色的样式。<br>  小明设计的样式为：第1行蓝色，第2行白色，第3行蓝色，第4行白色，….<br>  现在小明想知道，从第21行到第50行一共包含了多少个蓝色的行。</p><p>  请你直接提交这个整数，千万不要填写任何多余的内容。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>  由题可知，颜色的变化是由行号的奇偶性来判断的，所以我们只需要在给定的范围内循环一下，在循环中加入一个 if判断是奇是偶，因为题目只需要输出蓝色行的个数，我们就可以判断它是否为奇数，若是奇数则次数加1即可.</p><h4 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h4><p>  <strong>15</strong></p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_01</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Scanner s1 = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> start = s1.nextInt();</span><br><span class="line"><span class="keyword">int</span> end = s1.nextInt();</span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = start; i &lt;= end; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (i % <span class="number">2</span> != <span class="number">0</span>) &#123;</span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(count);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="立方尾不变"><a href="#立方尾不变" class="headerlink" title="立方尾不变"></a>立方尾不变</h3><h4 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h4><p>有些数字的立方的末尾正好是该数字本身。<br>比如：1,4,5,6,9,24,25,….</p><p>请你计算一下，在10000以内的数字中（指该数字，并非它立方后的数值），符合这个特征的正整数一共有多少个。</p><p>请提交该整数，不要填写任何多余的内容。</p><h4 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h4><p>一开始我想的很简单，就是单纯的拿10000的 for 循环中判断 <strong>i == Math.pow(i, 3) % 10</strong> ,之后看见题目中举得例子不止我用上面代码测试出的5这个结果,发现他的结尾不一定是就是最后一位啊,应该 i 是几位它的结尾就该留几位,为了解决这个问题,我想到的是用 String 的 length 方法,详情请看代码.</p><h4 id="答案-1"><a href="#答案-1" class="headerlink" title="答案"></a>答案</h4><p><strong>36</strong></p><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">10000</span>; i++) &#123;</span><br><span class="line">String str = <span class="string">""</span> + i;</span><br><span class="line"><span class="keyword">int</span> yu = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; str.length(); j++) &#123;</span><br><span class="line">yu *= <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (i == Math.pow(i, <span class="number">3</span>) % yu) &#123;</span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(count);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="无穷分数"><a href="#无穷分数" class="headerlink" title="无穷分数"></a>无穷分数</h3><h4 id="题目-2"><a href="#题目-2" class="headerlink" title="题目"></a>题目</h4><p>无穷的分数，有时会趋向于固定的数字。</p><p>请计算【图1.jpg】所示的无穷分数，要求四舍五入，精确到小数点后5位，小数位不足的补0。</p><p>请填写该浮点数，不能填写任何多余的内容。</p><p><img src="https://noahcodemonkey.top/images/img/2015%E5%B1%8A%E8%93%9D%E6%A1%A5%E6%9D%AFJavaC%E7%BB%84%E7%9C%81%E8%B5%9B%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88/%E5%9B%BE1.jpg" alt="诶呀,图片加载出了点问题!"></p><h4 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h4><p>首先,很明显一看到这个题目我就想到了用递归做,但是细看了题目以后,发现有点看不懂了,他为什么没有规定出口值?那他不还要一直循环下去嘛?那这结果怎么求嘛?无奈之下,从网上查找了答案,才清楚这题目的意思,原来它的结果会随着运算的次数越多,会越来越精确一个值,我们只需要把那个大约值求出来即可.</p><h4 id="答案-2"><a href="#答案-2" class="headerlink" title="答案"></a>答案</h4><p><strong>0.58198</strong></p><h4 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">System.out.printf(<span class="string">"%.5f"</span>, FS(<span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">FS</span><span class="params">(<span class="keyword">double</span> n)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (n &gt;= <span class="number">100</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> n;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> n / (n + FS(n + <span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="代码填空"><a href="#代码填空" class="headerlink" title="代码填空"></a>代码填空</h2><h3 id="循环节长度"><a href="#循环节长度" class="headerlink" title="循环节长度"></a>循环节长度</h3><h4 id="题目-3"><a href="#题目-3" class="headerlink" title="题目"></a>题目</h4><p>两个整数做除法，有时会产生循环小数，其循环部分称为：循环节。<br>比如，11/13=6=&gt;0.846153846153…..  其循环节为[846153] 共有6位。<br>下面的方法，可以求出循环节的长度。</p><p>请仔细阅读代码，并填写划线部分缺少的代码。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n = n % m;</span><br><span class="line">Vector v = <span class="keyword">new</span> Vector();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(;;)</span><br><span class="line">&#123;</span><br><span class="line">v.add(n);</span><br><span class="line">n *= <span class="number">10</span>;</span><br><span class="line">n = n % m;</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(v.indexOf(n)&gt;=<span class="number">0</span>)  _________________________________ ;  <span class="comment">//填空</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意，只能填写缺少的部分，不要重复抄写已有代码。不要填写任何多余的文字。</p><h4 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h4><p>这道题,一上来其实已经想到了如何解决,但是自己太蠢,唉,服了!!!一上来我就把代码放到eclipse中运行,把需要填空的地方我改成了让它输出 <strong>v.indexOf</strong> ,果不其然答案就在其中,看到结果一直在循环0-5,这不就是答案了嘛,然后我就使劲想啊想啊,想不懂怎么把他们搞出来,总想着把5能取出来最后加1啥的乱七八糟的东西,无奈毫无进展,只好从网上寻找答案,当看到答案时心都凉了一半,这么简单为啥就是想不到…</p><h4 id="答案-3"><a href="#答案-3" class="headerlink" title="答案"></a>答案</h4><p><strong>return v.size();</strong></p><h4 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Vector;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">System.out.println(f(<span class="number">11</span>, <span class="number">13</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span> </span>&#123;</span><br><span class="line">n = n % m;</span><br><span class="line">Vector v = <span class="keyword">new</span> Vector();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (;;) &#123;</span><br><span class="line">v.add(n);</span><br><span class="line">n *= <span class="number">10</span>;</span><br><span class="line">n = n % m;</span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (v.indexOf(n) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> v.size();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="格子中输出"><a href="#格子中输出" class="headerlink" title="格子中输出"></a>格子中输出</h3><h4 id="题目-4"><a href="#题目-4" class="headerlink" title="题目"></a>题目</h4><p>stringInGrid方法会在一个指定大小的格子中打印指定的字符串。<br>要求字符串在水平、垂直两个方向上都居中。<br>如果字符串太长，就截断。<br>如果不能恰好居中，可以稍稍偏左或者偏上一点。</p><p>下面的程序实现这个逻辑，请填写划线部分缺少的代码。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">stringInGrid</span><span class="params">(<span class="keyword">int</span> width, <span class="keyword">int</span> height, String s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(s.length()&gt;width-<span class="number">2</span>) s = s.substring(<span class="number">0</span>,width-<span class="number">2</span>);</span><br><span class="line">System.out.print(<span class="string">"+"</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;width-<span class="number">2</span>;i++) System.out.print(<span class="string">"-"</span>);</span><br><span class="line">System.out.println(<span class="string">"+"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>; k&lt;(height-<span class="number">1</span>)/<span class="number">2</span>;k++)&#123;</span><br><span class="line">System.out.print(<span class="string">"|"</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;width-<span class="number">2</span>;i++) System.out.print(<span class="string">" "</span>);</span><br><span class="line">System.out.println(<span class="string">"|"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">"|"</span>);</span><br><span class="line"></span><br><span class="line">String ff = _______________________________________________________;  <span class="comment">//填空</span></span><br><span class="line">System.out.print(String.format(ff,<span class="string">""</span>,s,<span class="string">""</span>));</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"|"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=(height-<span class="number">1</span>)/<span class="number">2</span>+<span class="number">1</span>; k&lt;height-<span class="number">1</span>; k++)&#123;</span><br><span class="line">System.out.print(<span class="string">"|"</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;width-<span class="number">2</span>;i++) System.out.print(<span class="string">" "</span>);</span><br><span class="line">System.out.println(<span class="string">"|"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">"+"</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;width-<span class="number">2</span>;i++) System.out.print(<span class="string">"-"</span>);</span><br><span class="line">System.out.println(<span class="string">"+"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对于题目中数据，应该输出：</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">+------------------+</span></span><br><span class="line">|                  |</span><br><span class="line">|     abcd1234     |</span><br><span class="line">|                  |</span><br><span class="line">|                  |</span><br><span class="line"><span class="code">+------------------+</span></span><br></pre></td></tr></table></figure><p>（如果出现对齐问题，参看【图1.jpg】）</p><p><img src="https://noahcodemonkey.top/images/img/2015%E5%B1%8A%E8%93%9D%E6%A1%A5%E6%9D%AFJavaC%E7%BB%84%E7%9C%81%E8%B5%9B%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88/%E5%9B%BE2.jpg" alt="诶呀,图片加载出了点问题!"></p><h4 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h4><p>一开始遇到这题一脸蒙,首先时不知道String.format的作用,查了API和网上资料搜索之后才知道，这个就是C语言的输出格式嘛，但是当我试了一下填入 <strong>“%s%s%s”</strong> 虽然值是在格子中输出出来了，但是并没有居中，这可咋整？然后直接在网上查找原题，但看到的都是C语言版的不过也看出了一下名堂，在 <strong>%s</strong> 中间居然可以添加一个整数来控制它前面的空格数，然后我就将其更改为 <strong>“%” + (width - s.length()) / 2 + “s%s%” + (width - s.length()) / 2 + “s”;</strong> ，谁知运行后还是显示不对，原来是我忘了两边还有一个 <strong>|</strong> 也要算进去。</p><h4 id="答案-4"><a href="#答案-4" class="headerlink" title="答案"></a>答案</h4><p><strong>“%” + (width - s.length() - 2) / 2 + “s%s%” + (width - s.length() - 2) / 2 + “s”;</strong></p><h4 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">stringInGrid(<span class="number">20</span>, <span class="number">6</span>, <span class="string">"abcd1234"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">stringInGrid</span><span class="params">(<span class="keyword">int</span> width, <span class="keyword">int</span> height, String s)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (s.length() &gt; width - <span class="number">2</span>)</span><br><span class="line">s = s.substring(<span class="number">0</span>, width - <span class="number">2</span>);</span><br><span class="line">System.out.print(<span class="string">"+"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; width - <span class="number">2</span>; i++)</span><br><span class="line">System.out.print(<span class="string">"-"</span>);</span><br><span class="line">System.out.println(<span class="string">"+"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; k &lt; (height - <span class="number">1</span>) / <span class="number">2</span>; k++) &#123;</span><br><span class="line">System.out.print(<span class="string">"|"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; width - <span class="number">2</span>; i++)</span><br><span class="line">System.out.print(<span class="string">" "</span>);</span><br><span class="line">System.out.println(<span class="string">"|"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">"|"</span>);</span><br><span class="line"></span><br><span class="line">String ff = <span class="string">"%"</span> + (width - s.length() - <span class="number">2</span>) / <span class="number">2</span> + <span class="string">"s%s%"</span> + (width - s.length() - <span class="number">2</span>) / <span class="number">2</span> + <span class="string">"s"</span>;<span class="comment">// 填空</span></span><br><span class="line">System.out.print(String.format(ff, <span class="string">""</span>, s, <span class="string">""</span>));</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"|"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = (height - <span class="number">1</span>) / <span class="number">2</span> + <span class="number">1</span>; k &lt; height - <span class="number">1</span>; k++) &#123;</span><br><span class="line">System.out.print(<span class="string">"|"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; width - <span class="number">2</span>; i++)</span><br><span class="line">System.out.print(<span class="string">" "</span>);</span><br><span class="line">System.out.println(<span class="string">"|"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">"+"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; width - <span class="number">2</span>; i++)</span><br><span class="line">System.out.print(<span class="string">"-"</span>);</span><br><span class="line">System.out.println(<span class="string">"+"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="结果填空题2"><a href="#结果填空题2" class="headerlink" title="结果填空题2"></a>结果填空题2</h2><h3 id="奇妙的数字"><a href="#奇妙的数字" class="headerlink" title="奇妙的数字"></a>奇妙的数字</h3><h4 id="题目-5"><a href="#题目-5" class="headerlink" title="题目"></a>题目</h4><p>小明发现了一个奇妙的数字。它的平方和立方正好把0~9的10个数字每个用且只用了一次。<br>你能猜出这个数字是多少吗？</p><p>请填写该数字，不要填写任何多余的内容。</p><h4 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h4><p>看到这题目想到的就是 for 循环遍历数字，然后计算它的平方和立方再去判断它们刚好使用0-9这10个数各一次。<br>一开始我计算他们的平方和立方时选择的是使用Math.pow()这个方法，但是它返回值是double类型的，之后求它的长度时会有影响，所以我还是改成了最传统的相乘，多说无益，直接上代码吧。</p><h4 id="答案-5"><a href="#答案-5" class="headerlink" title="答案"></a>答案</h4><p><strong>69</strong></p><h4 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> pf = i * i;</span><br><span class="line"><span class="keyword">int</span> lf = i * i * i;</span><br><span class="line">String str = pf + <span class="string">" "</span> + lf;</span><br><span class="line"><span class="keyword">if</span> (PD(str) &amp;&amp; (String.valueOf(pf).length() + String.valueOf(lf).length() == <span class="number">10</span>)) &#123;</span><br><span class="line">System.out.println(i);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">PD</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (str.contains(<span class="string">"1"</span>) &amp;&amp; str.contains(<span class="string">"2"</span>) &amp;&amp; str.contains(<span class="string">"3"</span>) &amp;&amp; str.contains(<span class="string">"4"</span>) &amp;&amp; str.contains(<span class="string">"5"</span>)</span><br><span class="line">&amp;&amp; str.contains(<span class="string">"6"</span>) &amp;&amp; str.contains(<span class="string">"7"</span>) &amp;&amp; str.contains(<span class="string">"8"</span>) &amp;&amp; str.contains(<span class="string">"9"</span>)</span><br><span class="line">&amp;&amp; str.contains(<span class="string">"0"</span>)) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="加法变乘法"><a href="#加法变乘法" class="headerlink" title="加法变乘法"></a>加法变乘法</h3><h4 id="题目-6"><a href="#题目-6" class="headerlink" title="题目"></a>题目</h4><p>我们都知道：1+2+3+ … + 49 = 1225<br>现在要求你把其中两个不相邻的加号变成乘号，使得结果为2015</p><p>比如：<br>1+2+3+…+10*11+12+…+27*28+29+…+49 = 2015<br>就是符合要求的答案。</p><p>请你寻找另外一个可能的答案，并把位置靠前的那个乘号左边的数字提交（对于示例，就是提交10）。</p><p>注意：需要你提交的是一个整数，不要填写任何多余的内容。</p><h4 id="思路-6"><a href="#思路-6" class="headerlink" title="思路"></a>思路</h4><p>一开始我想到的方法就是建立一个数组，然后靠两个不相邻的两组相乘数减去这两组数的相加之后的和，让其结果等于2015-1225即可，但之后我一直遇到的问题就是结果不一样，我还在哪儿找了半天原因，但感觉自己的想法真的没有错误啊，为啥答案就是不一样？然后找网上的答案，才发现完全可以直接两个 for 循环嵌套即可，完全没必要在搞个数组画蛇添足了，看了一下他们的代码，和我的想法一样啊为啥我的就是错的？整了半天终于找出了原因，因为我数组是从0开始赋值的，最后答案要加1就正确了。。。。</p><h4 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">end: <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">47</span>; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">3</span>; j &lt; <span class="number">49</span>; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (i * (i + <span class="number">1</span>) + j * (j + <span class="number">1</span>) - i - (i + <span class="number">1</span>) - j - (j + <span class="number">1</span>) == <span class="number">2015</span> - <span class="number">1225</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">10</span>) &#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(i);</span><br><span class="line"><span class="keyword">break</span> end;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="移动距离"><a href="#移动距离" class="headerlink" title="移动距离"></a>移动距离</h3><h4 id="题目-7"><a href="#题目-7" class="headerlink" title="题目"></a>题目</h4><p>X星球居民小区的楼房全是一样的，并且按矩阵样式排列。其楼房的编号为1,2,3…<br>当排满一行时，从下一行相邻的楼往反方向排号。<br>比如：当小区排号宽度为6时，开始情形如下：</p><p>1  2  3  4  5  6<br>12 11 10 9  8  7<br>13 14 15 …..</p><p>我们的问题是：已知了两个楼号m和n，需要求出它们之间的最短移动距离（不能斜线方向移动）</p><p>输入为3个整数w m n，空格分开，都在1到10000范围内<br>要求输出一个整数，表示m n 两楼间最短移动距离。</p><p>例如：<br>用户输入：<br>6 8 2<br>则，程序应该输出：<br>4</p><p>再例如：<br>用户输入：<br>4 7 20<br>则，程序应该输出：<br>5</p><p>资源约定：<br>峰值内存消耗（含虚拟机） &lt; 256M<br>CPU消耗  &lt; 1000ms</p><p>请严格按要求输出，不要画蛇添足地打印类似：“请您输入…” 的多余内容。</p><p>所有代码放在同一个源文件中，调试通过后，拷贝提交该源码。<br>注意：不要使用package语句。不要使用jdk1.7及以上版本的特性。<br>注意：主类的名字必须是：Main，否则按无效代码处理。</p><h4 id="思路-7"><a href="#思路-7" class="headerlink" title="思路"></a>思路</h4><p>这道题乍一看很简单，但是开始做之后就开始各种问题出现，我感觉不做过多解释了吧，这题需要去理解我就直接呈上我的代码了。</p><h4 id="代码-7"><a href="#代码-7" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Scanner s1 = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> w = s1.nextInt();</span><br><span class="line"><span class="keyword">int</span> m = s1.nextInt();</span><br><span class="line"><span class="keyword">int</span> n = s1.nextInt();</span><br><span class="line"><span class="keyword">int</span> cha = <span class="number">0</span>, newNum = <span class="number">0</span>, sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> max1 = initMax(w, Math.min(m, n));</span><br><span class="line"><span class="keyword">int</span> min1 = max1 - <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> max2 = initMax(w, Math.max(m, n));</span><br><span class="line"><span class="keyword">int</span> min2 = max2 - <span class="number">5</span>;</span><br><span class="line"><span class="keyword">if</span> (isJI(w, max1)) &#123;</span><br><span class="line">cha = Math.min(m, n) - min1;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">cha = max1 - Math.min(m, n);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (isJI(w, max2)) &#123;</span><br><span class="line">newNum = min2 + cha;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">newNum = max2 - cha;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(max1 + <span class="string">" "</span> + max2);</span><br><span class="line">System.out.println(Math.abs(Math.max(m, n) - newNum) + <span class="string">" "</span> + (max2 / max1 - <span class="number">1</span>));</span><br><span class="line">sum = Math.abs(Math.max(m, n) - newNum) + max2 / max1 - <span class="number">1</span>;</span><br><span class="line">System.out.println(sum);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">initMax</span><span class="params">(<span class="keyword">int</span> w, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> tmp = w;</span><br><span class="line"><span class="keyword">while</span> (w &lt; n) &#123;</span><br><span class="line">w += tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isJI</span><span class="params">(<span class="keyword">int</span> w, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (n / w % <span class="number">2</span> != <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="打印大X"><a href="#打印大X" class="headerlink" title="打印大X"></a>打印大X</h3><h4 id="题目-8"><a href="#题目-8" class="headerlink" title="题目"></a>题目</h4><p>小明希望用星号拼凑，打印出一个大X，他要求能够控制笔画的宽度和整个字的高度。<br>为了便于比对空格，所有的空白位置都以句点符来代替。</p><p>要求输入两个整数m n，表示笔的宽度，X的高度。用空格分开(0&lt;m&lt;n, 3&lt;n&lt;1000, 保证n是奇数)<br>要求输出一个大X</p><p>例如，用户输入：<br>3 9<br>程序应该输出：</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">***.....***</span><br><span class="line">.***...***.</span><br><span class="line">..***.***..</span><br><span class="line">...*****...</span><br><span class="line">....***....</span><br><span class="line">...*****...</span><br><span class="line">..***.***..</span><br><span class="line">.***...***.</span><br><span class="line">***.....***</span><br></pre></td></tr></table></figure><p>（如有对齐问题，参看【图1.jpg】）</p><p><img src="https://noahcodemonkey.top/images/img/2015%E5%B1%8A%E8%93%9D%E6%A1%A5%E6%9D%AFJavaC%E7%BB%84%E7%9C%81%E8%B5%9B%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88/%E5%9B%BE4.jpg" alt="诶呀,图片加载出了点问题!"></p><p>再例如，用户输入：<br>4 21<br>程序应该输出</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">****................****</span><br><span class="line">.****..............****.</span><br><span class="line">..****............****..</span><br><span class="line">...****..........****...</span><br><span class="line">....****........****....</span><br><span class="line">.....****......****.....</span><br><span class="line">......****....****......</span><br><span class="line">.......****..****.......</span><br><span class="line">........********........</span><br><span class="line">.........******.........</span><br><span class="line">..........****..........</span><br><span class="line">.........******.........</span><br><span class="line">........********........</span><br><span class="line">.......****..****.......</span><br><span class="line">......****....****......</span><br><span class="line">.....****......****.....</span><br><span class="line">....****........****....</span><br><span class="line">...****..........****...</span><br><span class="line">..****............****..</span><br><span class="line">.****..............****.</span><br><span class="line">****................****</span><br></pre></td></tr></table></figure><p>（如有对齐问题，参看【图2.jpg】）</p><p><img src="https://noahcodemonkey.top/images/img/2015%E5%B1%8A%E8%93%9D%E6%A1%A5%E6%9D%AFJavaC%E7%BB%84%E7%9C%81%E8%B5%9B%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88/%E5%9B%BE3.jpg" alt="诶呀,图片加载出了点问题!"></p><p>资源约定：<br>峰值内存消耗（含虚拟机） &lt; 256M<br>CPU消耗  &lt; 1000ms</p><p>请严格按要求输出，不要画蛇添足地打印类似：“请您输入…” 的多余内容。</p><p>所有代码放在同一个源文件中，调试通过后，拷贝提交该源码。<br>注意：不要使用package语句。不要使用jdk1.7及以上版本的特性。<br>注意：主类的名字必须是：Main，否则按无效代码处理。</p><h4 id="思路-8"><a href="#思路-8" class="headerlink" title="思路"></a>思路</h4><p>这种打印类型的题目都得靠找规律去完成，像本题因为他是一个上下对称图形，所以我们可以分开为上下两半完成即可，比赛中我们只需将所有精力放在上半部分，当我们把上半部分完成后就可以，下半部分只需要复制一下再改几个值即可。</p><h4 id="代码-8"><a href="#代码-8" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Scanner s1 = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="comment">// 笔的宽度</span></span><br><span class="line"><span class="keyword">int</span> m = s1.nextInt();</span><br><span class="line"><span class="comment">// x的高度</span></span><br><span class="line"><span class="keyword">int</span> n = s1.nextInt();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 列数</span></span><br><span class="line"><span class="keyword">int</span> y = m + n - <span class="number">1</span>;</span><br><span class="line"><span class="comment">// 上半段</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> a = <span class="number">0</span>; a &lt; (n + <span class="number">1</span>) / <span class="number">2</span>; a++) &#123;</span><br><span class="line"><span class="keyword">int</span> count = (y - <span class="number">2</span> * m) - a * <span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a; i++) &#123;</span><br><span class="line">System.out.print(<span class="string">"."</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">System.out.print(<span class="string">"*"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = count - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">System.out.print(<span class="string">"."</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (count &gt;= <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; y - (<span class="number">2</span> * a + m) - count; i++) &#123;</span><br><span class="line">System.out.print(<span class="string">"*"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; y - (<span class="number">2</span> * a + m); i++) &#123;</span><br><span class="line">System.out.print(<span class="string">"*"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a; i++) &#123;</span><br><span class="line">System.out.print(<span class="string">"."</span>);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 下半段</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> a = (n + <span class="number">1</span>) / <span class="number">2</span> - <span class="number">1</span>; a &gt;= <span class="number">0</span>; a--) &#123;</span><br><span class="line"><span class="keyword">int</span> count = (y - <span class="number">2</span> * m) - a * <span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a; i++) &#123;</span><br><span class="line">System.out.print(<span class="string">"."</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">System.out.print(<span class="string">"*"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = count - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">System.out.print(<span class="string">"."</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (count &gt;= <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; y - (<span class="number">2</span> * a + m) - count; i++) &#123;</span><br><span class="line">System.out.print(<span class="string">"*"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; y - (<span class="number">2</span> * a + m); i++) &#123;</span><br><span class="line">System.out.print(<span class="string">"*"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a; i++) &#123;</span><br><span class="line">System.out.print(<span class="string">"."</span>);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="垒骰子"><a href="#垒骰子" class="headerlink" title="垒骰子"></a>垒骰子</h3><h4 id="题目-9"><a href="#题目-9" class="headerlink" title="题目"></a>题目</h4><p>赌圣atm晚年迷恋上了垒骰子，就是把骰子一个垒在另一个上边，不能歪歪扭扭，要垒成方柱体。<br>经过长期观察，atm 发现了稳定骰子的奥秘：有些数字的面贴着会互相排斥！<br>我们先来规范一下骰子：1 的对面是 4，2 的对面是 5，3 的对面是 6。<br>假设有 m 组互斥现象，每组中的那两个数字的面紧贴在一起，骰子就不能稳定的垒起来。 atm想计算一下有多少种不同的可能的垒骰子方式。<br>两种垒骰子方式相同，当且仅当这两种方式中对应高度的骰子的对应数字的朝向都相同。<br>由于方案数可能过多，请输出模 10^9 + 7 的结果。</p><p>不要小看了 atm 的骰子数量哦～</p><p>「输入格式」<br>第一行两个整数 n m<br>n表示骰子数目<br>接下来 m 行，每行两个整数 a b ，表示 a 和 b 不能紧贴在一起。</p><p>「输出格式」<br>一行一个数，表示答案模 10^9 + 7 的结果。</p><p>「样例输入」<br>2 1<br>1 2</p><p>「样例输出」<br>544</p><p>「数据范围」<br>对于 30% 的数据：n &lt;= 5<br>对于 60% 的数据：n &lt;= 100<br>对于 100% 的数据：0 &lt; n &lt;= 10^9, m &lt;= 36</p><p>资源约定：<br>峰值内存消耗（含虚拟机） &lt; 256M<br>CPU消耗  &lt; 2000ms</p><p>请严格按要求输出，不要画蛇添足地打印类似：“请您输入…” 的多余内容。</p><p>所有代码放在同一个源文件中，调试通过后，拷贝提交该源码。<br>注意：不要使用package语句。不要使用jdk1.7及以上版本的特性。<br>注意：主类的名字必须是：Main，否则按无效代码处理。</p><h4 id="思路-9"><a href="#思路-9" class="headerlink" title="思路"></a>思路</h4><p>动态规划题。。。。不会不会不会，递归都有时候绕不出来的我，对动态规划充满了阴影，但没办法呀，去网上找资料死磕了。</p><h4 id="代码-9"><a href="#代码-9" class="headerlink" title="代码"></a>代码</h4><p>这题我选择先放放再刷其他题了，但在此处提供自认为写得很详细的一位博主的文章，有时间可以去看看研究。</p><p><a href="https://www.jianshu.com/p/425f146d4f5d" target="_blank" rel="noopener">JacobKong_Dev的简书</a></p>]]></content>
    
    <summary type="html">
    
      2015届蓝桥杯 Java C组 省赛试题及答案
    
    </summary>
    
      <category term="蓝桥杯" scheme="https://noahcodemonkey.top/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
      <category term="省赛" scheme="https://noahcodemonkey.top/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%9C%81%E8%B5%9B/"/>
    
      <category term="java" scheme="https://noahcodemonkey.top/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%9C%81%E8%B5%9B/java/"/>
    
    
      <category term="2015届" scheme="https://noahcodemonkey.top/tags/2015%E5%B1%8A/"/>
    
      <category term="蓝桥杯" scheme="https://noahcodemonkey.top/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
      <category term="Java" scheme="https://noahcodemonkey.top/tags/Java/"/>
    
      <category term="C组" scheme="https://noahcodemonkey.top/tags/C%E7%BB%84/"/>
    
      <category term="省赛" scheme="https://noahcodemonkey.top/tags/%E7%9C%81%E8%B5%9B/"/>
    
  </entry>
  
  <entry>
    <title>Unity 官方案例进阶--Roll a ball</title>
    <link href="https://noahcodemonkey.top/2018/11/15/Unity%E5%AE%98%E6%96%B9%E6%A1%88%E4%BE%8B%E8%BF%9B%E9%98%B6-Roll-a-ball/"/>
    <id>https://noahcodemonkey.top/2018/11/15/Unity官方案例进阶-Roll-a-ball/</id>
    <published>2018-11-15T12:17:06.000Z</published>
    <updated>2019-03-11T03:13:06.905Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><img src="https://noahcodemonkey.top/images/img/Unity官方案例进阶/header.png" alt="" style="width:100%"><p class="description">经过上一次的学习，我又想改进一下这款 Roll a ball 游戏，首先这款游戏只有胜利没有失败，所以我想定义一个条件来控制它的输赢，因此我想到了如下的方案：</p><p><strong>使我们的玩家控制 Player 在规定时间内达到一定的分数就胜利，反之则失败</strong></p><p></p><a id="more"></a><h2 id="任务目标"><a href="#任务目标" class="headerlink" title="任务目标"></a>任务目标</h2><p>这里只是大概的目标内容，还有一些细节会在后面完成的时候体现出来。</p><ol><li>完成 PickUp 的随机刷新出现，每隔3秒刷新一个</li><li>做一个倒计时器用于显示游戏剩余时间</li><li>控制分数和时间，若玩家在规定时间内达到分数则显示 You Win！字样，Player 禁止移动；若失败，则小球爆炸并显示 Game Over！ 字样。</li></ol><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>主体还是 Roll a ball 的内容，其中有一些小改动，我们在此完成一下。</p><h3 id="删除场景中的所有-PickUp"><a href="#删除场景中的所有-PickUp" class="headerlink" title="删除场景中的所有 PickUp"></a>删除场景中的所有 PickUp</h3><p>因为我们要完成的是随机刷新 PickUp 物体，所以我们不需要在场景中添加 PickUp 物体，到时候会用到一个新的知识来完成我们的随机显示 PickUp 物体的操作。</p><h3 id="添加倒计时文本"><a href="#添加倒计时文本" class="headerlink" title="添加倒计时文本"></a>添加倒计时文本</h3><p>因为我们需要让玩家知道游戏的剩余时间，所以我们需要添加一个用来显示时间的文本，位置我选择在了中间顶部的位置，其他设置随意。</p><h3 id="细节修改"><a href="#细节修改" class="headerlink" title="细节修改"></a>细节修改</h3><p>因为最终我们显示的文本不再是只有胜利，所以将我们之前创建的 WinText 改名为 ResultText。</p><h3 id="遗漏补充"><a href="#遗漏补充" class="headerlink" title="遗漏补充"></a>遗漏补充</h3><p>在官方的案例中，PickUp 是有一个黄色的材质，而我在之前做的项目中忘记添加了，所以我现在添加了一个黄色材质球给我们的 PickUp。</p><p><img src="https://noahcodemonkey.top/images/img/Unity%E5%AE%98%E6%96%B9%E6%A1%88%E4%BE%8B%E8%BF%9B%E9%98%B6/1.png" alt="诶呀，图片加载出了点问题！"></p><p>以上就是我们的环境搭建相关的操作，下面就要开始我们的脚本编写，来实现游戏的运行了。</p><h2 id="游戏运行"><a href="#游戏运行" class="headerlink" title="游戏运行"></a>游戏运行</h2><h3 id="修改以及准备"><a href="#修改以及准备" class="headerlink" title="修改以及准备"></a>修改以及准备</h3><p>我将 PlayerController 中除了将 Player 运动的脚本其余的都删除了。</p><p>脚本文件名：PlayerController</p><p>代码如下：</p><pre><code>using System.Collections;using System.Collections.Generic;using UnityEngine;public class PlayerController : MonoBehaviour {public float speed;private float moveHorizontal;private float moveVertical;private Vector3 movement;private void FixedUpdate(){    moveHorizontal = Input.GetAxis(&quot;Horizontal&quot;);    moveVertical = Input.GetAxis(&quot;Vertical&quot;);    movement = new Vector3(moveHorizontal, 0.0f, moveVertical);    GetComponent&lt;Rigidbody&gt;().AddForce(movement * speed * Time.deltaTime);}}</code></pre><p>我将剩下的代码贴在上方了，有不清楚的或者项目删除了的可以直接复制过去。</p><h3 id="创建-GameController-脚本"><a href="#创建-GameController-脚本" class="headerlink" title="创建 GameController 脚本"></a>创建 GameController 脚本</h3><p>还是在我们的 Player 物体上添加脚本取名为 GameController ，我定义它用来控制整个游戏的运行脚本，其实我们游戏的改变主要就是体现在此脚本的编写，所以当我们完成此脚本的编写也就意味着我们游戏的完成，废话不多说了下面我们就来完成它。</p><h3 id="删除补回"><a href="#删除补回" class="headerlink" title="删除补回"></a>删除补回</h3><p>因为我们将原来 PlayerController 脚本中除了控制小球运动的代码都删除了，所以需要先补充一下 Planyer 与 PickUp 的碰撞以及分数控制的相关代码，此时只是补回后面还会有更改。</p><p>脚本文件名：GameController</p><p>代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GameController</span> :</span> MonoBehaviour &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Text countText;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> count;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        count = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Start</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        SetCount();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnTriggerEnter</span><span class="params">(Collider other)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (other.gameObject.tag == <span class="string">"PickUp"</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Destroy(other.gameObject);</span><br><span class="line">            count++;</span><br><span class="line">            SetCount();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">SetCount</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        countText.text = <span class="string">"Count:"</span> + count;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="目标一：刷新-PickUp-物体"><a href="#目标一：刷新-PickUp-物体" class="headerlink" title="目标一：刷新 PickUp 物体"></a>目标一：刷新 PickUp 物体</h3><p>在此我们要完成的是<strong>让我们的 PickUp 物体在地面上的随机位置每3秒刷新一个</strong>。</p><p>这其中我们会用到几个新的知识，有需要的话最好还是去网上找找资料了解一下或者翻阅官网的API。</p><ol><li>Clone 克隆物体</li><li>Randam 随机类</li></ol><p>脚本文件名：GameController</p><p>代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GameController</span> :</span> MonoBehaviour &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Text countText;</span><br><span class="line">    <span class="comment">//用于添加 PickUp 物体，之后克隆要用</span></span><br><span class="line">    <span class="keyword">public</span> GameObject pickUp;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> count;</span><br><span class="line">    <span class="comment">//定义一个三维向量的值用于存储克隆物体的位置</span></span><br><span class="line">    <span class="keyword">private</span> Vector3 newPickUpPt;</span><br><span class="line">    <span class="comment">//定义一个需要等待克隆物体的时间，根据目标应该赋值为3</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> fireRate;</span><br><span class="line">    <span class="comment">//定义一个下一次克隆物体的时间</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> nextFire;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        count = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//给 fireRate 赋值，控制克隆物体的间隔时间</span></span><br><span class="line">        fireRate = <span class="number">3f</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Start</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        SetCount();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Update</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//判断游戏时间是否大于我们需要的它克隆的时间</span></span><br><span class="line">        <span class="keyword">if</span> (Time.time &gt; nextFire)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//计算下一次克隆时的时间</span></span><br><span class="line">            nextFire = Time.time + fireRate;</span><br><span class="line">            <span class="comment">//给我们的 PickUp 随机一个位置</span></span><br><span class="line">            newPickUpPt = <span class="keyword">new</span> Vector3(Random.Range(<span class="number">-8</span>, <span class="number">8</span>), <span class="number">1f</span>, Random.Range(<span class="number">-8</span>, <span class="number">8</span>));</span><br><span class="line">            <span class="comment">//这就是克隆的操作脚本了</span></span><br><span class="line">            <span class="comment">//Instantiate(需要克隆的物体，克隆物体的 Pothion 值，克隆物体的 Rotation值)</span></span><br><span class="line">            <span class="comment">//此处我们要克隆的物体是 PickUp，他的位置就是我们之前随机存储的那个位置，Quaternion.identity 的意思是与原物体的 Rotation 值保持不变</span></span><br><span class="line">            Instantiate(pickUp, newPickUpPt, Quaternion.identity);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnTriggerEnter</span><span class="params">(Collider other)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (other.gameObject.tag == <span class="string">"PickUp"</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Destroy(other.gameObject);</span><br><span class="line">            count++;</span><br><span class="line">            SetCount();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">SetCount</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        countText.text = <span class="string">"Count:"</span> + count;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>脚本我们现在就写完了，保存一下脚本，然后来到我们的 Unity 编辑器中，给我们 Player 物体中的 GameController 脚本中的 Player 物体添加一下，然后运行就可以看到 PickUp 开始有规律的创建了。</p><h3 id="控制倒计时器"><a href="#控制倒计时器" class="headerlink" title="控制倒计时器"></a>控制倒计时器</h3><p>做倒计时器又需要用到一个新的知识–协程，这个知识还是很重要的，最好先去翻阅些资料了解一下它。</p><p>脚本文件名：GameController</p><p>代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GameController</span> :</span> MonoBehaviour &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Text countText;</span><br><span class="line">    <span class="comment">//用于添加时间 Text 物体</span></span><br><span class="line">    <span class="keyword">public</span> Text timeText;</span><br><span class="line">    <span class="comment">//用于添加 PickUp 物体，之后克隆要用</span></span><br><span class="line">    <span class="keyword">public</span> GameObject pickUp;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> count;</span><br><span class="line">    <span class="comment">//定义一个三维向量的值用于存储克隆物体的位置</span></span><br><span class="line">    <span class="keyword">private</span> Vector3 newPickUpPt;</span><br><span class="line">    <span class="comment">//定义一个需要等待克隆物体的时间，根据目标应该赋值为3</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> fireRate;</span><br><span class="line">    <span class="comment">//定义一个下一次克隆物体的时间</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> nextFire;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> time;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        count = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//给 fireRate 赋值，控制克隆物体的间隔时间</span></span><br><span class="line">        fireRate = <span class="number">3f</span>;</span><br><span class="line">        time = <span class="number">8</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Start</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        SetCount();</span><br><span class="line">        <span class="comment">//开始我们的协程</span></span><br><span class="line">        StartCoroutine(Timer());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> IEnumerator <span class="title">Timer</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//定义一个循环，条件为要time&gt;0</span></span><br><span class="line">        <span class="keyword">while</span> (time &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//间隔1秒继续执行一下代码</span></span><br><span class="line">            <span class="function">yield <span class="keyword">return</span> <span class="keyword">new</span> <span class="title">WaitForSeconds</span><span class="params">(<span class="number">1</span>)</span></span>;</span><br><span class="line">            <span class="comment">//time自减1</span></span><br><span class="line">            time--;</span><br><span class="line">            <span class="comment">//更新我们的时间文本</span></span><br><span class="line">            SetTime();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//结束我们的协程</span></span><br><span class="line">        StopCoroutine(Timer());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Update</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//判断游戏时间是否大于我们需要的它克隆的时间</span></span><br><span class="line">        <span class="keyword">if</span> (Time.time &gt; nextFire)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//计算下一次克隆时的时间</span></span><br><span class="line">            nextFire = Time.time + fireRate;</span><br><span class="line">            <span class="comment">//给我们的 PickUp 随机一个位置</span></span><br><span class="line">            newPickUpPt = <span class="keyword">new</span> Vector3(Random.Range(<span class="number">-8</span>, <span class="number">8</span>), <span class="number">1f</span>, Random.Range(<span class="number">-8</span>, <span class="number">8</span>));</span><br><span class="line">            <span class="comment">//这就是克隆的操作脚本了</span></span><br><span class="line">            <span class="comment">//Instantiate(需要克隆的物体，克隆物体的 Pothion 值，克隆物体的 Rotation值)</span></span><br><span class="line">            <span class="comment">//此处我们要克隆的物体是 PickUp，他的位置就是我们之前随机存储的那个位置，Quaternion.identity 的意思是与原物体的 Rotation 值保持不变</span></span><br><span class="line">            Instantiate(pickUp, newPickUpPt, Quaternion.identity);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnTriggerEnter</span><span class="params">(Collider other)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (other.gameObject.tag == <span class="string">"PickUp"</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Destroy(other.gameObject);</span><br><span class="line">            count++;</span><br><span class="line">            SetCount();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">SetCount</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        countText.text = <span class="string">"Count:"</span> + count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">SetTime</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        timeText.text = time.ToString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="控制结果"><a href="#控制结果" class="headerlink" title="控制结果"></a>控制结果</h3><p>方法挺多的，可以自己想想怎么去完成。</p><p>脚本文件名：GameController</p><p>代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GameController</span> :</span> MonoBehaviour &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Text countText;</span><br><span class="line">    <span class="comment">//用于添加时间 Text 物体</span></span><br><span class="line">    <span class="keyword">public</span> Text timeText;</span><br><span class="line">    <span class="keyword">public</span> Text resultText;</span><br><span class="line">    <span class="comment">//用于添加 PickUp 物体，之后克隆要用</span></span><br><span class="line">    <span class="keyword">public</span> GameObject pickUp;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> count;</span><br><span class="line">    <span class="comment">//定义一个三维向量的值用于存储克隆物体的位置</span></span><br><span class="line">    <span class="keyword">private</span> Vector3 newPickUpPt;</span><br><span class="line">    <span class="comment">//定义一个需要等待克隆物体的时间，根据目标应该赋值为3</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> fireRate;</span><br><span class="line">    <span class="comment">//定义一个下一次克隆物体的时间</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> nextFire;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> time;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        count = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//给 fireRate 赋值，控制克隆物体的间隔时间</span></span><br><span class="line">        fireRate = <span class="number">3f</span>;</span><br><span class="line">        time = <span class="number">8</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Start</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        SetCount();</span><br><span class="line">        <span class="comment">//开始我们的协程</span></span><br><span class="line">        StartCoroutine(Timer());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> IEnumerator <span class="title">Timer</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//定义一个循环，条件为要time&gt;0</span></span><br><span class="line">        <span class="keyword">while</span> (time &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//间隔1秒继续执行一下代码</span></span><br><span class="line">            <span class="function">yield <span class="keyword">return</span> <span class="keyword">new</span> <span class="title">WaitForSeconds</span><span class="params">(<span class="number">1</span>)</span></span>;</span><br><span class="line">            <span class="comment">//time自减1</span></span><br><span class="line">            time--;</span><br><span class="line">            <span class="comment">//更新我们的时间文本</span></span><br><span class="line">            SetTime();</span><br><span class="line">            <span class="comment">//调用我们创建的控制结果函数</span></span><br><span class="line">            <span class="keyword">if</span> (time &lt;= <span class="number">0</span> &amp;&amp; count &lt; <span class="number">2</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                resultText.text = <span class="string">"Game Over!"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (count &gt;= <span class="number">2</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                resultText.text = <span class="string">"You Win!"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//结束我们的协程</span></span><br><span class="line">        StopCoroutine(Timer());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Update</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//判断游戏时间是否大于我们需要的它克隆的时间</span></span><br><span class="line">        <span class="keyword">if</span> (Time.time &gt; nextFire &amp;&amp; time &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//计算下一次克隆时的时间</span></span><br><span class="line">            nextFire = Time.time + fireRate;</span><br><span class="line">            <span class="comment">//给我们的 PickUp 随机一个位置</span></span><br><span class="line">            newPickUpPt = <span class="keyword">new</span> Vector3(Random.Range(<span class="number">-8</span>, <span class="number">8</span>), <span class="number">1f</span>, Random.Range(<span class="number">-8</span>, <span class="number">8</span>));</span><br><span class="line">            <span class="comment">//这就是克隆的操作脚本了</span></span><br><span class="line">            <span class="comment">//Instantiate(需要克隆的物体，克隆物体的 Pothion 值，克隆物体的 Rotation值)</span></span><br><span class="line">            <span class="comment">//此处我们要克隆的物体是 PickUp，他的位置就是我们之前随机存储的那个位置，Quaternion.identity 的意思是与原物体的 Rotation 值保持不变</span></span><br><span class="line">            Instantiate(pickUp, newPickUpPt, Quaternion.identity);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnTriggerEnter</span><span class="params">(Collider other)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (other.gameObject.tag == <span class="string">"PickUp"</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Destroy(other.gameObject);</span><br><span class="line">            count++;</span><br><span class="line">            SetCount();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">SetCount</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        countText.text = <span class="string">"Count:"</span> + count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">SetTime</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        timeText.text = time.ToString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="游戏的完善"><a href="#游戏的完善" class="headerlink" title="游戏的完善"></a>游戏的完善</h3><p>这是我们此游戏的最后部分，用于完善一些游戏中缺乏的地方，也添加了一些比较有意思的东西，来使游戏更加具有趣味性。</p><h4 id="完善物体的克隆创建"><a href="#完善物体的克隆创建" class="headerlink" title="完善物体的克隆创建"></a>完善物体的克隆创建</h4><p>当游戏结束时，我们的克隆还在不停操作，这是我们不愿意看到的，所以接下来我们来完善它。</p><p>其实完善很简单，只需在我们克隆创建操作的 if 判断中添加条件就可以了。</p><p>脚本文件名：GameController</p><p>代码如下：</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> void Update()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//判断游戏时间是否大于我们需要的它克隆的时间</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">Time</span>.<span class="built_in">time</span> &gt; nextFire &amp;&amp; <span class="built_in">time</span> &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//计算下一次克隆时的时间</span></span><br><span class="line">            nextFire = <span class="built_in">Time</span>.<span class="built_in">time</span> + fireRate;</span><br><span class="line">            <span class="comment">//给我们的 PickUp 随机一个位置</span></span><br><span class="line">            newPickUpPt = new Vector3(<span class="built_in">Random</span>.Range(-<span class="number">8</span>, <span class="number">8</span>), <span class="number">1</span>f, <span class="built_in">Random</span>.Range(-<span class="number">8</span>, <span class="number">8</span>));</span><br><span class="line">            <span class="comment">//这就是克隆的操作脚本了</span></span><br><span class="line">            <span class="comment">//Instantiate(需要克隆的物体，克隆物体的 Pothion 值，克隆物体的 Rotation值)</span></span><br><span class="line">            <span class="comment">//此处我们要克隆的物体是 PickUp，他的位置就是我们之前随机存储的那个位置，Quaternion.identity 的意思是与原物体的 Rotation 值保持不变</span></span><br><span class="line">            Instantiate(pickUp, newPickUpPt, Quaternion.identity);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="完善倒计时器"><a href="#完善倒计时器" class="headerlink" title="完善倒计时器"></a>完善倒计时器</h4><p>当我们游戏胜利后会发现我们的倒计时器依旧还在运行，所以这是有问题的，因此接下来我们就来完善它。</p><p>来到我们打代码，会发现我们的游戏胜利放在了倒计时器中的循环中，因此只要当我们胜利之后添加一个 个 Break 语句跳出循环就可以完成我们的倒计时停止的操作了。</p><p>脚本文件名：GmaeController</p><p>代买如下：</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> IEnumerator Timer()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//定义一个循环，条件为要time&gt;0</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="built_in">time</span> &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//间隔1秒继续执行一下代码</span></span><br><span class="line">            yield return new WaitForSeconds(<span class="number">1</span>);</span><br><span class="line">            <span class="comment">//time自减1</span></span><br><span class="line">            <span class="built_in">time</span>--;</span><br><span class="line">            <span class="comment">//更新我们的时间文本</span></span><br><span class="line">            SetTime();</span><br><span class="line">            <span class="comment">//调用我们创建的控制结果函数</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">time</span> &lt;= <span class="number">0</span> &amp;&amp; <span class="built_in">count</span> &lt; <span class="number">2</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                resultText.<span class="built_in">text</span> = <span class="string">"Game Over!"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">count</span> &gt;= <span class="number">2</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                resultText.<span class="built_in">text</span> = <span class="string">"You Win!"</span>;</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//结束我们的协程</span></span><br><span class="line">        StopCoroutine(Timer());</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>写完代码后运行，然后完成我们的两个小球的条件后，会发现我们的倒计时停止了，耶！完成啦！但是我们又会惊喜的发现刚完成的游戏结束后停止创建物体的任务并没有完善，我们只考虑到了游戏失败时停止创建，若当游戏胜利结束时并没有考虑到，所以我们又要回过头来重新完善我们之前的任务。</p><h4 id="补：完善物体的克隆创建"><a href="#补：完善物体的克隆创建" class="headerlink" title="补：完善物体的克隆创建"></a>补：完善物体的克隆创建</h4><p>要完善其实也很简单，只需要在我们创建的条件中再添加一个 Count 要小于我们的目标值就可以了。</p><p>脚本文件名： GameController</p><p>代码如下：</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> void Update()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//判断游戏时间是否大于我们需要的它克隆的时间</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">Time</span>.<span class="built_in">time</span> &gt; nextFire &amp;&amp; <span class="built_in">time</span> &gt; <span class="number">0</span> &amp;&amp; <span class="built_in">count</span> &lt; <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//计算下一次克隆时的时间</span></span><br><span class="line">            nextFire = <span class="built_in">Time</span>.<span class="built_in">time</span> + fireRate;</span><br><span class="line">            <span class="comment">//给我们的 PickUp 随机一个位置</span></span><br><span class="line">            newPickUpPt = new Vector3(<span class="built_in">Random</span>.Range(-<span class="number">8</span>, <span class="number">8</span>), <span class="number">1</span>f, <span class="built_in">Random</span>.Range(-<span class="number">8</span>, <span class="number">8</span>));</span><br><span class="line">            <span class="comment">//这就是克隆的操作脚本了</span></span><br><span class="line">            <span class="comment">//Instantiate(需要克隆的物体，克隆物体的 Pothion 值，克隆物体的 Rotation值)</span></span><br><span class="line">            <span class="comment">//此处我们要克隆的物体是 PickUp，他的位置就是我们之前随机存储的那个位置，Quaternion.identity 的意思是与原物体的 Rotation 值保持不变</span></span><br><span class="line">            Instantiate(pickUp, newPickUpPt, Quaternion.identity);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="趣味添加：游戏失败小球爆炸效果"><a href="#趣味添加：游戏失败小球爆炸效果" class="headerlink" title="趣味添加：游戏失败小球爆炸效果"></a>趣味添加：游戏失败小球爆炸效果</h4><p>爆炸效果是从网上找的，在此感谢<strong>TPMer</strong>博主提供，爆炸效果需要用到的素材请到他的CSDN博客最底处下载。</p><p><a href="https://blog.csdn.net/six_sex/article/details/72857295" target="_blank" rel="noopener">TPMerd的CSDN博客</a></p><p>素材下载完成后记住他的下载位置当我们导入时需要用到，再打开我们的 Unity 编辑器在菜单栏中的 Assets 中找到 Import Package 再选择 Custom Package 选项来添加我们的素材，找到我们之前下载的素材包打开，在 Import Unity Package 界面中，我们勾去第一个 000.unity 场景文件后选择右下角的 Import 选项添加我们的素材。</p><p><img src="https://noahcodemonkey.top/images/img/Unity%E5%AE%98%E6%96%B9%E6%A1%88%E4%BE%8B%E8%BF%9B%E9%98%B6/2.png" alt="诶呀，图片加载出了点问题！"></p><p>然后编辑我们的脚本文件来完成我们的小球爆炸效果。</p><p>脚本文件名：GameController</p><p>代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GameController</span> :</span> MonoBehaviour &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Text countText;</span><br><span class="line">    <span class="comment">//用于添加时间 Text 物体</span></span><br><span class="line">    <span class="keyword">public</span> Text timeText;</span><br><span class="line">    <span class="keyword">public</span> Text resultText;</span><br><span class="line">    <span class="comment">//用于添加 PickUp 物体，之后克隆要用</span></span><br><span class="line">    <span class="keyword">public</span> GameObject pickUp;</span><br><span class="line">    <span class="comment">//用于添加我们的爆炸物体</span></span><br><span class="line">    <span class="keyword">public</span> GameObject Bang;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> count;</span><br><span class="line">    <span class="comment">//定义一个三维向量的值用于存储克隆物体的位置</span></span><br><span class="line">    <span class="keyword">private</span> Vector3 newPickUpPt;</span><br><span class="line">    <span class="comment">//定义一个需要等待克隆物体的时间，根据目标应该赋值为3</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> fireRate;</span><br><span class="line">    <span class="comment">//定义一个下一次克隆物体的时间</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> nextFire;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> time;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        count = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//给 fireRate 赋值，控制克隆物体的间隔时间</span></span><br><span class="line">        fireRate = <span class="number">3f</span>;</span><br><span class="line">        time = <span class="number">8</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Start</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        SetCount();</span><br><span class="line">        <span class="comment">//开始我们的协程</span></span><br><span class="line">        StartCoroutine(Timer());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> IEnumerator <span class="title">Timer</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//定义一个循环，条件为要time&gt;0</span></span><br><span class="line">        <span class="keyword">while</span> (time &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//间隔1秒继续执行一下代码</span></span><br><span class="line">            <span class="function">yield <span class="keyword">return</span> <span class="keyword">new</span> <span class="title">WaitForSeconds</span><span class="params">(<span class="number">1</span>)</span></span>;</span><br><span class="line">            <span class="comment">//time自减1</span></span><br><span class="line">            time--;</span><br><span class="line">            <span class="comment">//更新我们的时间文本</span></span><br><span class="line">            SetTime();</span><br><span class="line">            <span class="comment">//调用我们创建的控制结果函数</span></span><br><span class="line">            <span class="keyword">if</span> (time &lt;= <span class="number">0</span> &amp;&amp; count &lt; <span class="number">2</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                resultText.text = <span class="string">"Game Over!"</span>;</span><br><span class="line">                <span class="comment">//将 Player 物体销毁</span></span><br><span class="line">                Destroy(<span class="keyword">this</span>.gameObject);</span><br><span class="line">                <span class="comment">//克隆我们的爆炸物体来代替我们的 Player 物体</span></span><br><span class="line">                Instantiate(Bang, <span class="keyword">this</span>.transform.position, <span class="keyword">this</span>.transform.rotation);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (count &gt;= <span class="number">2</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                resultText.text = <span class="string">"You Win!"</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//结束我们的协程</span></span><br><span class="line">        StopCoroutine(Timer());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Update</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//判断游戏时间是否大于我们需要的它克隆的时间</span></span><br><span class="line">        <span class="keyword">if</span> (Time.time &gt; nextFire &amp;&amp; time &gt; <span class="number">0</span> &amp;&amp; count &lt; <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//计算下一次克隆时的时间</span></span><br><span class="line">            nextFire = Time.time + fireRate;</span><br><span class="line">            <span class="comment">//给我们的 PickUp 随机一个位置</span></span><br><span class="line">            newPickUpPt = <span class="keyword">new</span> Vector3(Random.Range(<span class="number">-8</span>, <span class="number">8</span>), <span class="number">1f</span>, Random.Range(<span class="number">-8</span>, <span class="number">8</span>));</span><br><span class="line">            <span class="comment">//这就是克隆的操作脚本了</span></span><br><span class="line">            <span class="comment">//Instantiate(需要克隆的物体，克隆物体的 Pothion 值，克隆物体的 Rotation值)</span></span><br><span class="line">            <span class="comment">//此处我们要克隆的物体是 PickUp，他的位置就是我们之前随机存储的那个位置，Quaternion.identity 的意思是与原物体的 Rotation 值保持不变</span></span><br><span class="line">            Instantiate(pickUp, newPickUpPt, Quaternion.identity);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnTriggerEnter</span><span class="params">(Collider other)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (other.gameObject.tag == <span class="string">"PickUp"</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Destroy(other.gameObject);</span><br><span class="line">            count++;</span><br><span class="line">            SetCount();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">SetCount</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        countText.text = <span class="string">"Count:"</span> + count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">SetTime</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        timeText.text = time.ToString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当我们将脚本写完保存后，打开 Unity 编辑器在我们的 Player 物体中 GameController 脚本下方的 Bang 处添加我们 Prefabs 文件下的爆炸文件后运行，当我们游戏结束时会发现我们的 Player 物体爆炸了，但是我们下方会有红色文字报错。</p><p><img src="https://noahcodemonkey.top/images/img/Unity%E5%AE%98%E6%96%B9%E6%A1%88%E4%BE%8B%E8%BF%9B%E9%98%B6/3.png" alt="诶呀，图片加载出了点问题！"></p><p>它的意思大体为 <strong>物体已经被销毁了，但是游戏依旧还在使用它</strong> ，然后在找到下面的提示可以看到问题出现在了我们的 CameraController 文件中的第18行，我们顺着找过去看到的是我们用来使我们的相机位置为 Player 位置加上一个固定值的代码，找到了病因我们就去解决了。</p><p>脚本文件名：CameraController</p><p>代码如下：</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CameraController</span> : <span class="title">MonoBehaviour</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> GameObject player;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Vector3 offset;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        offset = transform.position - player.transform.position;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> != player)</span><br><span class="line">        &#123;</span><br><span class="line">            transform.position = player.transform.position + offset;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解决方法很简单就是将我们的相机位置代码放在一个 if 判断语句中就行了，判断的条件就是我们的 Player 物体存在就行了。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>以上就是这篇文章中的所有内容了，因为本人还是新手所以在很多内容上理解可能很不准确或者错误的，希望各位朋友能像我提出，我一定会悉心学习并改正的，我也会努力让自己与目标更加靠近的！！！</p><p><strong>欢迎大家收藏我的博客，我会努力更新更多的作品的，给自己加个油！</strong></p>]]></content>
    
    <summary type="html">
    
      Unity官方案例进阶--Roll a ball
    
    </summary>
    
      <category term="教程" scheme="https://noahcodemonkey.top/categories/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Unity" scheme="https://noahcodemonkey.top/categories/%E6%95%99%E7%A8%8B/Unity/"/>
    
      <category term="官方案例进阶" scheme="https://noahcodemonkey.top/categories/%E6%95%99%E7%A8%8B/Unity/%E5%AE%98%E6%96%B9%E6%A1%88%E4%BE%8B%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="Unity" scheme="https://noahcodemonkey.top/tags/Unity/"/>
    
      <category term="官方案例" scheme="https://noahcodemonkey.top/tags/%E5%AE%98%E6%96%B9%E6%A1%88%E4%BE%8B/"/>
    
      <category term="Roll a ball" scheme="https://noahcodemonkey.top/tags/Roll-a-ball/"/>
    
      <category term="进阶" scheme="https://noahcodemonkey.top/tags/%E8%BF%9B%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>Unity官方案例--Roll a ball</title>
    <link href="https://noahcodemonkey.top/2018/11/15/Unity%E5%AE%98%E6%96%B9%E6%A1%88%E4%BE%8B-Roll-a-ball/"/>
    <id>https://noahcodemonkey.top/2018/11/15/Unity官方案例-Roll-a-ball/</id>
    <published>2018-11-15T12:12:30.000Z</published>
    <updated>2019-03-11T03:13:11.163Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><img src="https://noahcodemonkey.top/images/img/Unity官方案例/header.png" alt="" style="width:100%"><p class="description">现在的我还是一名 Unity3d 游戏开发初学者，所以现在都在围绕 Unity3d 的官方案例来做练习，为此写下一些文章作为笔记，文章中难免会有一些疏漏，有些不当之处还望指正。</p><a id="more"></a><h2 id="项目简介"><a href="#项目简介" class="headerlink" title="项目简介"></a>项目简介</h2><p>首先玩家可以控制一个小球，去吃那些悬浮在平面上的小方块，全部吃玩就游戏结束了，是一个很简单的小游戏。</p><h2 id="创建工程"><a href="#创建工程" class="headerlink" title="创建工程"></a>创建工程</h2><p>首先我们创建一个空的工程</p><p><img src="https://noahcodemonkey.top/images/img/Unity%E5%AE%98%E6%96%B9%E6%A1%88%E4%BE%8B/1.png" alt="诶呀，图片加载出了点问题！"></p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><h3 id="创建地面"><a href="#创建地面" class="headerlink" title="创建地面"></a>创建地面</h3><p>在 Hierarchy 界面中右键选择 3D Object 中的 Plane 创建一个地面，其中将他 Inspector 界面中的 Scale(X:2,Y:1,Z:2)使地面扩大一下，这里需要让大家养成一个好的习惯就是<strong>物体的需要命名并且要有意义</strong>，所以我将我们的 Plan物体名改为 Ground。</p><p><img src="https://noahcodemonkey.top/images/img/Unity%E5%AE%98%E6%96%B9%E6%A1%88%E4%BE%8B/2.png" alt="诶呀，图片加载出了点问题！"></p><h3 id="给地面添加材质"><a href="#给地面添加材质" class="headerlink" title="给地面添加材质"></a>给地面添加材质</h3><p>但由于这地面太白了，再加上默认的灯光效果很亮表现得很刺眼，所以我给地面添加了一个黑色的材质，这里有需要大家养成一个<strong>文件分类</strong>的好习惯，所以我在我们的 Assets 文件夹中新建了一个 Materials 文件夹用来存放我们需要用到的材质文件，选中 Materials 文件夹后右键选择 Create 选项中选择 Material 就可以创建一个材质文件了，我将它改名为 Ground，其中在他的 Inspector 界面中将 Main Maps 中的 Albedo 的颜色调整为黑色，最后只需将这个材质文件拖到我们场景中的地面上即可。</p><p><img src="https://noahcodemonkey.top/images/img/Unity%E5%AE%98%E6%96%B9%E6%A1%88%E4%BE%8B/3.png" alt="诶呀，图片加载出了点问题！"></p><h3 id="添加墙"><a href="#添加墙" class="headerlink" title="添加墙"></a>添加墙</h3><p>在 Hierarchy 界面中右键选择 3D Object 中的 Cube 来创建四周的墙，其中在它们的 Inspector 界面中都设置 Scale(X:21,Y:1,Z:1)，它们的位置分别设置为</p><p>Wall[Positon(X:0,Y:0,Z:10)],</p><p>Wall1[Positon(X:0,Y:0,Z:-10)],</p><p>Wall2[Position(X:10,Y:0,Z:0),Rotation(X:0,Y:90,Z:0)],</p><p>Wall3[Position(X:-10,Y:0,Z:0),Rotation(X:0,Y:90,Z:0)]</p><p>这里又有一点需要大家养成的习惯就是<strong>若有相同的物体应该创建一个空的物体将他们都存放在你里面</strong>，所以我在 Hierarchy 中创建了一个空的物体改名为 Walls 将这四个墙存放在其中。</p><p><img src="https://noahcodemonkey.top/images/img/Unity%E5%AE%98%E6%96%B9%E6%A1%88%E4%BE%8B/4.png" alt="诶呀，图片加载出了点问题！"></p><h3 id="设置摄像机"><a href="#设置摄像机" class="headerlink" title="设置摄像机"></a>设置摄像机</h3><p>选择我们场景中的 Main Camera 设置它的 Position(X:0,Y:10,Z:-10),Rotation(X:45,Y:0,Z:0)即可。</p><p><img src="https://noahcodemonkey.top/images/img/Unity%E5%AE%98%E6%96%B9%E6%A1%88%E4%BE%8B/5.png" alt="诶呀，图片加载出了点问题！"></p><h3 id="添加-Player"><a href="#添加-Player" class="headerlink" title="添加 Player"></a>添加 Player</h3><p>在 Hierarchy 界面中右键选择 3D Object 中选择 Sphere 将它改名为 Player，设置它的 Position(X:0,Y:0.5,Z:0)</p><p><img src="https://noahcodemonkey.top/images/img/Unity%E5%AE%98%E6%96%B9%E6%A1%88%E4%BE%8B/6.png" alt="诶呀，图片加载出了点问题！"></p><h3 id="添加-Pick-Up"><a href="#添加-Pick-Up" class="headerlink" title="添加 Pick Up"></a>添加 Pick Up</h3><p>在 Hierarchy 界面中右键选择 3D Object 中选择 Cube 将他改名为 Pickup ，其中几个比较关键的设置是 Position 的y的值最好要大于1因为过低 他会卡在地面里，Rotation(X:45,Y:45,Z:45)，还有一个特别关键的就是将 Box Collider 中的 Is Trigger 勾上，它的作用是做触发器，简单来说就是就是当两个物体发生碰撞不产生碰撞效果，但会触发碰撞事件(如果还不能理解，自己在 Unity 中实验一下)，然后就是多创建几个 Pick Up 位置你们随便放，不过这里也有一个方法方便我们创建多个相同的物体并且还可以同步之后需要更改的设置，那就是创建 Prefab。我们在 Assets 文件夹中创建一个 Prefabs 文件夹，将我们创建的 Pickup物体拖至此文件夹，当我们看到 Pickup 物体的名称变蓝后，这就意味着我们的 prefab 创建完成，当我们需要创建 Pickup 物体时，现在只需将 prefab 中的 Pickup 拖至我们的场景中即可创建，然后就是创建一个空的物体改名为 Pickups 用来存放我们创建的 Pickup 。</p><p><img src="https://noahcodemonkey.top/images/img/Unity%E5%AE%98%E6%96%B9%E6%A1%88%E4%BE%8B/7.png" alt="诶呀，图片加载出了点问题！"></p><p>在 Inspector 界面中找到 Tag 选项后单机再选择选项中最下方的 Add Tag… 后会来到我们的 Tags &amp; Layers 界面，在下方会看见一个 + 标志后单机在输入框中输入 PickUp 后选择 Sa7e 后即可添加标签</p><p><img src="https://noahcodemonkey.top/images/img/Unity%E5%AE%98%E6%96%B9%E6%A1%88%E4%BE%8B/8.png" alt="诶呀，图片加载出了点问题！"></p><h3 id="添加-UI"><a href="#添加-UI" class="headerlink" title="添加 UI"></a>添加 UI</h3><p>在 Hierarchy 界面中右键选择 UI 后再选择 Text 选项就可以添加我们的 UI 了，我们将创建出来的 Text 文件改名为 CountText，我们可以在 Inspector 界面中的 Text(Script) 中调整文字内容、字体、字体大小、颜色等多种属性，我们必须要做的是将文本默认的内容给删掉就行了，其他的设置看自己喜好了，但我们要将它至于界面的左上角该如何操作呢？我们可以在 Rect Transform 中看到一个田字格，我们单机一下它就会出现很多位置选项，但是并没有我们所需要的左上角，这时候我们只需要一直按住键盘上的 Alt 键就会发现上面的位置选项发生了变化，之后就可以很明显的看到左上角的选项然后我们选择它就可以了，然后在 Canvas 文件夹下在创建一个 Text 改名为 WinText 用来存储我们的胜利文本的，也要将文本内容删去，位置居中默认就行了，其他设置自定义。</p><p><img src="https://noahcodemonkey.top/images/img/Unity%E5%AE%98%E6%96%B9%E6%A1%88%E4%BE%8B/9.png" alt="诶呀，图片加载出了点问题！"></p><h2 id="游戏运行"><a href="#游戏运行" class="headerlink" title="游戏运行"></a>游戏运行</h2><p>从这儿起就要开始我们的脚本编写了，现在 Unity3D 主流脚本编辑语言是 <strong>C#</strong>，不过像我现在用的 Unity 3D 2018.2的版本脚本语言只剩下了 C#，所以推荐大家写脚本还是用 C# 来编写，学过的朋友理解起来就很方便了，没学过的朋友可以从网上找找相关教学视频了解一下，不过有一点编程经验的其实理解起来还是很简单的，我会在下面脚本中写下相应注释的，方便一些初学者理解的。</p><p>Unity官方有一个脚本文档，在遇到什么不懂得问题或者需要完成什么操作脚本忘了怎么写时可以进行查阅。</p><p><a href="https://docs.unity3d.com/ScriptReference/index.html" target="_blank" rel="noopener">Unity官方脚本文档</a></p><h3 id="Player-的移动"><a href="#Player-的移动" class="headerlink" title="Player 的移动"></a>Player 的移动</h3><p>选择我们的 Player 物体文件，在 Inspector 的下方点击 Add Component 在其中的输入框中输入 Rigidbody 回车确定选择，即可给我们的 Player物体添加刚体组件，刚体组件的用处就是给物体添加物理属性的，其中我们将 Angular Drag 的值改为0，意思是取消小球的摩擦力。</p><p><img src="https://noahcodemonkey.top/images/img/Unity%E5%AE%98%E6%96%B9%E6%A1%88%E4%BE%8B/10.png" alt="诶呀，图片加载出了点问题！"></p><p>还是点击 Add Component 在输入框中输入 PlayerController 选择 New script 再点击下方的 Create and Add 即可给我们的 Player 挂载脚本了，然后我在我们的 Assets 文件夹中创建一个 Scripts 文件夹用来存储我们游戏中的所有用到的脚本文件，将我们刚刚创建的脚本文件拖进此文件夹。</p><p><img src="https://noahcodemonkey.top/images/img/Unity%E5%AE%98%E6%96%B9%E6%A1%88%E4%BE%8B/11.png" alt="诶呀，图片加载出了点问题！"></p><p>双击我们的脚本文件，就打开了我们默认的脚本编辑器来编辑我们的脚本，我使用的是 visual studio 2017。</p><p><img src="https://noahcodemonkey.top/images/img/Unity%E5%AE%98%E6%96%B9%E6%A1%88%E4%BE%8B/12.png" alt="诶呀，图片加载出了点问题！"></p><p>下面就开始编辑我们的脚本，来完成小球 Player 的移动。</p><p>脚本文件名：PlayerController</p><p>代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PlayerController</span> :</span> MonoBehaviour &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//public 公共的，会使此变量显示在 unity 编辑器中方便我们调节数值</span></span><br><span class="line"><span class="comment">//此处定义一个 speed 变量是为了控制 Player 的运动速度</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">float</span> speed;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">FixedUpdate</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//获取横向要使 Player 位移的量</span></span><br><span class="line">    <span class="keyword">float</span> moveHorizontal = Input.GetAxis(<span class="string">"Horizontal"</span>);</span><br><span class="line">    <span class="comment">//获取纵向要使 Player 位移的量</span></span><br><span class="line">    <span class="keyword">float</span> moveVertical = Input.GetAxis(<span class="string">"Vertical"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义一个新的三维向量，来确定 Player 的运行方向</span></span><br><span class="line">    Vector3 movement = <span class="keyword">new</span> Vector3(moveHorizontal, <span class="number">0.0f</span>, moveVertical);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//给 Player 添加一个力使其运动，力的大小我们可以在 Unity 编辑器中编辑</span></span><br><span class="line">    <span class="comment">//这里再乘以一个Time.deltaTime是为了使 Player 完成的是每秒移动 speed 米，而不是每帧 speed 米，你们可以试试将这个Time.detalTime删去后 Player 的运行效果</span></span><br><span class="line">    GetComponent&lt;Rigidbody&gt;().AddForce(movement * Time.deltaTime * speed);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>脚本写完后记得保存一下，再来到我们的 Unity 编辑器中，选择 Player 物体后你会发现在脚本中多出来一个 Speed 项，这就是我们之前定义它为 public 公共项的作用了，我们将他设置值为120，然后点击 Unity 编辑器上方的播放按钮运行，之后我们就可以按 W、A、S、D 键来控制我们的 Player 运动了。</p><p><img src="https://noahcodemonkey.top/images/img/Unity%E5%AE%98%E6%96%B9%E6%A1%88%E4%BE%8B/13.png" alt="诶呀，图片加载出了点问题！"></p><h3 id="相机跟随"><a href="#相机跟随" class="headerlink" title="相机跟随"></a>相机跟随</h3><p>让相机跟随 Player 一起运动，使相机和物体为关联关系但不是父子级别的关系，若是父子关系由于 Player 是球体运动时会滚动，所以相机也会随着 Player 的滚动而滚动，这不是我们需要的效果。</p><p>选择 Main Camera 物体用上文同样的方法添加 CameraController 脚本文件，然后拖至 Scripts文件夹中存放，双击脚本文件进行编辑。</p><p>脚本文件名：Camera Controller</p><p>代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CameraController</span> :</span> MonoBehaviour &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建一个公共的游戏物体，在Unity编辑器中可以将一个物体拖至脚本处的 player 的框中，脚本中就可以直接获取此物体，就不需要查找的步骤</span></span><br><span class="line"><span class="comment">//此处的功能就是将我们需要摄像机跟随的物体添加进去，也就是 Player</span></span><br><span class="line"><span class="keyword">public</span> GameObject player;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建一个变量，用来存储摄像机与物体 Player 未知的默认的差值</span></span><br><span class="line"><span class="keyword">private</span> Vector3 offSet;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Start</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//我们给 offSet 赋值，值的的大小为摄像机的 Position 三维向量的值减去 物体 Position 三维向量的值，也就是相机与物体之间的距离</span></span><br><span class="line">    offSet = transform.position - player.transform.position;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">LateUpdate</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//使我们的相机的位置永远位于物体的位置+ offSet 这个差值</span></span><br><span class="line">    transform.position = player.transform.position + offSet;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>脚本编写完后我们来到 Unity3D编辑器，选择 Main Camera 物体文件后会发现在脚本下方出现了一个叫 Player 的项，我们可以吧 Player 物体拖至后方的框子中，然后运行移动 Player 就会发现摄像机也在跟随着 Player 一起运动。</p><p><img src="https://noahcodemonkey.top/images/img/Unity%E5%AE%98%E6%96%B9%E6%A1%88%E4%BE%8B/14.png" alt="诶呀，图片加载出了点问题！"></p><h3 id="Pick-Up-的自转"><a href="#Pick-Up-的自转" class="headerlink" title="Pick Up 的自转"></a>Pick Up 的自转</h3><p>这次我们要完成的是将 Pick Up 旋转起来。</p><p>选择 Prefabes 中的 Pickup 物体，添加名为 Rotation 的脚本文件后拖至 Scripts 文件夹中，然后双击我们的脚本文件编辑我们的脚本。</p><p><img src="https://noahcodemonkey.top/images/img/Unity%E5%AE%98%E6%96%B9%E6%A1%88%E4%BE%8B/15.png" alt="诶呀，图片加载出了点问题！"></p><p>脚本文件名： Rotation</p><p>代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Rotation</span> :</span> MonoBehaviour &#123;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">FixedUpdate</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    transform.Rotate(<span class="keyword">new</span> Vector3(<span class="number">15</span>, <span class="number">30</span>, <span class="number">45</span>) * Time.deltaTime);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>回到 Unity 编辑器运行我们的游戏就可以看到 Pickup 开始自己转了起来。</p><h3 id="UI-的控制"><a href="#UI-的控制" class="headerlink" title="UI 的控制"></a>UI 的控制</h3><p>打开我们的 PlayerController 脚本，我们在其中编辑 UI 的控制脚本。</p><p>脚本文件名：PlayerController</p><p>代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="comment">//切记一定要调用 UI</span></span><br><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PlayerController</span> :</span> MonoBehaviour &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//public 公共的，会使此变量显示在 unity 编辑器中方便我们调节数值</span></span><br><span class="line"><span class="comment">//此处定义一个 speed 变量是为了控制 Player 的运动速度</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">float</span> speed;</span><br><span class="line"><span class="comment">//获取我们创建的 CountText</span></span><br><span class="line"><span class="keyword">public</span> Text countText;</span><br><span class="line"><span class="comment">//获取我们的创建的 WinText</span></span><br><span class="line"><span class="keyword">public</span> Text winText;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义个变量记录我们的得分</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> count;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Start</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">//调用我们的自定义函数 SetCount</span></span><br><span class="line">    SetCount();</span><br><span class="line">    <span class="comment">//初始化我们的winText里的文本为空，功能相当于隐藏了此文本</span></span><br><span class="line">    winText.text = <span class="string">""</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">FixedUpdate</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//获取横向要使 Player 位移的量</span></span><br><span class="line">    <span class="keyword">float</span> moveHorizontal = Input.GetAxis(<span class="string">"Horizontal"</span>);</span><br><span class="line">    <span class="comment">//获取纵向要使 Player 位移的量</span></span><br><span class="line">    <span class="keyword">float</span> moveVertical = Input.GetAxis(<span class="string">"Vertical"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义一个新的三维向量，来确定 Player 的运行方向</span></span><br><span class="line">    Vector3 movement = <span class="keyword">new</span> Vector3(moveHorizontal, <span class="number">0.0f</span>, moveVertical);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//给 Player 添加一个力使其运动，力的大小我们可以在 Unity 编辑器中编辑</span></span><br><span class="line">    <span class="comment">//这里再乘以一个Time.deltaTime是为了使 Player 完成的是每秒移动 speed 米，而不是每帧 speed 米，你们可以试试将这个Time.detalTime删去后 Player 的运行效果</span></span><br><span class="line">    GetComponent&lt;Rigidbody&gt;().AddForce(movement * Time.deltaTime * speed);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnTriggerEnter</span><span class="params">(Collider other)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//当 Player 碰到了物体的 Tag 名为 PickUp 的物体时运行 if 的程序</span></span><br><span class="line">    <span class="comment">//为何要加 Tag呢？因为 Player 在运行中会碰到很多东西，比如：地面、墙壁，这些都不是我想要销毁的物体，所以我们给我们需要销毁的物体添加个“名字”</span></span><br><span class="line">    <span class="keyword">if</span> (other.gameObject.tag == <span class="string">"PickUp"</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//销毁 Pickup</span></span><br><span class="line">        Destroy(other.gameObject);</span><br><span class="line">        <span class="comment">//分数+1</span></span><br><span class="line">        count += <span class="number">1</span>;</span><br><span class="line">        <span class="comment">//更新 CountText 的文本内容</span></span><br><span class="line">        SetCount();</span><br><span class="line">        <span class="comment">//当我们的分数大于我们定义的 Pickup 的个数(因为我创建了8个 Pickup，所以我的是 count &gt;= 8)</span></span><br><span class="line">        <span class="keyword">if</span> (count &gt;= <span class="number">8</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//给我们的 WinText 的文本内添加获胜内容，其功能也就是显示获胜信息</span></span><br><span class="line">            winText.text = <span class="string">"You Win!"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetCount</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//使我们的 CountText 显示分数，其格式为 Count：[分数]</span></span><br><span class="line">    countText.text = <span class="string">"Count:"</span> + count;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>保存我们的代码并打开 Unity 编辑器，选择 Player 物体后将我们的创建的 CountText 和 WinText 物体拖至 PlayerCOntroller 脚本下方相对应的地方，然后运行我们的游戏，此时我们的 Roll a ball 的游戏已经制作完成了。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li>我们写完代码一定要记得将我们需要使用到的物体挂上，不然运行时没有效果或者报错。</li><li>Tag 的添加一定要注意自己的大小写，在脚本添加中判断物体的 Tag 时一定要与我们创建的 Tag 完全一样。</li><li>其中游戏的实现可能会有很多种方法，自己可以翻阅 Unity 官方的脚本文档然后去尝试使用其他的一些方法来实现我们的游戏。</li><li>如果自己有能力，可以尝试改编游戏加入自己的想法，然后一一去实现它，这样对于我们的游戏开发很有帮助。</li><li>游戏开发其实很简单，但是如果想要真正的在这个领域成为“大牛”级别的人物，还需要很多很多的努力，我们一起坚持，一起努力！</li></ol><p><strong>欢迎大家收藏我的博客，我会努力更新更多的作品的，给自己加个油！</strong></p>]]></content>
    
    <summary type="html">
    
      Unity官方案例--Roll a ball
    
    </summary>
    
      <category term="教程" scheme="https://noahcodemonkey.top/categories/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Unity" scheme="https://noahcodemonkey.top/categories/%E6%95%99%E7%A8%8B/Unity/"/>
    
      <category term="官方案例" scheme="https://noahcodemonkey.top/categories/%E6%95%99%E7%A8%8B/Unity/%E5%AE%98%E6%96%B9%E6%A1%88%E4%BE%8B/"/>
    
    
      <category term="Unity" scheme="https://noahcodemonkey.top/tags/Unity/"/>
    
      <category term="官方案例" scheme="https://noahcodemonkey.top/tags/%E5%AE%98%E6%96%B9%E6%A1%88%E4%BE%8B/"/>
    
      <category term="Roll a ball" scheme="https://noahcodemonkey.top/tags/Roll-a-ball/"/>
    
  </entry>
  
  <entry>
    <title>Atom 插件备份--Sync Setting</title>
    <link href="https://noahcodemonkey.top/2018/11/15/Atom-%E6%8F%92%E4%BB%B6%E5%A4%87%E4%BB%BD-Sync-Setting/"/>
    <id>https://noahcodemonkey.top/2018/11/15/Atom-插件备份-Sync-Setting/</id>
    <published>2018-11-15T12:03:43.000Z</published>
    <updated>2019-03-11T03:13:20.490Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><img src="https://noahcodemonkey.top/images/img/Atom插件备份/header.png" alt="" style="width:100%"><p class="description">当我们使用的 Atom 插件装的越来越多，相关的配置也越来越个性化，一旦我们的电脑重装后就需要重新安装我们的开发环境，这将会是一件令人头疼的事情，但是现在我发现了一款备份的插件推荐给大家，它就是--Sync Setting。</p><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>打开我们的 Atom 在菜单栏 File 中找到 Settings 选项，选中的 Install 界面中搜索 Sync Setting 插件，然后点击 install 下载即可,之后可以在 Packages 中找打我们下载的所有插件。</p><p><img src="https://noahcodemonkey.top/images/img/Atom%E6%8F%92%E4%BB%B6%E5%A4%87%E4%BB%BD/1.png" alt="诶呀，图片加载出了点问题！"></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p><img src="https://noahcodemonkey.top/images/img/Atom%E6%8F%92%E4%BB%B6%E5%A4%87%E4%BB%BD/2.png" alt="诶呀，图片加载出了点问题！"></p><p>首先我们打开 Sync Setting 的插件配置界面看到，我们需要填写两个内容才可以备份，下面我就一步一步的教大家如何去完成。</p><p><strong>第一步：创建 personal access token</strong></p><p>打开我们的 GitHub，点击我们的头像选择 Settings 选项，在 Settings 界面中选择 Developer Settings，然后就看到我们需要找到的 Personal access tokens,然后点击右上角的 Generate new token 创建。</p><p><img src="https://noahcodemonkey.top/images/img/Atom%E6%8F%92%E4%BB%B6%E5%A4%87%E4%BB%BD/3.png" alt="诶呀，图片加载出了点问题！"></p><p><strong>注：一定要记得勾选gist选项</strong></p><p>点击左下角的 Generate token 创建，然后复制生成的 token 序列粘贴到 Sync Setting 配置界面图中的第一个输入框中。</p><p><img src="https://noahcodemonkey.top/images/img/Atom%E6%8F%92%E4%BB%B6%E5%A4%87%E4%BB%BD/4.png" alt="诶呀，图片加载出了点问题！"></p><p><strong>第二步：创建 gist</strong></p><p>还是点击我们的头像，选择 Your gists 后在输入框中随便输入点信息，然后点击 Create secret gist 创建一个gist。</p><p><img src="https://noahcodemonkey.top/images/img/Atom%E6%8F%92%E4%BB%B6%E5%A4%87%E4%BB%BD/5.png" alt="诶呀，图片加载出了点问题！"></p><p>gist创建成功后，我们复制生成的 gistID 将其粘贴到Sync Setting 配置界面图中的第二个输入框中。</p><p><img src="https://noahcodemonkey.top/images/img/Atom%E6%8F%92%E4%BB%B6%E5%A4%87%E4%BB%BD/6.png" alt="诶呀，图片加载出了点问题！"></p><p>以上就是我们的 Sync Setting 所有的配置操作了，那我们该如何备份呢？</p><p><strong>注：最好将两个数据备份一下，以便以后恢复用到。若没有备份需要恢复，可以看文章最下方的教程</strong></p><h2 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h2><p>打开我们 Atom 的文档编辑页面（Crtl + Shift + P），在其中输入”Syn”选中第二个 Backup 选项就可以开始备份了。</p><p><img src="https://noahcodemonkey.top/images/img/Atom%E6%8F%92%E4%BB%B6%E5%A4%87%E4%BB%BD/7.png" alt="诶呀，图片加载出了点问题！"><br>../imgs/img_01/img07.png<br>当 Atom 编辑器右上角出现绿色的备份成功的提示消息，就意味着我们的备份成功啦。</p><p><img src="https://noahcodemonkey.top/images/img/Atom%E6%8F%92%E4%BB%B6%E5%A4%87%E4%BB%BD/8.png" alt="诶呀，图片加载出了点问题！"></p><h2 id="恢复-备份"><a href="#恢复-备份" class="headerlink" title="恢复(备份)"></a>恢复(备份)</h2><p>在新的 Atom 编辑器中下载 Sync Setting 插件，在其配置界面中将我们备份的两个数据分别填入两个输入框中，打开我们 Atom 的文档编辑页面（Crtl + Shift + P），在其中输入”Syn”选中第三个 Restore 选项就可以恢复了。</p><p><img src="https://noahcodemonkey.top/images/img/Atom%E6%8F%92%E4%BB%B6%E5%A4%87%E4%BB%BD/9.png" alt="诶呀，图片加载出了点问题！"></p><h2 id="恢复-未备份"><a href="#恢复-未备份" class="headerlink" title="恢复(未备份)"></a>恢复(未备份)</h2><p>我们缺的就是两个数据就可以完成ifu操作了，所以我们只需要想方法获取到这两个数据就可以了。</p><h3 id="personal-access-token"><a href="#personal-access-token" class="headerlink" title="personal access token"></a>personal access token</h3><p>打开我们的 GitHub 找到我们之前创建的 personal access token(在Settings中,前面写的很详细)，然后会看到有个红色字体的按钮，它的意思是重新生成令牌，我们就可以重新生成一个令牌。</p><p><img src="https://noahcodemonkey.top/images/img/Atom%E6%8F%92%E4%BB%B6%E5%A4%87%E4%BB%BD/10.png" alt="诶呀，图片加载出了点问题！"></p><h3 id="GistID"><a href="#GistID" class="headerlink" title="GistID"></a>GistID</h3><p>打开我们的 GitHub 还是选择 Your gists 到达我们的 gist 的界面，然后选择我们的右上角的 See all of your gists ，找到我们之前创建的 gist。</p><p><img src="https://noahcodemonkey.top/images/img/Atom%E6%8F%92%E4%BB%B6%E5%A4%87%E4%BB%BD/11.png" alt="诶呀，图片加载出了点问题！"></p><p>然后我们点击 init.coffee，就到达了我们备份 Atom 插件信息的一个库.</p><p><img src="https://noahcodemonkey.top/images/img/Atom%E6%8F%92%E4%BB%B6%E5%A4%87%E4%BB%BD/12.png" alt="诶呀，图片加载出了点问题！"></p><p>之后我们以发现我们所需要的 gistID 就在我们的网址结尾处，直接将他复制过去即可。</p><p><img src="https://noahcodemonkey.top/images/img/Atom%E6%8F%92%E4%BB%B6%E5%A4%87%E4%BB%BD/13.png" alt="诶呀，图片加载出了点问题！"></p><p>现在我们所需要的两个数据全都有了，就可以开始我们的恢复操作了，不过在此还是推荐各位朋友记得备份一下，免得花这么多时间去找。</p><p><strong>欢迎大家收藏我的博客，我会努力更新更多的作品的，给自己加个油！</strong></p>]]></content>
    
    <summary type="html">
    
      Atom 备份插件--Sync Setting教程
    
    </summary>
    
      <category term="教程" scheme="https://noahcodemonkey.top/categories/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Atom" scheme="https://noahcodemonkey.top/categories/%E6%95%99%E7%A8%8B/Atom/"/>
    
      <category term="Sync Setting 备份插件" scheme="https://noahcodemonkey.top/categories/%E6%95%99%E7%A8%8B/Atom/Sync-Setting-%E5%A4%87%E4%BB%BD%E6%8F%92%E4%BB%B6/"/>
    
    
      <category term="Atom" scheme="https://noahcodemonkey.top/tags/Atom/"/>
    
      <category term="插件" scheme="https://noahcodemonkey.top/tags/%E6%8F%92%E4%BB%B6/"/>
    
      <category term="教程" scheme="https://noahcodemonkey.top/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Sync Setting" scheme="https://noahcodemonkey.top/tags/Sync-Setting/"/>
    
      <category term="备份" scheme="https://noahcodemonkey.top/tags/%E5%A4%87%E4%BB%BD/"/>
    
  </entry>
  
  <entry>
    <title>Markdown 的使用</title>
    <link href="https://noahcodemonkey.top/2018/11/15/Markdown%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://noahcodemonkey.top/2018/11/15/Markdown的使用/</id>
    <published>2018-11-15T11:57:31.000Z</published>
    <updated>2019-03-11T03:13:16.105Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><img src="https://noahcodemonkey.top/images/img/Markdown的使用/header.png" alt="" style="width:100%"><p class="description">Markdown 是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。</p><a id="more"></a><h2 id="Markdown语法介绍"><a href="#Markdown语法介绍" class="headerlink" title="Markdown语法介绍"></a>Markdown语法介绍</h2><h3 id="段落与换行"><a href="#段落与换行" class="headerlink" title="段落与换行"></a>段落与换行</h3><p>Markdown 中的段落指连续的一段文字，编写时段落之间用至少一个空行隔开，段落内多个空格将被视为一个空格，段首不支持缩进。</p><p>如果想要在显示时显示多个空行，可以插入 <code>&lt;br/&gt;</code> 来实现，注意的是，插入的 <code>&lt;br/&gt;</code> 应与前后的段落中间至少空一行。</p><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p>这是最为常用的格式，在平时常用的的文本编辑器中大多是这样实现的：输入文本、选中文本、设置标题格式。</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Markdown支持两种类型的标题,例如：</span><br><span class="line"></span><br><span class="line"><span class="comment">//类型 1</span></span><br><span class="line">这是一级标题</span><br><span class="line">==========</span><br><span class="line">这是二级标题</span><br><span class="line">----------</span><br><span class="line"></span><br><span class="line"><span class="comment">//类型 2</span></span><br><span class="line"># 这是一级标题</span><br><span class="line">## 这是二级标题</span><br><span class="line">...</span><br><span class="line">###### 这是六级标题</span><br></pre></td></tr></table></figure><p>从上面可以看出类型 1 是在标题下面插入 = 或者 - 来标识标题等级，但局限是其只能表示两个级别的标题。</p><p>类型 2 是在标题前面插入 1 - 6 个 # ，表示 6 个等级的标题，这是比较推荐的用法。</p><p>注：# 和「一级标题」之间建议保留一个字符的空格，这是最标准的 Markdown 写法。</p><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>列表格式也很常用，在 Markdown 中，你只需要在文字前面加上 -、+或 * 就可以了，例如：</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">- </span>文本1</span><br><span class="line"><span class="bullet">- </span>文本2</span><br><span class="line"><span class="bullet">- </span>文本3</span><br></pre></td></tr></table></figure><p>上面的 - 可以用 +、*替换。需要注意的是，- 等符号与后面的文字至少空一格空格。</p><p>如果你希望有序列表，<br>也可以在文字前面加上 1. 2. 3. 就可以了，例如：</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 文本<span class="number">1</span></span><br><span class="line"><span class="number">2.</span> 文本<span class="number">2</span></span><br><span class="line"><span class="number">3.</span> 文本<span class="number">3</span></span><br></pre></td></tr></table></figure><p>同无序列表一样，标记符号与后面的文字至少空一格空格。但编辑时的数字对显示无影响。</p><h3 id="代码区块"><a href="#代码区块" class="headerlink" title="代码区块"></a>代码区块</h3><p>缩进 4 个空格，需要注意的是，每行代码都需要至少缩进 4 个空格，不能像段落一样采用首行标记的偷懒写法，一个代码区会一直持续到没有缩进 4 个空格的那一行。</p><p>也可以用一对三个连续的撇号 ` 来包裹代码段，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这是一个代码区块。</span><br></pre></td></tr></table></figure><p>有的解释器还能根据代码的语言从而给代码加上语法高亮，例如：</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">func</span><span class="params">()</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure><h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><p>使用三个及以上的 *、 -或 _来表示一个分割线，符号不能混用，符号之间可以插入多个空格。需要注意的是，使用 - 来插入分割线时需要与上一个段落至少空一行，否则 Markdown 会将上一行文字解释为二级标题。</p><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p>表格是 Markdown 比较复杂的一种表示，例如：</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">|<span class="string"> Table </span>|<span class="string"> Col1 </span>|<span class="string"> Col2 </span>|</span><br><span class="line">|<span class="string"> ----- </span>|<span class="string">:----:</span>|<span class="string"> ----:</span>|</span><br><span class="line">|<span class="string"> Row1  </span>|<span class="string"> 1-1  </span>|<span class="string"> 1-2  </span>|</span><br><span class="line">|<span class="string"> Row2  </span>|<span class="string"> 2-1  </span>|<span class="string"> 2-2  </span>|</span><br><span class="line">|<span class="string"> Row3  </span>|<span class="string"> 3-1  </span>|<span class="string"> 3-2  </span>|</span><br></pre></td></tr></table></figure><p>注：上面第二行中的点代表对齐方式，分别是默认（居左）、居中、居右。</p><h3 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h3><p>Markdown 中有三种方式实现超链接,例如：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//方式 1</span><br><span class="line">[<span class="string">百度</span>](<span class="link">http://www.baidu.com</span>)</span><br></pre></td></tr></table></figure><p>方式 1 较为常用，也可以为链接的文字加上提示文字，只要在括号中超链接加上空格后添加提示内容即可，例如：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">百度</span>](<span class="link">http://www.baidu.com "这是提示文字"</span>)</span><br></pre></td></tr></table></figure><p>方式 2 由链接文字和链接地址组成，不同的是两者均由 [] 包裹。链接地址的格式为：</p><ul><li>方括号，里面输入链接地址；</li><li>紧接着是一个冒号；</li><li>冒号后面至少一个空格；</li><li>链接地址；</li><li>若有提示文字，空格后用引号或者括号包裹提示文字。</li></ul><p>下面是完整示例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//方式 2</span><br><span class="line">[<span class="string">百度</span>][<span class="symbol">Baidu-url</span>]</span><br><span class="line">[<span class="symbol">Baidu-url</span>]: <span class="link">http://www.baidu.com</span></span><br></pre></td></tr></table></figure><p>第三种方式是用 &lt;&gt; 来包裹 URL。</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方式 3</span></span><br><span class="line">&lt;<span class="string">http:</span><span class="comment">//www.baidu.com&gt;</span></span><br></pre></td></tr></table></figure><h2 id="加粗和斜体"><a href="#加粗和斜体" class="headerlink" title="加粗和斜体"></a>加粗和斜体</h2><p>Markdown 使用 * 和 _ 来表示粗体和斜体,例如：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//加粗</span></span><br><span class="line"><span class="comment">**这是加粗文字**</span></span><br><span class="line">__这也是加粗文字__</span><br><span class="line"></span><br><span class="line"><span class="comment">//斜体</span></span><br><span class="line"><span class="comment">*这是斜体文字*</span></span><br><span class="line">_这也是斜体文字_</span><br></pre></td></tr></table></figure><p>被偶数个 * 或 _ 包裹的文字显示加粗效果，被奇数个包裹的为倾斜效果。</p><p>需要注意的是，* 和 - 要成对出现，不能混合使用，也不能只出现一个。同时，标识符号要与标识的文字紧挨着，符号与符号之间、符号文字之间不能有任何空格。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>使用 ` (撇号) 来包裹一小段代码，例如：</p><figure class="highlight sml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">'hello</span> world'</span><br></pre></td></tr></table></figure><p>若想在代码中添加撇号，可以使用多个撇号包裹里面需要添加的撇号，但注意里面的连续的撇号数量不能超过外面的数量,例如:</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//显示一个撇号</span></span><br><span class="line">`` ` ``</span><br></pre></td></tr></table></figure><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><p>图片的插入方式跟超链接前两种插入方式类似，例如：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//方式 1</span><br><span class="line">![<span class="string">如果图片不能显示，就显示这段文字</span>](<span class="link">图片 url</span>)</span><br><span class="line"></span><br><span class="line">//方式 2</span><br><span class="line">![<span class="string">如果图片不能显示，就显示这段文字</span>][<span class="symbol">Image-url</span>]</span><br><span class="line">[<span class="symbol">Image-url</span>]: <span class="link">图片url "这是提示文字"</span></span><br></pre></td></tr></table></figure><h3 id="反斜杠"><a href="#反斜杠" class="headerlink" title="反斜杠"></a>反斜杠</h3><p>我们经常需要在文章中插入一些特殊符号，而这些符号恰好是前面所讲的标识符号，可以在特殊符号前插入 \ 来直接显示符号，而不让 Markdown 来将其解释为标识符号。</p><p>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">\   反斜线</span><br><span class="line">`   反引号</span><br><span class="line"><span class="bullet">*   </span>星号</span><br><span class="line">_   底线</span><br><span class="line">&#123;&#125;  花括号</span><br><span class="line">[]  方括号</span><br><span class="line">()  括弧</span><br><span class="line"><span class="section">#   井字号</span></span><br><span class="line"><span class="bullet">+   </span>加号</span><br><span class="line"><span class="bullet">-   </span>减号</span><br><span class="line">.   英文句点</span><br><span class="line">!   惊叹号</span><br></pre></td></tr></table></figure><h2 id="Markdown编辑器"><a href="#Markdown编辑器" class="headerlink" title="Markdown编辑器"></a>Markdown编辑器</h2><p>支持Markdown的编辑器有好多，功能也不完全一致，有的是用来进行基本的写作，有的是用来写代码的，有的甚至只是博客平台配套的编辑器。</p><p>我个人用过一个都很不错，在这儿推荐一下</p><h4 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h4><ul><li>Markdown Pad 2（Pro版要收费，网上有注册码）</li><li>Atom （个人主推，免费，颜值高，还可以安装各式各样的插件）</li></ul><h4 id="Mac"><a href="#Mac" class="headerlink" title="Mac"></a>Mac</h4><ul><li>MacDown</li></ul><p><strong>欢迎大家收藏我的博客，我会努力更新更多的作品的，给自己加个油！</strong></p>]]></content>
    
    <summary type="html">
    
      Markdown语法教程
    
    </summary>
    
      <category term="教程" scheme="https://noahcodemonkey.top/categories/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Markdown语法" scheme="https://noahcodemonkey.top/categories/%E6%95%99%E7%A8%8B/Markdown%E8%AF%AD%E6%B3%95/"/>
    
    
      <category term="教程" scheme="https://noahcodemonkey.top/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Markdown" scheme="https://noahcodemonkey.top/tags/Markdown/"/>
    
      <category term="语法" scheme="https://noahcodemonkey.top/tags/%E8%AF%AD%E6%B3%95/"/>
    
  </entry>
  
</feed>
